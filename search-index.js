var searchIndex = {};
searchIndex["alga"] = {"doc":"Traits for algebra.","items":[[0,"general","alga","Fundamental algebraic structures.",null,null],[3,"Additive","alga::general","The addition operator, commonly symbolized by `+`.",null,null],[3,"Multiplicative","","The multiplication operator, commonly symbolized by `Ã—`.",null,null],[3,"Id","","The universal identity element wrt. a given operator, usually noted `Id` with a context-dependent subscript.",null,null],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Creates a new identity element.",0,{"o":{"n":"id"}}],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"id"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"id"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",0,{"i":[{"n":"self"},{"n":"id"}],"o":{"g":["ordering"],"n":"option"}}],[11,"identity","","",0,{"o":{"n":"id"}}],[11,"default_epsilon","","",0,null],[11,"default_max_relative","","",0,null],[11,"default_max_ulps","","",0,{"o":{"n":"u32"}}],[11,"relative_eq","","",0,null],[11,"ulps_eq","","",0,null],[11,"mul","","",0,{"i":[{"n":"self"},{"n":"id"}],"o":{"n":"id"}}],[11,"mul_assign","","",0,{"i":[{"n":"self"},{"n":"id"}]}],[11,"div","","",0,{"i":[{"n":"self"},{"n":"id"}],"o":{"n":"id"}}],[11,"div_assign","","",0,{"i":[{"n":"self"},{"n":"id"}]}],[11,"add","","",0,{"i":[{"n":"self"},{"n":"id"}],"o":{"n":"id"}}],[11,"add_assign","","",0,{"i":[{"n":"self"},{"n":"id"}]}],[11,"operate","","",0,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"id"}}],[11,"inverse","","",0,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"inverse_mut","","",0,{"i":[{"n":"self"}]}],[11,"one","","",0,{"o":{"n":"id"}}],[11,"zero","","",0,{"o":{"n":"id"}}],[11,"is_zero","","",0,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"to_superset","","",0,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"is_in_subset","","",0,{"i":[{"n":"t"}],"o":{"n":"bool"}}],[11,"from_superset_unchecked","","",0,{"i":[{"n":"t"}],"o":{"n":"self"}}],[11,"meet","","",0,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[11,"join","","",0,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"additive"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"multiplicative"}}],[11,"operator_token","","",1,{"o":{"n":"self"}}],[11,"operator_token","","",2,{"o":{"n":"self"}}],[8,"ClosedAdd","","[Alias] Trait alias for `Add` and `AddAsign` with result of type `Self`.",null,null],[8,"ClosedDiv","","[Alias] Trait alias for `Div` and `DivAsign` with result of type `Self`.",null,null],[8,"ClosedMul","","[Alias] Trait alias for `Mul` and `MulAsign` with result of type `Self`.",null,null],[8,"ClosedNeg","","[Alias] Trait alias for `Neg` with result of type `Self`.",null,null],[8,"ClosedSub","","[Alias] Trait alias for `Sub` and `SubAsign` with result of type `Self`.",null,null],[8,"Inverse","","Trait used to define the inverse element relative to the given operator.",null,null],[10,"inverse","","Returns the inverse of `self`, relative to the operator `O`.",3,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"inverse_mut","","In-place inversin of `self`.",3,{"i":[{"n":"self"}]}],[8,"Operator","","Trait implemented by types representing abstract operators.",null,null],[10,"operator_token","","Returns the structure that identifies the operator.",4,{"o":{"n":"self"}}],[8,"Identity","","A type that is equipped with identity.",null,null],[10,"identity","","The identity element.",5,{"o":{"n":"self"}}],[11,"id","","Specific identity.",5,{"i":[{"n":"o"}],"o":{"n":"self"}}],[8,"SubsetOf","","Nested sets and conversions between them (using an injective mapping). Useful to work with substructures. In generic code, it is preferable to use `SupersetOf` as trait bound whenever possible instead of `SubsetOf` (because SupersetOf is automatically implemented whenever `SubsetOf` is).",null,null],[10,"to_superset","","The inclusion map: converts `self` to the equivalent element of its superset.",6,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"from_superset","","The inverse inclusion map: attempts to construct `self` from the equivalent element of its superset.",6,{"i":[{"n":"t"}],"o":{"n":"option"}}],[10,"from_superset_unchecked","","Use with care! Same as `self.to_superset` but without any property checks. Always succeeds.",6,{"i":[{"n":"t"}],"o":{"n":"self"}}],[10,"is_in_subset","","Checks if `element` is actually part of the subset `Self` (and can be converted to it).",6,{"i":[{"n":"t"}],"o":{"n":"bool"}}],[8,"SupersetOf","","Nested sets and conversions between them. Useful to work with substructures. It is preferable to implement the `SupersetOf` trait instead of `SubsetOf` whenever possible (because `SupersetOf` is automatically implemented whenever `SubsetOf` is.",null,null],[11,"to_subset","","The inverse inclusion map: attempts to construct `self` from the equivalent element of its superset.",7,{"i":[{"n":"self"}],"o":{"n":"option"}}],[10,"is_in_subset","","Checks if `self` is actually part of its subset `T` (and can be converted to it).",7,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[10,"to_subset_unchecked","","Use with care! Same as `self.to_subset` but without any property checks. Always succeeds.",7,{"i":[{"n":"self"}],"o":{"n":"t"}}],[10,"from_subset","","The inclusion map: converts `self` to the equivalent element of its superset.",7,{"i":[{"n":"t"}],"o":{"n":"self"}}],[8,"AbstractGroup","","A group is a loop and a monoid at the same time.",null,null],[8,"AbstractGroupAbelian","","An commutative group.",null,null],[11,"prop_is_commutative_approx","","Returns `true` if the operator is commutative for the given argument tuple. Approximate equality is used for verifications.",8,null],[11,"prop_is_commutative","","Returns `true` if the operator is commutative for the given argument tuple.",8,null],[8,"AbstractLoop","","A quasigroup with an unique identity element.",null,null],[8,"AbstractMagma","","Types that are closed under a given operator.",null,null],[10,"operate","","Performs an operation.",9,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[11,"op","","Performs specific operation.",9,{"i":[{"n":"self"},{"n":"o"},{"n":"self"}],"o":{"n":"self"}}],[8,"AbstractMonoid","","A semigroup equipped with an identity element.",null,null],[11,"prop_operating_identity_element_is_noop_approx","","Checks whether operating with the identity element is a no-op for the given argument. Approximate equality is used for verifications.",10,null],[11,"prop_operating_identity_element_is_noop","","Checks whether operating with the identity element is a no-op for the given argument.",10,null],[8,"AbstractQuasigroup","","A magma with the divisibility property.",null,null],[11,"prop_inv_is_latin_square_approx","","Returns `true` if latin squareness holds for the given arguments. Approximate equality is used for verifications.",11,null],[11,"prop_inv_is_latin_square","","Returns `true` if latin squareness holds for the given arguments.",11,null],[8,"AbstractSemigroup","","An associative magma.",null,null],[11,"prop_is_associative_approx","","Returns `true` if associativity holds for the given arguments. Approximate equality is used for verifications.",12,null],[11,"prop_is_associative","","Returns `true` if associativity holds for the given arguments.",12,null],[8,"AbstractField","","A field is a commutative ring, and an abelian group under both operators.",null,null],[8,"AbstractRing","","A ring is the combination of an abelian group and a multiplicative monoid structure.",null,null],[11,"prop_mul_and_add_are_distributive_approx","","Returns `true` if the multiplication and addition operators are distributive for the given argument tuple. Approximate equality is used for verifications.",13,null],[11,"prop_mul_and_add_are_distributive","","Returns `true` if the multiplication and addition operators are distributive for the given argument tuple.",13,null],[8,"AbstractRingCommutative","","A ring with a commutative multiplication.",null,null],[11,"prop_mul_is_commutative_approx","","Returns `true` if the multiplication operator is commutative for the given argument tuple. Approximate equality is used for verifications.",14,null],[11,"prop_mul_is_commutative","","Returns `true` if the multiplication operator is commutative for the given argument tuple.",14,null],[8,"AbstractModule","","A module combines two sets: one with an abelian group structure and another with a commutative ring structure.",null,null],[16,"AbstractRing","","The underlying scalar field.",15,null],[10,"multiply_by","","Multiplies an element of the ring with an element of the module.",15,null],[8,"JoinSemilattice","","A set where every two elements have a suppremum (i.e. smallest upper bound).",null,null],[10,"join","","Returns the join (aka. supremum) of two values.",16,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[8,"Lattice","","Partially orderable sets where every two elements have a suppremum and infimum.",null,null],[11,"meet_join","","Returns the infimum and the supremum simultaneously.",17,null],[11,"partial_min","","Return the minimum of `self` and `other` if they are comparable.",17,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"option"}}],[11,"partial_max","","Return the maximum of `self` and `other` if they are comparable.",17,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"option"}}],[11,"partial_sort2","","Sorts two values in increasing order using a partial ordering.",17,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"option"}}],[11,"partial_clamp","","Clamp `value` between `min` and `max`. Returns `None` if `value` is not comparable to `min` or `max`.",17,{"i":[{"n":"self"},{"n":"self"},{"n":"self"}],"o":{"n":"option"}}],[8,"MeetSemilattice","","A set where every two elements have an infimum (i.e. greatest lower bound).",null,null],[10,"meet","","Returns the meet (aka. infimum) of two values.",18,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[8,"AdditiveGroup","","[Alias] Algebraic structure specialized for one kind of operation.",null,null],[8,"AdditiveGroupAbelian","","[Alias] Algebraic structure specialized for one kind of operation.",null,null],[8,"AdditiveLoop","","[Alias] Algebraic structure specialized for one kind of operation.",null,null],[8,"AdditiveMagma","","[Alias] Algebraic structure specialized for one kind of operation.",null,null],[8,"AdditiveMonoid","","[Alias] Algebraic structure specialized for one kind of operation.",null,null],[8,"AdditiveQuasigroup","","[Alias] Algebraic structure specialized for one kind of operation.",null,null],[8,"AdditiveSemigroup","","[Alias] Algebraic structure specialized for one kind of operation.",null,null],[8,"Field","","[Alias] Algebraic structure specialized for one kind of operation.",null,null],[8,"Module","","A module which overloads the `*` and `+` operators.",null,null],[16,"Ring","","The underlying scalar field.",19,null],[8,"MultiplicativeGroup","","[Alias] Algebraic structure specialized for one kind of operation.",null,null],[8,"MultiplicativeGroupAbelian","","[Alias] Algebraic structure specialized for one kind of operation.",null,null],[8,"MultiplicativeLoop","","[Alias] Algebraic structure specialized for one kind of operation.",null,null],[8,"MultiplicativeMagma","","[Alias] Algebraic structure specialized for one kind of operation.",null,null],[8,"MultiplicativeMonoid","","[Alias] Algebraic structure specialized for one kind of operation.",null,null],[8,"MultiplicativeQuasigroup","","[Alias] Algebraic structure specialized for one kind of operation.",null,null],[8,"MultiplicativeSemigroup","","[Alias] Algebraic structure specialized for one kind of operation.",null,null],[8,"Ring","","[Alias] Algebraic structure specialized for one kind of operation.",null,null],[8,"RingCommutative","","[Alias] Algebraic structure specialized for one kind of operation.",null,null],[8,"Real","","Trait shared by all reals.",null,null],[10,"floor","","",20,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"ceil","","",20,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"round","","",20,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"trunc","","",20,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"fract","","",20,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"abs","","",20,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"signum","","",20,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"is_sign_positive","","",20,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[10,"is_sign_negative","","",20,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[10,"mul_add","","",20,{"i":[{"n":"self"},{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[10,"recip","","",20,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"powi","","",20,{"i":[{"n":"self"},{"n":"i32"}],"o":{"n":"self"}}],[10,"powf","","",20,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[10,"sqrt","","",20,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"exp","","",20,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"exp2","","",20,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"ln","","",20,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"log","","",20,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[10,"log2","","",20,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"log10","","",20,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"max","","",20,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[10,"min","","",20,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[10,"cbrt","","",20,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"hypot","","",20,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[10,"sin","","",20,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"cos","","",20,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"tan","","",20,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"asin","","",20,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"acos","","",20,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"atan","","",20,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"atan2","","",20,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[10,"sin_cos","","",20,null],[10,"exp_m1","","",20,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"ln_1p","","",20,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"sinh","","",20,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"cosh","","",20,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"tanh","","",20,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"asinh","","",20,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"acosh","","",20,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"atanh","","",20,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"pi","","",20,{"o":{"n":"self"}}],[10,"two_pi","","",20,{"o":{"n":"self"}}],[10,"frac_pi_2","","",20,{"o":{"n":"self"}}],[10,"frac_pi_3","","",20,{"o":{"n":"self"}}],[10,"frac_pi_4","","",20,{"o":{"n":"self"}}],[10,"frac_pi_6","","",20,{"o":{"n":"self"}}],[10,"frac_pi_8","","",20,{"o":{"n":"self"}}],[10,"frac_1_pi","","",20,{"o":{"n":"self"}}],[10,"frac_2_pi","","",20,{"o":{"n":"self"}}],[10,"frac_2_sqrt_pi","","",20,{"o":{"n":"self"}}],[10,"e","","",20,{"o":{"n":"self"}}],[10,"log2_e","","",20,{"o":{"n":"self"}}],[10,"log10_e","","",20,{"o":{"n":"self"}}],[10,"ln_2","","",20,{"o":{"n":"self"}}],[10,"ln_10","","",20,{"o":{"n":"self"}}],[0,"linear","alga","Traits dedicated to linear algebra.",null,null],[11,"transform_point","alga::general","",0,{"i":[{"n":"self"},{"n":"e"}],"o":{"n":"e"}}],[11,"transform_vector","","",0,null],[11,"inverse_transform_point","","",0,{"i":[{"n":"self"},{"n":"e"}],"o":{"n":"e"}}],[11,"inverse_transform_vector","","",0,null],[11,"decompose","","",0,null],[11,"append_translation","","",0,null],[11,"prepend_translation","","",0,null],[11,"append_rotation","","",0,null],[11,"prepend_rotation","","",0,null],[11,"append_scaling","","",0,null],[11,"prepend_scaling","","",0,null],[11,"translation","","",0,null],[11,"rotation","","",0,null],[11,"scaling","","",0,null],[11,"powf","","",0,null],[11,"rotation_between","","",0,null],[11,"scaled_rotation_between","","",0,null],[11,"to_vector","","",0,null],[11,"from_vector","","",0,null],[8,"AffineSpace","alga::linear","A set points associated with a vector space and a transitive and free additive group action (the translation).",null,null],[16,"Translation","","The associated vector space.",21,null],[11,"translate_by","","Same as `*self + *t`. Applies the additive group action of this affine space's associated vector space on `self`.",21,null],[11,"subtract","","Same as `*self - *other`. Returns the unique element `v` of the associated vector space such that `self = right + v`.",21,null],[8,"EuclideanSpace","","The finite-dimensional affine space based on the field of reals.",null,null],[16,"Coordinates","","The underlying finite vector space.",22,null],[16,"Real","","The underlying reals.",22,null],[10,"origin","","The preferred origin of this euclidean space.",22,{"o":{"n":"self"}}],[11,"scale_by","","Multiplies the distance of this point to `Self::origin()` by `s`.",22,null],[11,"coordinates","","The coordinates of this point, i.e., the translation from the origin.",22,null],[11,"from_coordinates","","Builds a point from its coordinates relative to the origin.",22,null],[11,"distance_squared","","The distance between two points.",22,null],[11,"distance","","The distance between two points.",22,null],[8,"FiniteDimInnerSpace","","A finite-dimensional vector space equipped with an inner product that must coincide with the dot product.",null,null],[10,"orthonormalize","","Orthonormalizes the given family of vectors. The largest free family of vectors is moved at the beginning of the array and its size is returned. Vectors at an indices larger or equal to this length can be modified to an arbitrary value.",23,null],[10,"orthonormal_subspace_basis","","Applies the given closure to each element of the orthonormal basis of the subspace orthogonal to free family of vectors `vs`. If `vs` is not a free family, the result is unspecified.",23,null],[8,"FiniteDimVectorSpace","","A finite-dimensional vector space.",null,null],[10,"dimension","","The vector space dimension.",24,{"o":{"n":"usize"}}],[11,"canonical_basis","","Applies the given closule to each element of this vector space's canonical basis. Stops if `f` returns `false`.",24,{"i":[{"n":"f"}]}],[10,"canonical_basis_element","","The i-the canonical basis element.",24,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[10,"dot","","The dot product between two vectors.",24,null],[10,"component_unchecked","","Same as `&self[i]` but without bound-checking.",24,null],[10,"component_unchecked_mut","","Same as `&mut self[i]` but without bound-checking.",24,null],[8,"InnerSpace","","A vector space aquipped with an inner product.",null,null],[16,"Real","","The result of inner product (same as the field used by this vector space).",25,null],[10,"inner_product","","Computes the inner product of `self` with `other`.",25,null],[11,"angle","","Measures the angle between two vectors.",25,null],[8,"NormedSpace","","A normed vector space.",null,null],[10,"norm_squared","","The squared norm of this vector.",26,null],[10,"norm","","The norm of this vector.",26,null],[10,"normalize","","Returns a normalized version of this vector.",26,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"normalize_mut","","Normalizes this vector in-place and returns its norm.",26,null],[10,"try_normalize","","Returns a normalized version of this vector unless its norm as smaller or equal to `eps`.",26,null],[10,"try_normalize_mut","","Normalizes this vector in-place or does nothing if its norm is smaller or equal to `eps`.",26,null],[8,"VectorSpace","","A vector space has a module structure over a field instead of a ring.",null,null],[16,"Field","","The underlying scalar field.",27,null],[8,"AffineTransformation","","The group of affine transformations. They are decomposable into a rotation, a non-uniform scaling, a second rotation, and a translation (applied in that order).",null,null],[16,"Rotation","","Type of the first rotation to be applied.",28,null],[16,"NonUniformScaling","","Type of the non-uniform scaling to be applied.",28,null],[16,"Translation","","The type of the pure translation part of this affine transformation.",28,null],[10,"decompose","","Decomposes this affine transformation into a rotation followed by a non-uniform scaling, followed by a rotation, followed by a translation.",28,null],[10,"append_translation","","Appends a translation to this similarity.",28,null],[10,"prepend_translation","","Prepends a translation to this similarity.",28,null],[10,"append_rotation","","Appends a rotation to this similarity.",28,null],[10,"prepend_rotation","","Prepends a rotation to this similarity.",28,null],[10,"append_scaling","","Appends a scaling factor to this similarity.",28,null],[10,"prepend_scaling","","Prepends a scaling factor to this similarity.",28,null],[11,"append_rotation_wrt_point","","Appends to this similarity a rotation centered at the point `p`, i.e., this point is left invariant.",28,null],[8,"DirectIsometry","","Subgroups of the orientation-preserving isometry group `SE(n)`, i.e., rotations and translations.",null,null],[8,"Isometry","","Subgroups of the isometry group `E(n)`, i.e., rotations, reflexions, and translations.",null,null],[8,"OrthogonalTransformation","","Subgroups of the n-dimensional rotations and scaling `O(n)`.",null,null],[8,"ProjectiveTransformation","","The most general form of inversible transformations on an euclidean space.",null,null],[10,"inverse_transform_point","","Applies this group's inverse action on a point from the euclidean space.",29,{"i":[{"n":"self"},{"n":"e"}],"o":{"n":"e"}}],[10,"inverse_transform_vector","","Applies this group's inverse action on a vector from the euclidean space.",29,null],[8,"Rotation","","Subgroups of the n-dimensional rotation group `SO(n)`.",null,null],[10,"powf","","Raises this rotation to a power. If this is a simple rotation, the result must be equivalent to multiplying the rotation angle by `n`.",30,null],[10,"rotation_between","","Computes a simple rotation that makes the angle between `a` and `b` equal to zero, i.e., `b.angle(a * delta_rotation(a, b)) = 0`. If `a` and `b` are collinear, the computed rotation may not be unique. Returns `None` if no such simple rotation exists in the subgroup represented by `Self`.",30,null],[10,"scaled_rotation_between","","Computes the rotation between `a` and `b` and raises it to the power `n`.",30,null],[8,"Scaling","","Subgroups of the (signed) uniform scaling group.",null,null],[11,"to_real","","Converts this scaling factor to a real. Same as `self.to_superset()`.",31,null],[11,"from_real","","Attempts to convert a real to an element of this scaling subgroup. Same as `Self::from_superset()`. Returns `None` if no such scaling is possible for this subgroup.",31,null],[11,"powf","","Raises the scaling to a power. The result must be equivalent to `self.to_superset().powf(n)`. Returns `None` if the result is not representable by `Self`.",31,null],[11,"scale_between","","The scaling required to make `a` have the same norm as `b`, i.e., `|b| = |a| * norm_ratio(a, b)`.",31,null],[8,"Similarity","","Subgroups of the similarity group `S(n)`, i.e., rotations, translations, and (signed) uniform scaling.",null,null],[16,"Scaling","","The type of the pure (uniform) scaling part of this similarity transformation.",32,null],[10,"translation","","The pure translational component of this similarity transformation.",32,null],[10,"rotation","","The pure rotational component of this similarity transformation.",32,null],[10,"scaling","","The pure scaling component of this similarity transformation.",32,null],[11,"translate_point","","Applies this transformation's pure translational part to a point.",32,{"i":[{"n":"self"},{"n":"e"}],"o":{"n":"e"}}],[11,"rotate_point","","Applies this transformation's pure rotational part to a point.",32,{"i":[{"n":"self"},{"n":"e"}],"o":{"n":"e"}}],[11,"scale_point","","Applies this transformation's pure scaling part to a point.",32,{"i":[{"n":"self"},{"n":"e"}],"o":{"n":"e"}}],[11,"rotate_vector","","Applies this transformation's pure rotational part to a vector.",32,null],[11,"scale_vector","","Applies this transformation's pure scaling part to a vector.",32,null],[11,"inverse_translate_point","","Applies this transformation inverse's pure translational part to a point.",32,{"i":[{"n":"self"},{"n":"e"}],"o":{"n":"e"}}],[11,"inverse_rotate_point","","Applies this transformation inverse's pure rotational part to a point.",32,{"i":[{"n":"self"},{"n":"e"}],"o":{"n":"e"}}],[11,"inverse_scale_point","","Applies this transformation inverse's pure scaling part to a point.",32,{"i":[{"n":"self"},{"n":"e"}],"o":{"n":"e"}}],[11,"inverse_rotate_vector","","Applies this transformation inverse's pure rotational part to a vector.",32,null],[11,"inverse_scale_vector","","Applies this transformation inverse's pure scaling part to a vector.",32,null],[8,"Transformation","","A general transformation acting on an euclidean space. It may not be inversible.",null,null],[10,"transform_point","","Applies this group's action on a point from the euclidean space.",33,{"i":[{"n":"self"},{"n":"e"}],"o":{"n":"e"}}],[10,"transform_vector","","Applies this group's action on a vector from the euclidean space.",33,null],[8,"Translation","","Subgroups of the n-dimensional translation group `T(n)`.",null,null],[10,"to_vector","","Converts this translation to a vector.",34,null],[10,"from_vector","","Attempts to convert a vector to this translation. Returns `None` if the translation represented by `v` is not part of the translation subgroup represented by `Self`.",34,null],[11,"powf","","Raises the translation to a power. The result must be equivalent to `self.to_superset() * n`.  Returns `None` if the result is not representable by `Self`.",34,null],[11,"translation_between","","The translation needed to make `a` coincide with `b`, i.e., `b = a * translation_to(a, b)`.",34,{"i":[{"n":"e"},{"n":"e"}],"o":{"n":"option"}}],[8,"InversibleSquareMatrix","","The group of inversible matrix. Commonly known as the General Linear group `GL(n)` by algebraists.",null,null],[8,"Matrix","","The space of all matrices.",null,null],[16,"Field","","The underlying field.",35,null],[16,"Row","","The type of rows of this matrix.",35,null],[16,"Column","","The type of columns of this matrix.",35,null],[16,"Transpose","","The type of the transposed matrix.",35,null],[10,"nrows","","The number of rows of this matrix.",35,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[10,"ncolumns","","The number of columns of this matrix.",35,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[10,"row","","The i-th row of this matrix.",35,null],[10,"column","","The i-th column of this matrix.",35,null],[10,"get_unchecked","","Gets the component at row `i` and column `j` of this matrix without bound checking.",35,null],[11,"get","","Gets the component at row `i` and column `j` of this matrix.",35,null],[10,"transpose","","Transposes this matrix.",35,null],[8,"MatrixMut","","The space of all matrices that are stable under modifications of its components, rows and columns.",null,null],[11,"set_row","","Sets the i-th row of this matrix.",36,null],[10,"set_row_mut","","In-place sets the i-th row of this matrix.",36,null],[11,"set_column","","Sets the i-th col of this matrix.",36,null],[10,"set_column_mut","","In-place sets the i-th col of this matrix.",36,null],[10,"set_unchecked","","Sets the component at row `i` and column `j` of this matrix without bound checking.",36,null],[11,"set","","Sets the component at row `i` and column `j` of this matrix.",36,null],[8,"SquareMatrix","","The monoid of all square matrices, including non-inversible ones.",null,null],[16,"Vector","","The type of rows, column, and diagonal of this matrix.",37,null],[10,"diagonal","","The diagonal of this matrix.",37,null],[10,"determinant","","The determinant of this matrix.",37,null],[10,"try_inverse","","Attempts to inverse `self`.",37,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"dimension","","The number of rows or column of this matrix.",37,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"transpose_mut","","In-place transposition.",37,{"i":[{"n":"self"}]}],[8,"SquareMatrixMut","","The monoid of all mutable square matrices that are stable under modification of its diagonal.",null,null],[10,"from_diagonal","","Constructs a new diagonal matrix.",38,null],[11,"set_diagonal","","Sets the matrix diagonal.",38,null],[10,"set_diagonal_mut","","In-place sets the matrix diagonal.",38,null],[11,"op","alga::general","Performs specific operation.",9,{"i":[{"n":"self"},{"n":"o"},{"n":"self"}],"o":{"n":"self"}}],[11,"prop_inv_is_latin_square_approx","","Returns `true` if latin squareness holds for the given arguments. Approximate equality is used for verifications.",11,null],[11,"prop_inv_is_latin_square","","Returns `true` if latin squareness holds for the given arguments.",11,null],[11,"prop_is_associative_approx","","Returns `true` if associativity holds for the given arguments. Approximate equality is used for verifications.",12,null],[11,"prop_is_associative","","Returns `true` if associativity holds for the given arguments.",12,null],[11,"prop_operating_identity_element_is_noop_approx","","Checks whether operating with the identity element is a no-op for the given argument. Approximate equality is used for verifications.",10,null],[11,"prop_operating_identity_element_is_noop","","Checks whether operating with the identity element is a no-op for the given argument.",10,null],[11,"prop_is_commutative_approx","","Returns `true` if the operator is commutative for the given argument tuple. Approximate equality is used for verifications.",8,null],[11,"prop_is_commutative","","Returns `true` if the operator is commutative for the given argument tuple.",8,null],[11,"prop_mul_and_add_are_distributive_approx","","Returns `true` if the multiplication and addition operators are distributive for the given argument tuple. Approximate equality is used for verifications.",13,null],[11,"prop_mul_and_add_are_distributive","","Returns `true` if the multiplication and addition operators are distributive for the given argument tuple.",13,null],[11,"prop_mul_is_commutative_approx","","Returns `true` if the multiplication operator is commutative for the given argument tuple. Approximate equality is used for verifications.",14,null],[11,"prop_mul_is_commutative","","Returns `true` if the multiplication operator is commutative for the given argument tuple.",14,null],[11,"id","","Specific identity.",5,{"i":[{"n":"o"}],"o":{"n":"self"}}],[11,"inverse_mut","","In-place inversin of `self`.",3,{"i":[{"n":"self"}]}],[11,"meet_join","","Returns the infimum and the supremum simultaneously.",17,null],[11,"partial_min","","Return the minimum of `self` and `other` if they are comparable.",17,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"option"}}],[11,"partial_max","","Return the maximum of `self` and `other` if they are comparable.",17,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"option"}}],[11,"partial_sort2","","Sorts two values in increasing order using a partial ordering.",17,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"option"}}],[11,"partial_clamp","","Clamp `value` between `min` and `max`. Returns `None` if `value` is not comparable to `min` or `max`.",17,{"i":[{"n":"self"},{"n":"self"},{"n":"self"}],"o":{"n":"option"}}],[11,"from_superset","","The inverse inclusion map: attempts to construct `self` from the equivalent element of its superset.",6,{"i":[{"n":"t"}],"o":{"n":"option"}}],[11,"to_subset","","The inverse inclusion map: attempts to construct `self` from the equivalent element of its superset.",7,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"angle","alga::linear","Measures the angle between two vectors.",25,null],[11,"canonical_basis","","Applies the given closule to each element of this vector space's canonical basis. Stops if `f` returns `false`.",24,{"i":[{"n":"f"}]}],[11,"translate_by","","Same as `*self + *t`. Applies the additive group action of this affine space's associated vector space on `self`.",21,null],[11,"subtract","","Same as `*self - *other`. Returns the unique element `v` of the associated vector space such that `self = right + v`.",21,null],[11,"scale_by","","Multiplies the distance of this point to `Self::origin()` by `s`.",22,null],[11,"coordinates","","The coordinates of this point, i.e., the translation from the origin.",22,null],[11,"from_coordinates","","Builds a point from its coordinates relative to the origin.",22,null],[11,"distance_squared","","The distance between two points.",22,null],[11,"distance","","The distance between two points.",22,null],[11,"append_rotation_wrt_point","","Appends to this similarity a rotation centered at the point `p`, i.e., this point is left invariant.",28,null],[11,"translate_point","","Applies this transformation's pure translational part to a point.",32,{"i":[{"n":"self"},{"n":"e"}],"o":{"n":"e"}}],[11,"rotate_point","","Applies this transformation's pure rotational part to a point.",32,{"i":[{"n":"self"},{"n":"e"}],"o":{"n":"e"}}],[11,"scale_point","","Applies this transformation's pure scaling part to a point.",32,{"i":[{"n":"self"},{"n":"e"}],"o":{"n":"e"}}],[11,"rotate_vector","","Applies this transformation's pure rotational part to a vector.",32,null],[11,"scale_vector","","Applies this transformation's pure scaling part to a vector.",32,null],[11,"inverse_translate_point","","Applies this transformation inverse's pure translational part to a point.",32,{"i":[{"n":"self"},{"n":"e"}],"o":{"n":"e"}}],[11,"inverse_rotate_point","","Applies this transformation inverse's pure rotational part to a point.",32,{"i":[{"n":"self"},{"n":"e"}],"o":{"n":"e"}}],[11,"inverse_scale_point","","Applies this transformation inverse's pure scaling part to a point.",32,{"i":[{"n":"self"},{"n":"e"}],"o":{"n":"e"}}],[11,"inverse_rotate_vector","","Applies this transformation inverse's pure rotational part to a vector.",32,null],[11,"inverse_scale_vector","","Applies this transformation inverse's pure scaling part to a vector.",32,null],[11,"to_real","","Converts this scaling factor to a real. Same as `self.to_superset()`.",31,null],[11,"from_real","","Attempts to convert a real to an element of this scaling subgroup. Same as `Self::from_superset()`. Returns `None` if no such scaling is possible for this subgroup.",31,null],[11,"powf","","Raises the scaling to a power. The result must be equivalent to `self.to_superset().powf(n)`. Returns `None` if the result is not representable by `Self`.",31,null],[11,"scale_between","","The scaling required to make `a` have the same norm as `b`, i.e., `|b| = |a| * norm_ratio(a, b)`.",31,null],[11,"powf","","Raises the translation to a power. The result must be equivalent to `self.to_superset() * n`.  Returns `None` if the result is not representable by `Self`.",34,null],[11,"translation_between","","The translation needed to make `a` coincide with `b`, i.e., `b = a * translation_to(a, b)`.",34,{"i":[{"n":"e"},{"n":"e"}],"o":{"n":"option"}}],[11,"get","","Gets the component at row `i` and column `j` of this matrix.",35,null],[11,"set_row","","Sets the i-th row of this matrix.",36,null],[11,"set_column","","Sets the i-th col of this matrix.",36,null],[11,"set","","Sets the component at row `i` and column `j` of this matrix.",36,null],[11,"dimension","","The number of rows or column of this matrix.",37,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"transpose_mut","","In-place transposition.",37,{"i":[{"n":"self"}]}],[11,"set_diagonal","","Sets the matrix diagonal.",38,null]],"paths":[[3,"Id"],[3,"Additive"],[3,"Multiplicative"],[8,"Inverse"],[8,"Operator"],[8,"Identity"],[8,"SubsetOf"],[8,"SupersetOf"],[8,"AbstractGroupAbelian"],[8,"AbstractMagma"],[8,"AbstractMonoid"],[8,"AbstractQuasigroup"],[8,"AbstractSemigroup"],[8,"AbstractRing"],[8,"AbstractRingCommutative"],[8,"AbstractModule"],[8,"JoinSemilattice"],[8,"Lattice"],[8,"MeetSemilattice"],[8,"Module"],[8,"Real"],[8,"AffineSpace"],[8,"EuclideanSpace"],[8,"FiniteDimInnerSpace"],[8,"FiniteDimVectorSpace"],[8,"InnerSpace"],[8,"NormedSpace"],[8,"VectorSpace"],[8,"AffineTransformation"],[8,"ProjectiveTransformation"],[8,"Rotation"],[8,"Scaling"],[8,"Similarity"],[8,"Transformation"],[8,"Translation"],[8,"Matrix"],[8,"MatrixMut"],[8,"SquareMatrix"],[8,"SquareMatrixMut"]]};
searchIndex["approx"] = {"doc":"A crate that provides facilities for testing the approximate equality of floating-point based types, using either relative difference, or units in the last place (ULPs) comparisons.","items":[[3,"Relative","approx","The requisite parameters for testing for approximate equality.",null,null],[12,"lhs","","The left-hand side of the approximate equality comparison.",0,null],[12,"rhs","","The right-hand side of the approximate equality comparison.",0,null],[12,"epsilon","","The tolerance to use when testing values that are close together.",0,null],[12,"max_relative","","The relative tolerance for testing values that are far-apart.",0,null],[3,"Ulps","","The requisite parameters for testing for approximate equality.",null,null],[12,"lhs","","The left-hand side of the approximate equality comparison.",1,null],[12,"rhs","","The right-hand side of the approximate equality comparison.",1,null],[12,"epsilon","","The tolerance to use when testing values that are close together.",1,null],[12,"max_ulps","","The ULPs to tolerate when testing values that are far-apart.",1,null],[8,"ApproxEq","","Equality comparisons based on floating point tolerances.",null,null],[16,"Epsilon","","Used for specifying relative comparisons.",2,null],[10,"default_epsilon","","The default tolerance to use when testing values that are close together.",2,null],[10,"default_max_relative","","The default relative tolerance for testing values that are far-apart.",2,null],[10,"default_max_ulps","","The default ULPs to tolerate when testing values that are far-apart.",2,{"o":{"n":"u32"}}],[10,"relative_eq","","A test for equality that uses a relative comparison if the values are far apart.",2,null],[11,"relative_ne","","The inverse of `ApproxEq::relative_eq`.",2,null],[10,"ulps_eq","","A test for equality that uses units in the last place (ULP) if the values are far apart.",2,null],[11,"ulps_ne","","The inverse of `ApproxEq::ulps_eq`.",2,null],[11,"new","","The beginning of a chained equality expression, using a relative based comparison.",0,{"i":[{"n":"t"},{"n":"t"}],"o":{"n":"relative"}}],[11,"epsilon","","Replace the epsilon value with the one specified.",0,null],[11,"max_relative","","Replace the maximum relative value with the one specified.",0,null],[11,"eq","","Peform the equality comparison",0,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"ne","","Peform the inequality comparison",0,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"new","","The beginning of a chained equality expression, using an ULPs based comparison.",1,{"i":[{"n":"t"},{"n":"t"}],"o":{"n":"ulps"}}],[11,"epsilon","","Replace the epsilon value with the one specified.",1,null],[11,"max_ulps","","Replace the max ulps value with the one specified.",1,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"ulps"}}],[11,"eq","","Peform the equality comparison",1,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"ne","","Peform the inequality comparison",1,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[14,"relative_eq","","Predicate for testing the approximate equality of two values.",null,null],[14,"relative_ne","","Predicate for testing the approximate inequality of two values.",null,null],[14,"assert_relative_eq","","",null,null],[14,"assert_relative_ne","","",null,null],[14,"ulps_eq","","Predicate for testing the approximate equality of two values using a maximum ULPs (Units in Last Place).",null,null],[14,"ulps_ne","","Predicate for testing the approximate inequality of two values using a maximum ULPs (Units in Last Place).",null,null],[14,"assert_ulps_eq","","",null,null],[14,"assert_ulps_ne","","",null,null]],"paths":[[3,"Relative"],[3,"Ulps"],[8,"ApproxEq"]]};
searchIndex["derive_builder"] = {"doc":"Derive a builder for a struct","items":[],"paths":[]};
searchIndex["derive_builder_core"] = {"doc":"Internal helper library for the `derive_builder` crate.","items":[[3,"BuildMethod","derive_builder_core","Initializer for the struct fields in the build method, implementing `quote::ToTokens`.",null,null],[12,"enabled","","Enables code generation for this build method.",0,null],[12,"ident","","Name of this build fn.",0,null],[12,"visibility","","Visibility of the build method, e.g. `syn::Visibility::Public`.",0,null],[12,"pattern","","How the build method takes and returns `self` (e.g. mutably).",0,null],[12,"target_ty","","Type of the target field.",0,null],[12,"target_ty_generics","","Type parameters and lifetimes attached to this builder struct.",0,null],[12,"initializers","","Field initializers for the target type.",0,null],[12,"doc_comment","","Doc-comment of the builder struct.",0,null],[12,"bindings","","Bindings to libstd or libcore.",0,null],[12,"default_struct","","Default value for the whole struct.",0,null],[12,"validate_fn","","Validation function with signature `&FooBuilder -> Result<(), String>` to call before the macro-provided struct buildout.",0,null],[3,"BuilderField","","Field for the builder struct, implementing `quote::ToTokens`.",null,null],[12,"field_ident","","Name of the target field.",1,null],[12,"field_type","","Type of the target field.",1,null],[12,"setter_enabled","","Whether the builder implements a setter for this field.",1,null],[12,"field_visibility","","Visibility of this builder field, e.g. `syn::Visibility::Public`.",1,null],[12,"attrs","","Attributes which will be attached to this builder field.",1,null],[12,"bindings","","Bindings to libstd or libcore.",1,null],[3,"Builder","","Builder, implementing `quote::ToTokens`.",null,null],[12,"enabled","","Enables code generation for this builder struct.",2,null],[12,"ident","","Name of this builder struct.",2,null],[12,"pattern","","Pattern of this builder struct.",2,null],[12,"derives","","Traits to automatically derive on the builder type.",2,null],[12,"generics","","Type parameters and lifetimes attached to this builder's struct definition.",2,null],[12,"visibility","","Visibility of the builder struct, e.g. `syn::Visibility::Public`.",2,null],[12,"fields","","Fields of the builder struct, e.g. `foo: u32,`",2,null],[12,"functions","","Functions of the builder struct, e.g. `fn bar() -> { unimplemented!() }`",2,null],[12,"doc_comment","","Doc-comment of the builder struct.",2,null],[12,"deprecation_notes","","Emit deprecation notes to the user.",2,null],[12,"bindings","","Library bindings to use in emitted builder.",2,null],[3,"DeprecationNotes","","Deprecation notes we want to emit to the user, implementing `quote::ToTokens`.",null,null],[3,"Initializer","","Initializer for the target struct fields, implementing `quote::ToTokens`.",null,null],[12,"field_ident","","Name of the target field.",3,null],[12,"setter_enabled","","Whether the builder implements a setter for this field.",3,null],[12,"builder_pattern","","How the build method takes and returns `self` (e.g. mutably).",3,null],[12,"default_value","","Default value for the target field.",3,null],[12,"use_default_struct","","Whether the build_method defines a default struct.",3,null],[12,"bindings","","Bindings to libstd or libcore.",3,null],[3,"Setter","","Setter for the struct fields in the build method, implementing `quote::ToTokens`.",null,null],[12,"enabled","","Enables code generation for this setter fn.",4,null],[12,"try_setter","","Enables code generation for the `try_` variant of this setter fn.",4,null],[12,"visibility","","Visibility of the setter, e.g. `syn::Visibility::Public`.",4,null],[12,"pattern","","How the setter method takes and returns `self` (e.g. mutably).",4,null],[12,"attrs","","Attributes which will be attached to this setter fn.",4,null],[12,"ident","","Name of this setter fn.",4,null],[12,"field_ident","","Name of the target field.",4,null],[12,"field_type","","Type of the target field.",4,null],[12,"generic_into","","Make the setter generic over `Into<T>`, where `T` is the field type.",4,null],[12,"deprecation_notes","","Emit deprecation notes to the user.",4,null],[12,"bindings","","Bindings to libstd or libcore.",4,null],[3,"Block","","A permissive wrapper for expressions/blocks, implementing `quote::ToTokens`.",null,null],[3,"Bindings","","Bindings to be used by the generated code.",null,null],[12,"no_std","","Whether the generated code should comply with `#![no_std]`.",5,null],[3,"RawTokens","","`RawTokens` can be directly appended to a `quote::Tokens` instance without any parsing.",null,null],[12,"0","","",6,null],[4,"BuilderPattern","","Controls the signature of a setter method, more specifically how `self` is passed and returned.",null,null],[13,"Owned","","E.g. `fn bar(self, bar: Bar) -> Self`.",7,null],[13,"Mutable","","E.g. `fn bar(&mut self, bar: Bar) -> &mut Self`.",7,null],[13,"Immutable","","E.g. `fn bar(&self, bar: Bar) -> Self`.",7,null],[5,"doc_comment_from","","Doc-comment, implementing `quote::ToTokens`.",null,{"i":[{"n":"string"}],"o":{"n":"attribute"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"to_tokens","","",0,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"doc_comment","","Set a doc-comment for this item.",0,{"i":[{"n":"self"},{"n":"string"}],"o":{"n":"self"}}],[11,"push_initializer","","Populate the `BuildMethod` with appropriate initializers of the underlying struct.",0,{"i":[{"n":"self"},{"n":"initializer"}],"o":{"n":"self"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"builderfield"}}],[11,"to_tokens","","",1,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"to_tokens","","",2,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"doc_comment","","Set a doc-comment for this item.",2,{"i":[{"n":"self"},{"n":"string"}],"o":{"n":"self"}}],[11,"push_field","","Add a field to the builder",2,{"i":[{"n":"self"},{"n":"builderfield"}],"o":{"n":"self"}}],[11,"push_setter_fn","","Add a setter function to the builder",2,{"i":[{"n":"self"},{"n":"setter"}],"o":{"n":"self"}}],[11,"push_build_fn","","Add final build function to the builder",2,{"i":[{"n":"self"},{"n":"buildmethod"}],"o":{"n":"self"}}],[11,"fmt","","",8,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"default","","",8,{"o":{"n":"deprecationnotes"}}],[11,"clone","","",8,{"i":[{"n":"self"}],"o":{"n":"deprecationnotes"}}],[11,"to_tokens","","",8,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"push","","Appends a note to the collection.",8,{"i":[{"n":"self"},{"n":"string"}]}],[11,"extend","","Extend this collection with all values from another collection.",8,{"i":[{"n":"self"},{"n":"deprecationnotes"}]}],[11,"as_item","","Create a view of these deprecation notes that can annotate a struct.",8,{"i":[{"n":"self"}],"o":{"n":"deprecationnotesasitem"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"initializer"}}],[11,"to_tokens","","",3,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"setter"}}],[11,"to_tokens","","",4,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"eq","","",7,{"i":[{"n":"self"},{"n":"builderpattern"}],"o":{"n":"bool"}}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",7,{"i":[{"n":"self"}],"o":{"n":"builderpattern"}}],[11,"requires_clone","","Returns true if this style of builder needs to be able to clone its fields during the `build` method.",7,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"default","","",7,{"o":{"n":"builderpattern"}}],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"default","","",9,{"o":{"n":"block"}}],[11,"clone","","",9,{"i":[{"n":"self"}],"o":{"n":"block"}}],[11,"to_tokens","","",9,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"from_str","","Parses a string `s` to return a `Block`.",9,{"i":[{"n":"str"}],"o":{"n":"result"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",5,{"i":[{"n":"self"}],"o":{"n":"bindings"}}],[11,"default","","",5,{"o":{"n":"bindings"}}],[11,"string_ty","","String type.",5,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"rawtokens"}}],[11,"result_ty","","Result type.",5,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"rawtokens"}}],[11,"option_ty","","Option type.",5,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"rawtokens"}}],[11,"phantom_data_ty","","PhantomData type.",5,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"rawtokens"}}],[11,"default_trait","","Default trait.",5,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"rawtokens"}}],[11,"clone_trait","","Clone trait.",5,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"rawtokens"}}],[11,"into_trait","","Into trait.",5,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"rawtokens"}}],[11,"try_into_trait","","TryInto trait.",5,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"rawtokens"}}],[11,"eq","","",6,{"i":[{"n":"self"},{"n":"rawtokens"}],"o":{"n":"bool"}}],[11,"ne","","",6,{"i":[{"n":"self"},{"n":"rawtokens"}],"o":{"n":"bool"}}],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"as_str","","View the underlying data as string.",6,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"to_tokens","","Write `self` to a new instance of `quote::Tokens`.",6,{"i":[{"n":"self"}],"o":{"n":"tokens"}}],[11,"to_tokens","","",6,{"i":[{"n":"self"},{"n":"tokens"}]}]],"paths":[[3,"BuildMethod"],[3,"BuilderField"],[3,"Builder"],[3,"Initializer"],[3,"Setter"],[3,"Bindings"],[3,"RawTokens"],[4,"BuilderPattern"],[3,"DeprecationNotes"],[3,"Block"]]};
searchIndex["generic_array"] = {"doc":"This crate implements a structure that can be used as a generic array type.use Core Rust array types `[T; N]` can't be used generically with respect to `N`, so for example this:","items":[[5,"transmute","generic_array","Reinterprets the bits of a value of one type as another type.",null,{"i":[{"n":"t"}],"o":{"n":"u"}}],[3,"GenericArrayImplEven","","Internal type used to generate a struct of appropriate size",null,null],[3,"GenericArrayImplOdd","","Internal type used to generate a struct of appropriate size",null,null],[3,"GenericArray","","Struct representing a generic array - `GenericArray<T, N>` works like [T; N]",null,null],[0,"arr","","",null,null],[6,"Inc","generic_array::arr","Helper type for `arr!` macro",null,null],[8,"AddLength","","Helper trait for `arr!` macro",null,null],[16,"Output","","",0,null],[0,"iter","generic_array","",null,null],[3,"GenericArrayIter","generic_array::iter","An iterator that moves out of a `GenericArray`",null,null],[11,"into_iter","generic_array","",1,null],[11,"drop","generic_array::iter","",2,{"i":[{"n":"self"}]}],[11,"next","","",2,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",2,null],[11,"count","","",2,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"nth","","",2,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"option"}}],[11,"last","","",2,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"next_back","","",2,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"len","","",2,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"fmt","generic_array","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"default","","",1,{"o":{"n":"self"}}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"genericarray"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",1,{"i":[{"n":"self"},{"n":"genericarray"}],"o":{"g":["ordering"],"n":"option"}}],[11,"cmp","","",1,{"i":[{"n":"self"},{"n":"genericarray"}],"o":{"n":"ordering"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"borrow","","",1,null],[11,"borrow_mut","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"hash","","",1,{"i":[{"n":"self"},{"n":"h"}]}],[11,"from","","",1,null],[11,"from","","",1,null],[11,"from","","",1,null],[11,"from","","",1,null],[11,"from","","",1,null],[11,"from","","",1,null],[11,"from","","",1,null],[11,"from","","",1,null],[11,"from","","",1,null],[11,"from","","",1,null],[11,"from","","",1,null],[11,"from","","",1,null],[11,"from","","",1,null],[11,"from","","",1,null],[11,"from","","",1,null],[11,"from","","",1,null],[11,"from","","",1,null],[11,"from","","",1,null],[11,"from","","",1,null],[11,"from","","",1,null],[11,"from","","",1,null],[11,"from","","",1,null],[11,"from","","",1,null],[11,"from","","",1,null],[11,"from","","",1,null],[11,"from","","",1,null],[11,"from","","",1,null],[11,"from","","",1,null],[11,"from","","",1,null],[11,"from","","",1,null],[11,"from","","",1,null],[11,"from","","",1,null],[8,"ArrayLength","","Trait making `GenericArray` work, marking types to be used as length of an array",null,null],[16,"ArrayType","","Associated type representing the array type for the number",3,null],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"genericarrayimpleven"}}],[11,"clone","","",5,{"i":[{"n":"self"}],"o":{"n":"genericarrayimplodd"}}],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"map_slice","","map a function over a  slice to a `GenericArray`. The length of the slice must be equal to the length of the array",1,null],[11,"map","","map a function over a `GenericArray`.",1,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"genericarray"}}],[11,"as_slice","","Extracts a slice containing the entire array",1,null],[11,"as_mut_slice","","Extracts a mutable slice containing the entire array",1,null],[11,"from_slice","","Converts slice to a generic array reference with inferred length;",1,null],[11,"from_mut_slice","","Converts mutable slice to a mutable generic array reference",1,null],[11,"clone_from_slice","","Function constructing an array from a slice by clonning its content",1,null],[14,"arr_impl","","Proper implementation of `arr!`",null,null],[14,"arr","","Macro allowing for easy generation of Generic Arrays. Example: `let test = arr![u32; 1, 2, 3];`",null,null]],"paths":[[8,"AddLength"],[3,"GenericArray"],[3,"GenericArrayIter"],[8,"ArrayLength"],[3,"GenericArrayImplEven"],[3,"GenericArrayImplOdd"]]};
searchIndex["libc"] = {"doc":"Crate docs","items":[[3,"group","libc","",null,null],[12,"gr_name","","",0,null],[12,"gr_passwd","","",0,null],[12,"gr_gid","","",0,null],[12,"gr_mem","","",0,null],[3,"utimbuf","","",null,null],[12,"actime","","",1,null],[12,"modtime","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[3,"rusage","","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[3,"in_addr","","",null,null],[12,"s_addr","","",6,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",7,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",8,null],[12,"imr_interface","","",8,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",9,null],[12,"ipv6mr_interface","","",9,null],[3,"hostent","","",null,null],[12,"h_name","","",10,null],[12,"h_aliases","","",10,null],[12,"h_addrtype","","",10,null],[12,"h_length","","",10,null],[12,"h_addr_list","","",10,null],[3,"iovec","","",null,null],[12,"iov_base","","",11,null],[12,"iov_len","","",11,null],[3,"pollfd","","",null,null],[12,"fd","","",12,null],[12,"events","","",12,null],[12,"revents","","",12,null],[3,"winsize","","",null,null],[12,"ws_row","","",13,null],[12,"ws_col","","",13,null],[12,"ws_xpixel","","",13,null],[12,"ws_ypixel","","",13,null],[3,"linger","","",null,null],[12,"l_onoff","","",14,null],[12,"l_linger","","",14,null],[3,"sigval","","",null,null],[12,"sival_ptr","","",15,null],[3,"itimerval","","",null,null],[12,"it_interval","","",16,null],[12,"it_value","","",16,null],[3,"tms","","",null,null],[12,"tms_utime","","",17,null],[12,"tms_stime","","",17,null],[12,"tms_cutime","","",17,null],[12,"tms_cstime","","",17,null],[3,"servent","","",null,null],[12,"s_name","","",18,null],[12,"s_aliases","","",18,null],[12,"s_port","","",18,null],[12,"s_proto","","",18,null],[3,"protoent","","",null,null],[12,"p_name","","",19,null],[12,"p_aliases","","",19,null],[12,"p_proto","","",19,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",20,null],[12,"sa_data","","",20,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",21,null],[12,"sin_port","","",21,null],[12,"sin_addr","","",21,null],[12,"sin_zero","","",21,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",22,null],[12,"sin6_port","","",22,null],[12,"sin6_flowinfo","","",22,null],[12,"sin6_addr","","",22,null],[12,"sin6_scope_id","","",22,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",23,null],[12,"sun_path","","",23,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",24,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",25,null],[12,"ai_family","","",25,null],[12,"ai_socktype","","",25,null],[12,"ai_protocol","","",25,null],[12,"ai_addrlen","","",25,null],[12,"ai_addr","","",25,null],[12,"ai_canonname","","",25,null],[12,"ai_next","","",25,null],[3,"sockaddr_nl","","",null,null],[12,"nl_family","","",26,null],[12,"nl_pid","","",26,null],[12,"nl_groups","","",26,null],[3,"sockaddr_ll","","",null,null],[12,"sll_family","","",27,null],[12,"sll_protocol","","",27,null],[12,"sll_ifindex","","",27,null],[12,"sll_hatype","","",27,null],[12,"sll_pkttype","","",27,null],[12,"sll_halen","","",27,null],[12,"sll_addr","","",27,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",28,null],[12,"tm_min","","",28,null],[12,"tm_hour","","",28,null],[12,"tm_mday","","",28,null],[12,"tm_mon","","",28,null],[12,"tm_year","","",28,null],[12,"tm_wday","","",28,null],[12,"tm_yday","","",28,null],[12,"tm_isdst","","",28,null],[12,"tm_gmtoff","","",28,null],[12,"tm_zone","","",28,null],[3,"sched_param","","",null,null],[12,"sched_priority","","",29,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",30,null],[12,"dli_fbase","","",30,null],[12,"dli_sname","","",30,null],[12,"dli_saddr","","",30,null],[3,"epoll_event","","",null,null],[12,"events","","",31,null],[12,"u64","","",31,null],[3,"utsname","","",null,null],[12,"sysname","","",32,null],[12,"nodename","","",32,null],[12,"release","","",32,null],[12,"version","","",32,null],[12,"machine","","",32,null],[12,"domainname","","",32,null],[3,"lconv","","",null,null],[12,"decimal_point","","",33,null],[12,"thousands_sep","","",33,null],[12,"grouping","","",33,null],[12,"int_curr_symbol","","",33,null],[12,"currency_symbol","","",33,null],[12,"mon_decimal_point","","",33,null],[12,"mon_thousands_sep","","",33,null],[12,"mon_grouping","","",33,null],[12,"positive_sign","","",33,null],[12,"negative_sign","","",33,null],[12,"int_frac_digits","","",33,null],[12,"frac_digits","","",33,null],[12,"p_cs_precedes","","",33,null],[12,"p_sep_by_space","","",33,null],[12,"n_cs_precedes","","",33,null],[12,"n_sep_by_space","","",33,null],[12,"p_sign_posn","","",33,null],[12,"n_sign_posn","","",33,null],[12,"int_p_cs_precedes","","",33,null],[12,"int_p_sep_by_space","","",33,null],[12,"int_n_cs_precedes","","",33,null],[12,"int_n_sep_by_space","","",33,null],[12,"int_p_sign_posn","","",33,null],[12,"int_n_sign_posn","","",33,null],[3,"sigevent","","",null,null],[12,"sigev_value","","",34,null],[12,"sigev_signo","","",34,null],[12,"sigev_notify","","",34,null],[12,"sigev_notify_thread_id","","",34,null],[3,"in_pktinfo","","",null,null],[12,"ipi_ifindex","","",35,null],[12,"ipi_spec_dst","","",35,null],[12,"ipi_addr","","",35,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",36,null],[12,"ifa_name","","",36,null],[12,"ifa_flags","","",36,null],[12,"ifa_addr","","",36,null],[12,"ifa_netmask","","",36,null],[12,"ifa_ifu","","",36,null],[12,"ifa_data","","",36,null],[3,"in6_rtmsg","","",null,null],[3,"arpreq","","",null,null],[12,"arp_pa","","",37,null],[12,"arp_ha","","",37,null],[12,"arp_flags","","",37,null],[12,"arp_netmask","","",37,null],[12,"arp_dev","","",37,null],[3,"arpreq_old","","",null,null],[12,"arp_pa","","",38,null],[12,"arp_ha","","",38,null],[12,"arp_flags","","",38,null],[12,"arp_netmask","","",38,null],[3,"arphdr","","",null,null],[12,"ar_hrd","","",39,null],[12,"ar_pro","","",39,null],[12,"ar_hln","","",39,null],[12,"ar_pln","","",39,null],[12,"ar_op","","",39,null],[3,"dirent","","",null,null],[12,"d_ino","","",40,null],[12,"d_off","","",40,null],[12,"d_reclen","","",40,null],[12,"d_type","","",40,null],[12,"d_name","","",40,null],[3,"dirent64","","",null,null],[12,"d_ino","","",41,null],[12,"d_off","","",41,null],[12,"d_reclen","","",41,null],[12,"d_type","","",41,null],[12,"d_name","","",41,null],[3,"rlimit64","","",null,null],[12,"rlim_cur","","",42,null],[12,"rlim_max","","",42,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",43,null],[12,"gl_pathv","","",43,null],[12,"gl_offs","","",43,null],[12,"gl_flags","","",43,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_rwlockattr_t","","",null,null],[3,"pthread_cond_t","","",null,null],[3,"pthread_condattr_t","","",null,null],[3,"passwd","","",null,null],[12,"pw_name","","",44,null],[12,"pw_passwd","","",44,null],[12,"pw_uid","","",44,null],[12,"pw_gid","","",44,null],[12,"pw_gecos","","",44,null],[12,"pw_dir","","",44,null],[12,"pw_shell","","",44,null],[3,"spwd","","",null,null],[12,"sp_namp","","",45,null],[12,"sp_pwdp","","",45,null],[12,"sp_lstchg","","",45,null],[12,"sp_min","","",45,null],[12,"sp_max","","",45,null],[12,"sp_warn","","",45,null],[12,"sp_inact","","",45,null],[12,"sp_expire","","",45,null],[12,"sp_flag","","",45,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",46,null],[12,"dqb_bsoftlimit","","",46,null],[12,"dqb_curspace","","",46,null],[12,"dqb_ihardlimit","","",46,null],[12,"dqb_isoftlimit","","",46,null],[12,"dqb_curinodes","","",46,null],[12,"dqb_btime","","",46,null],[12,"dqb_itime","","",46,null],[12,"dqb_valid","","",46,null],[3,"signalfd_siginfo","","",null,null],[12,"ssi_signo","","",47,null],[12,"ssi_errno","","",47,null],[12,"ssi_code","","",47,null],[12,"ssi_pid","","",47,null],[12,"ssi_uid","","",47,null],[12,"ssi_fd","","",47,null],[12,"ssi_tid","","",47,null],[12,"ssi_band","","",47,null],[12,"ssi_overrun","","",47,null],[12,"ssi_trapno","","",47,null],[12,"ssi_status","","",47,null],[12,"ssi_int","","",47,null],[12,"ssi_ptr","","",47,null],[12,"ssi_utime","","",47,null],[12,"ssi_stime","","",47,null],[12,"ssi_addr","","",47,null],[3,"itimerspec","","",null,null],[12,"it_interval","","",48,null],[12,"it_value","","",48,null],[3,"fsid_t","","",null,null],[3,"mq_attr","","",null,null],[12,"mq_flags","","",49,null],[12,"mq_maxmsg","","",49,null],[12,"mq_msgsize","","",49,null],[12,"mq_curmsgs","","",49,null],[3,"packet_mreq","","",null,null],[12,"mr_ifindex","","",50,null],[12,"mr_type","","",50,null],[12,"mr_alen","","",50,null],[12,"mr_address","","",50,null],[3,"cpu_set_t","","",null,null],[3,"if_nameindex","","",null,null],[12,"if_index","","",51,null],[12,"if_name","","",51,null],[3,"msginfo","","",null,null],[12,"msgpool","","",52,null],[12,"msgmap","","",52,null],[12,"msgmax","","",52,null],[12,"msgmnb","","",52,null],[12,"msgmni","","",52,null],[12,"msgssz","","",52,null],[12,"msgtql","","",52,null],[12,"msgseg","","",52,null],[3,"mmsghdr","","",null,null],[12,"msg_hdr","","",53,null],[12,"msg_len","","",53,null],[3,"sembuf","","",null,null],[12,"sem_num","","",54,null],[12,"sem_op","","",54,null],[12,"sem_flg","","",54,null],[3,"input_event","","",null,null],[12,"time","","",55,null],[12,"type_","","",55,null],[12,"code","","",55,null],[12,"value","","",55,null],[3,"input_id","","",null,null],[12,"bustype","","",56,null],[12,"vendor","","",56,null],[12,"product","","",56,null],[12,"version","","",56,null],[3,"input_absinfo","","",null,null],[12,"value","","",57,null],[12,"minimum","","",57,null],[12,"maximum","","",57,null],[12,"fuzz","","",57,null],[12,"flat","","",57,null],[12,"resolution","","",57,null],[3,"input_keymap_entry","","",null,null],[12,"flags","","",58,null],[12,"len","","",58,null],[12,"index","","",58,null],[12,"keycode","","",58,null],[12,"scancode","","",58,null],[3,"input_mask","","",null,null],[12,"type_","","",59,null],[12,"codes_size","","",59,null],[12,"codes_ptr","","",59,null],[3,"ff_replay","","",null,null],[12,"length","","",60,null],[12,"delay","","",60,null],[3,"ff_trigger","","",null,null],[12,"button","","",61,null],[12,"interval","","",61,null],[3,"ff_envelope","","",null,null],[12,"attack_length","","",62,null],[12,"attack_level","","",62,null],[12,"fade_length","","",62,null],[12,"fade_level","","",62,null],[3,"ff_constant_effect","","",null,null],[12,"level","","",63,null],[12,"envelope","","",63,null],[3,"ff_ramp_effect","","",null,null],[12,"start_level","","",64,null],[12,"end_level","","",64,null],[12,"envelope","","",64,null],[3,"ff_condition_effect","","",null,null],[12,"right_saturation","","",65,null],[12,"left_saturation","","",65,null],[12,"right_coeff","","",65,null],[12,"left_coeff","","",65,null],[12,"deadband","","",65,null],[12,"center","","",65,null],[3,"ff_periodic_effect","","",null,null],[12,"waveform","","",66,null],[12,"period","","",66,null],[12,"magnitude","","",66,null],[12,"offset","","",66,null],[12,"phase","","",66,null],[12,"envelope","","",66,null],[12,"custom_len","","",66,null],[12,"custom_data","","",66,null],[3,"ff_rumble_effect","","",null,null],[12,"strong_magnitude","","",67,null],[12,"weak_magnitude","","",67,null],[3,"ff_effect","","",null,null],[12,"type_","","",68,null],[12,"id","","",68,null],[12,"direction","","",68,null],[12,"trigger","","",68,null],[12,"replay","","",68,null],[12,"u","","",68,null],[3,"dl_phdr_info","","",null,null],[12,"dlpi_addr","","",69,null],[12,"dlpi_name","","",69,null],[12,"dlpi_phdr","","",69,null],[12,"dlpi_phnum","","",69,null],[12,"dlpi_adds","","",69,null],[12,"dlpi_subs","","",69,null],[12,"dlpi_tls_modid","","",69,null],[12,"dlpi_tls_data","","",69,null],[3,"Elf32_Phdr","","",null,null],[12,"p_type","","",70,null],[12,"p_offset","","",70,null],[12,"p_vaddr","","",70,null],[12,"p_paddr","","",70,null],[12,"p_filesz","","",70,null],[12,"p_memsz","","",70,null],[12,"p_flags","","",70,null],[12,"p_align","","",70,null],[3,"Elf64_Phdr","","",null,null],[12,"p_type","","",71,null],[12,"p_flags","","",71,null],[12,"p_offset","","",71,null],[12,"p_vaddr","","",71,null],[12,"p_paddr","","",71,null],[12,"p_filesz","","",71,null],[12,"p_memsz","","",71,null],[12,"p_align","","",71,null],[3,"ucred","","",null,null],[12,"pid","","",72,null],[12,"uid","","",72,null],[12,"gid","","",72,null],[3,"mntent","","",null,null],[12,"mnt_fsname","","",73,null],[12,"mnt_dir","","",73,null],[12,"mnt_type","","",73,null],[12,"mnt_opts","","",73,null],[12,"mnt_freq","","",73,null],[12,"mnt_passno","","",73,null],[3,"posix_spawn_file_actions_t","","",null,null],[3,"posix_spawnattr_t","","",null,null],[3,"genlmsghdr","","",null,null],[12,"cmd","","",74,null],[12,"version","","",74,null],[12,"reserved","","",74,null],[3,"in6_pktinfo","","",null,null],[12,"ipi6_addr","","",75,null],[12,"ipi6_ifindex","","",75,null],[3,"arpd_request","","",null,null],[12,"req","","",76,null],[12,"ip","","",76,null],[12,"dev","","",76,null],[12,"stamp","","",76,null],[12,"updated","","",76,null],[12,"ha","","",76,null],[3,"aiocb","","",null,null],[12,"aio_fildes","","",77,null],[12,"aio_lio_opcode","","",77,null],[12,"aio_reqprio","","",77,null],[12,"aio_buf","","",77,null],[12,"aio_nbytes","","",77,null],[12,"aio_sigevent","","",77,null],[12,"aio_offset","","",77,null],[3,"__exit_status","","",null,null],[12,"e_termination","","",78,null],[12,"e_exit","","",78,null],[3,"__timeval","","",null,null],[12,"tv_sec","","",79,null],[12,"tv_usec","","",79,null],[3,"utmpx","","",null,null],[12,"ut_type","","",80,null],[12,"ut_pid","","",80,null],[12,"ut_line","","",80,null],[12,"ut_id","","",80,null],[12,"ut_user","","",80,null],[12,"ut_host","","",80,null],[12,"ut_exit","","",80,null],[12,"ut_session","","",80,null],[12,"ut_tv","","",80,null],[12,"ut_addr_v6","","",80,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",81,null],[12,"sa_mask","","",81,null],[12,"sa_flags","","",81,null],[12,"sa_restorer","","",81,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",82,null],[12,"ss_flags","","",82,null],[12,"ss_size","","",82,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",83,null],[12,"si_errno","","",83,null],[12,"si_code","","",83,null],[12,"_pad","","",83,null],[3,"glob64_t","","",null,null],[12,"gl_pathc","","",84,null],[12,"gl_pathv","","",84,null],[12,"gl_offs","","",84,null],[12,"gl_flags","","",84,null],[3,"statfs","","",null,null],[12,"f_type","","",85,null],[12,"f_bsize","","",85,null],[12,"f_blocks","","",85,null],[12,"f_bfree","","",85,null],[12,"f_bavail","","",85,null],[12,"f_files","","",85,null],[12,"f_ffree","","",85,null],[12,"f_fsid","","",85,null],[12,"f_namelen","","",85,null],[12,"f_frsize","","",85,null],[3,"msghdr","","",null,null],[12,"msg_name","","",86,null],[12,"msg_namelen","","",86,null],[12,"msg_iov","","",86,null],[12,"msg_iovlen","","",86,null],[12,"msg_control","","",86,null],[12,"msg_controllen","","",86,null],[12,"msg_flags","","",86,null],[3,"cmsghdr","","",null,null],[12,"cmsg_len","","",87,null],[12,"cmsg_level","","",87,null],[12,"cmsg_type","","",87,null],[3,"termios","","",null,null],[12,"c_iflag","","",88,null],[12,"c_oflag","","",88,null],[12,"c_cflag","","",88,null],[12,"c_lflag","","",88,null],[12,"c_line","","",88,null],[12,"c_cc","","",88,null],[12,"c_ispeed","","",88,null],[12,"c_ospeed","","",88,null],[3,"flock","","",null,null],[12,"l_type","","",89,null],[12,"l_whence","","",89,null],[12,"l_start","","",89,null],[12,"l_len","","",89,null],[12,"l_pid","","",89,null],[3,"sem_t","","",null,null],[3,"mallinfo","","",null,null],[12,"arena","","",90,null],[12,"ordblks","","",90,null],[12,"smblks","","",90,null],[12,"hblks","","",90,null],[12,"hblkhd","","",90,null],[12,"usmblks","","",90,null],[12,"fsmblks","","",90,null],[12,"uordblks","","",90,null],[12,"fordblks","","",90,null],[12,"keepcost","","",90,null],[3,"nlmsghdr","","",null,null],[12,"nlmsg_len","","",91,null],[12,"nlmsg_type","","",91,null],[12,"nlmsg_flags","","",91,null],[12,"nlmsg_seq","","",91,null],[12,"nlmsg_pid","","",91,null],[3,"nlmsgerr","","",null,null],[12,"error","","",92,null],[12,"msg","","",92,null],[3,"nl_pktinfo","","",null,null],[12,"group","","",93,null],[3,"nl_mmap_req","","",null,null],[12,"nm_block_size","","",94,null],[12,"nm_block_nr","","",94,null],[12,"nm_frame_size","","",94,null],[12,"nm_frame_nr","","",94,null],[3,"nl_mmap_hdr","","",null,null],[12,"nm_status","","",95,null],[12,"nm_len","","",95,null],[12,"nm_group","","",95,null],[12,"nm_pid","","",95,null],[12,"nm_uid","","",95,null],[12,"nm_gid","","",95,null],[3,"nlattr","","",null,null],[12,"nla_len","","",96,null],[12,"nla_type","","",96,null],[3,"rtentry","","",null,null],[12,"rt_pad1","","",97,null],[12,"rt_dst","","",97,null],[12,"rt_gateway","","",97,null],[12,"rt_genmask","","",97,null],[12,"rt_flags","","",97,null],[12,"rt_pad2","","",97,null],[12,"rt_pad3","","",97,null],[12,"rt_tos","","",97,null],[12,"rt_class","","",97,null],[12,"rt_pad4","","",97,null],[12,"rt_metric","","",97,null],[12,"rt_dev","","",97,null],[12,"rt_mtu","","",97,null],[12,"rt_window","","",97,null],[12,"rt_irtt","","",97,null],[3,"sigset_t","","",null,null],[3,"sysinfo","","",null,null],[12,"uptime","","",98,null],[12,"loads","","",98,null],[12,"totalram","","",98,null],[12,"freeram","","",98,null],[12,"sharedram","","",98,null],[12,"bufferram","","",98,null],[12,"totalswap","","",98,null],[12,"freeswap","","",98,null],[12,"procs","","",98,null],[12,"pad","","",98,null],[12,"totalhigh","","",98,null],[12,"freehigh","","",98,null],[12,"mem_unit","","",98,null],[12,"_f","","",98,null],[3,"msqid_ds","","",null,null],[12,"msg_perm","","",99,null],[12,"msg_stime","","",99,null],[12,"msg_rtime","","",99,null],[12,"msg_ctime","","",99,null],[12,"msg_qnum","","",99,null],[12,"msg_qbytes","","",99,null],[12,"msg_lspid","","",99,null],[12,"msg_lrpid","","",99,null],[3,"stat","","",null,null],[12,"st_dev","","",100,null],[12,"st_ino","","",100,null],[12,"st_nlink","","",100,null],[12,"st_mode","","",100,null],[12,"st_uid","","",100,null],[12,"st_gid","","",100,null],[12,"st_rdev","","",100,null],[12,"st_size","","",100,null],[12,"st_blksize","","",100,null],[12,"st_blocks","","",100,null],[12,"st_atime","","",100,null],[12,"st_atime_nsec","","",100,null],[12,"st_mtime","","",100,null],[12,"st_mtime_nsec","","",100,null],[12,"st_ctime","","",100,null],[12,"st_ctime_nsec","","",100,null],[3,"stat64","","",null,null],[12,"st_dev","","",101,null],[12,"st_ino","","",101,null],[12,"st_nlink","","",101,null],[12,"st_mode","","",101,null],[12,"st_uid","","",101,null],[12,"st_gid","","",101,null],[12,"st_rdev","","",101,null],[12,"st_size","","",101,null],[12,"st_blksize","","",101,null],[12,"st_blocks","","",101,null],[12,"st_atime","","",101,null],[12,"st_atime_nsec","","",101,null],[12,"st_mtime","","",101,null],[12,"st_mtime_nsec","","",101,null],[12,"st_ctime","","",101,null],[12,"st_ctime_nsec","","",101,null],[3,"statfs64","","",null,null],[12,"f_type","","",102,null],[12,"f_bsize","","",102,null],[12,"f_blocks","","",102,null],[12,"f_bfree","","",102,null],[12,"f_bavail","","",102,null],[12,"f_files","","",102,null],[12,"f_ffree","","",102,null],[12,"f_fsid","","",102,null],[12,"f_namelen","","",102,null],[12,"f_frsize","","",102,null],[12,"f_flags","","",102,null],[12,"f_spare","","",102,null],[3,"statvfs64","","",null,null],[12,"f_bsize","","",103,null],[12,"f_frsize","","",103,null],[12,"f_blocks","","",103,null],[12,"f_bfree","","",103,null],[12,"f_bavail","","",103,null],[12,"f_files","","",103,null],[12,"f_ffree","","",103,null],[12,"f_favail","","",103,null],[12,"f_fsid","","",103,null],[12,"f_flag","","",103,null],[12,"f_namemax","","",103,null],[3,"pthread_attr_t","","",null,null],[3,"_libc_fpxreg","","",null,null],[12,"significand","","",104,null],[12,"exponent","","",104,null],[3,"_libc_xmmreg","","",null,null],[12,"element","","",105,null],[3,"_libc_fpstate","","",null,null],[12,"cwd","","",106,null],[12,"swd","","",106,null],[12,"ftw","","",106,null],[12,"fop","","",106,null],[12,"rip","","",106,null],[12,"rdp","","",106,null],[12,"mxcsr","","",106,null],[12,"mxcr_mask","","",106,null],[12,"_st","","",106,null],[12,"_xmm","","",106,null],[3,"user_fpregs_struct","","",null,null],[12,"cwd","","",107,null],[12,"swd","","",107,null],[12,"ftw","","",107,null],[12,"fop","","",107,null],[12,"rip","","",107,null],[12,"rdp","","",107,null],[12,"mxcsr","","",107,null],[12,"mxcr_mask","","",107,null],[12,"st_space","","",107,null],[12,"xmm_space","","",107,null],[3,"user_regs_struct","","",null,null],[12,"r15","","",108,null],[12,"r14","","",108,null],[12,"r13","","",108,null],[12,"r12","","",108,null],[12,"rbp","","",108,null],[12,"rbx","","",108,null],[12,"r11","","",108,null],[12,"r10","","",108,null],[12,"r9","","",108,null],[12,"r8","","",108,null],[12,"rax","","",108,null],[12,"rcx","","",108,null],[12,"rdx","","",108,null],[12,"rsi","","",108,null],[12,"rdi","","",108,null],[12,"orig_rax","","",108,null],[12,"rip","","",108,null],[12,"cs","","",108,null],[12,"eflags","","",108,null],[12,"rsp","","",108,null],[12,"ss","","",108,null],[12,"fs_base","","",108,null],[12,"gs_base","","",108,null],[12,"ds","","",108,null],[12,"es","","",108,null],[12,"fs","","",108,null],[12,"gs","","",108,null],[3,"user","","",null,null],[12,"regs","","",109,null],[12,"u_fpvalid","","",109,null],[12,"i387","","",109,null],[12,"u_tsize","","",109,null],[12,"u_dsize","","",109,null],[12,"u_ssize","","",109,null],[12,"start_code","","",109,null],[12,"start_stack","","",109,null],[12,"signal","","",109,null],[12,"u_ar0","","",109,null],[12,"u_fpstate","","",109,null],[12,"magic","","",109,null],[12,"u_comm","","",109,null],[12,"u_debugreg","","",109,null],[3,"mcontext_t","","",null,null],[12,"gregs","","",110,null],[12,"fpregs","","",110,null],[3,"ucontext_t","","",null,null],[12,"uc_flags","","",111,null],[12,"uc_link","","",111,null],[12,"uc_stack","","",111,null],[12,"uc_mcontext","","",111,null],[12,"uc_sigmask","","",111,null],[3,"ipc_perm","","",null,null],[12,"__key","","",112,null],[12,"uid","","",112,null],[12,"gid","","",112,null],[12,"cuid","","",112,null],[12,"cgid","","",112,null],[12,"mode","","",112,null],[12,"__seq","","",112,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",113,null],[12,"shm_segsz","","",113,null],[12,"shm_atime","","",113,null],[12,"shm_dtime","","",113,null],[12,"shm_ctime","","",113,null],[12,"shm_cpid","","",113,null],[12,"shm_lpid","","",113,null],[12,"shm_nattch","","",113,null],[3,"termios2","","",null,null],[12,"c_iflag","","",114,null],[12,"c_oflag","","",114,null],[12,"c_cflag","","",114,null],[12,"c_lflag","","",114,null],[12,"c_line","","",114,null],[12,"c_cc","","",114,null],[12,"c_ispeed","","",114,null],[12,"c_ospeed","","",114,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",115,null],[12,"f_frsize","","",115,null],[12,"f_blocks","","",115,null],[12,"f_bfree","","",115,null],[12,"f_bavail","","",115,null],[12,"f_files","","",115,null],[12,"f_ffree","","",115,null],[12,"f_favail","","",115,null],[12,"f_fsid","","",115,null],[12,"f_flag","","",115,null],[12,"f_namemax","","",115,null],[4,"c_void","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"DIR","","",null,null],[4,"locale_t","","",null,null],[4,"timezone","","",null,null],[4,"fpos64_t","","",null,null],[5,"FD_CLR","","",null,null],[5,"FD_ISSET","","",null,null],[5,"FD_SET","","",null,null],[5,"FD_ZERO","","",null,null],[5,"WIFSTOPPED","","",null,{"i":[{"n":"c_int"}],"o":{"n":"bool"}}],[5,"WSTOPSIG","","",null,{"i":[{"n":"c_int"}],"o":{"n":"c_int"}}],[5,"WIFCONTINUED","","",null,{"i":[{"n":"c_int"}],"o":{"n":"bool"}}],[5,"WIFSIGNALED","","",null,{"i":[{"n":"c_int"}],"o":{"n":"bool"}}],[5,"WTERMSIG","","",null,{"i":[{"n":"c_int"}],"o":{"n":"c_int"}}],[5,"WIFEXITED","","",null,{"i":[{"n":"c_int"}],"o":{"n":"bool"}}],[5,"WEXITSTATUS","","",null,{"i":[{"n":"c_int"}],"o":{"n":"c_int"}}],[5,"WCOREDUMP","","",null,{"i":[{"n":"c_int"}],"o":{"n":"bool"}}],[5,"QCMD","","",null,{"i":[{"n":"c_int"},{"n":"c_int"}],"o":{"n":"c_int"}}],[5,"IPOPT_COPIED","","",null,{"i":[{"n":"u8"}],"o":{"n":"u8"}}],[5,"IPOPT_CLASS","","",null,{"i":[{"n":"u8"}],"o":{"n":"u8"}}],[5,"IPOPT_NUMBER","","",null,{"i":[{"n":"u8"}],"o":{"n":"u8"}}],[5,"CPU_ZERO","","",null,null],[5,"CPU_SET","","",null,null],[5,"CPU_CLR","","",null,null],[5,"CPU_ISSET","","",null,{"i":[{"n":"usize"},{"n":"cpu_set_t"}],"o":{"n":"bool"}}],[5,"CPU_EQUAL","","",null,{"i":[{"n":"cpu_set_t"},{"n":"cpu_set_t"}],"o":{"n":"bool"}}],[5,"major","","",null,{"i":[{"n":"dev_t"}],"o":{"n":"c_uint"}}],[5,"minor","","",null,{"i":[{"n":"dev_t"}],"o":{"n":"c_uint"}}],[5,"makedev","","",null,{"i":[{"n":"c_uint"},{"n":"c_uint"}],"o":{"n":"dev_t"}}],[5,"IPTOS_TOS","","",null,{"i":[{"n":"u8"}],"o":{"n":"u8"}}],[5,"IPTOS_PREC","","",null,{"i":[{"n":"u8"}],"o":{"n":"u8"}}],[5,"RT_TOS","","",null,{"i":[{"n":"u8"}],"o":{"n":"u8"}}],[5,"RT_ADDRCLASS","","",null,{"i":[{"n":"u32"}],"o":{"n":"u32"}}],[5,"RT_LOCALADDR","","",null,{"i":[{"n":"u32"}],"o":{"n":"bool"}}],[5,"NLA_ALIGN","","",null,{"i":[{"n":"c_int"}],"o":{"n":"c_int"}}],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"getchar","","",null,null],[5,"putchar","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strdup","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strnlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"wcstombs","","",null,null],[5,"memchr","","",null,null],[5,"memcmp","","",null,null],[5,"memcpy","","",null,null],[5,"memmove","","",null,null],[5,"memset","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"getpwnam","","",null,null],[5,"getpwuid","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"snprintf","","",null,null],[5,"sprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"getchar_unlocked","","",null,null],[5,"putchar_unlocked","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"fdopendir","","",null,null],[5,"readdir","","",null,null],[5,"readdir_r","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"openat","","",null,null],[5,"fchmodat","","",null,null],[5,"fchown","","",null,null],[5,"fchownat","","",null,null],[5,"fstatat","","",null,null],[5,"linkat","","",null,null],[5,"mkdirat","","",null,null],[5,"readlinkat","","",null,null],[5,"renameat","","",null,null],[5,"symlinkat","","",null,null],[5,"unlinkat","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"fchdir","","",null,null],[5,"chown","","",null,null],[5,"lchown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execl","","",null,null],[5,"execle","","",null,null],[5,"execlp","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgid","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pause","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"seteuid","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"tcsetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"killpg","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"getrusage","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"gettimeofday","","",null,null],[5,"times","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_exit","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_init","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_condattr_init","","",null,null],[5,"pthread_condattr_destroy","","",null,null],[5,"pthread_rwlock_init","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_rwlockattr_init","","",null,null],[5,"pthread_rwlockattr_destroy","","",null,null],[5,"strerror_r","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"res_init","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"time","","",null,null],[5,"gmtime","","",null,null],[5,"localtime","","",null,null],[5,"difftime","","",null,null],[5,"mknod","","",null,null],[5,"uname","","",null,null],[5,"gethostname","","",null,null],[5,"getservbyname","","",null,null],[5,"getprotobyname","","",null,null],[5,"getprotobynumber","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[5,"sem_destroy","","",null,null],[5,"sem_wait","","",null,null],[5,"sem_trywait","","",null,null],[5,"sem_post","","",null,null],[5,"sem_init","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"readlink","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"sigprocmask","","",null,null],[5,"sigpending","","",null,null],[5,"timegm","","",null,null],[5,"getsid","","",null,null],[5,"sysconf","","",null,null],[5,"mkfifo","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfmakeraw","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"cfsetspeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcgetsid","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkdtemp","","",null,null],[5,"tmpnam","","",null,null],[5,"openlog","","",null,null],[5,"closelog","","",null,null],[5,"setlogmask","","",null,null],[5,"syslog","","",null,null],[5,"nice","","",null,null],[5,"grantpt","","",null,null],[5,"posix_openpt","","",null,null],[5,"ptsname","","",null,null],[5,"unlockpt","","",null,null],[5,"fdatasync","","",null,null],[5,"mincore","","",null,null],[5,"clock_getres","","",null,null],[5,"clock_gettime","","",null,null],[5,"clock_settime","","",null,null],[5,"dirfd","","",null,null],[5,"pthread_getattr_np","","",null,null],[5,"pthread_attr_getstack","","",null,null],[5,"memalign","","",null,null],[5,"setgroups","","",null,null],[5,"pipe2","","",null,null],[5,"statfs","","",null,null],[5,"statfs64","","",null,null],[5,"fstatfs","","",null,null],[5,"fstatfs64","","",null,null],[5,"statvfs64","","",null,null],[5,"fstatvfs64","","",null,null],[5,"memrchr","","",null,null],[5,"posix_fadvise","","",null,null],[5,"futimens","","",null,null],[5,"utimensat","","",null,null],[5,"duplocale","","",null,null],[5,"freelocale","","",null,null],[5,"newlocale","","",null,null],[5,"uselocale","","",null,null],[5,"creat64","","",null,null],[5,"fstat64","","",null,null],[5,"fstatat64","","",null,null],[5,"ftruncate64","","",null,null],[5,"getrlimit64","","",null,null],[5,"lseek64","","",null,null],[5,"lstat64","","",null,null],[5,"mmap64","","",null,null],[5,"open64","","",null,null],[5,"openat64","","",null,null],[5,"pread64","","",null,null],[5,"preadv64","","",null,null],[5,"pwrite64","","",null,null],[5,"pwritev64","","",null,null],[5,"readdir64","","",null,null],[5,"readdir64_r","","",null,null],[5,"setrlimit64","","",null,null],[5,"stat64","","",null,null],[5,"truncate64","","",null,null],[5,"mknodat","","",null,null],[5,"pthread_condattr_getclock","","",null,null],[5,"pthread_condattr_setclock","","",null,null],[5,"pthread_condattr_setpshared","","",null,null],[5,"accept4","","",null,null],[5,"pthread_mutexattr_setpshared","","",null,null],[5,"pthread_rwlockattr_getpshared","","",null,null],[5,"pthread_rwlockattr_setpshared","","",null,null],[5,"ptsname_r","","",null,null],[5,"clearenv","","",null,null],[5,"waitid","","",null,null],[5,"setreuid","","",null,null],[5,"setregid","","",null,null],[5,"getresuid","","",null,null],[5,"getresgid","","",null,null],[5,"acct","","",null,null],[5,"brk","","",null,null],[5,"sbrk","","",null,null],[5,"vfork","","",null,null],[5,"setresgid","","",null,null],[5,"setresuid","","",null,null],[5,"wait4","","",null,null],[5,"openpty","","",null,null],[5,"execvpe","","",null,null],[5,"fexecve","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"bind","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"aio_read","","",null,null],[5,"aio_write","","",null,null],[5,"aio_fsync","","",null,null],[5,"aio_error","","",null,null],[5,"aio_return","","",null,null],[5,"aio_suspend","","",null,null],[5,"aio_cancel","","",null,null],[5,"lio_listio","","",null,null],[5,"lutimes","","",null,null],[5,"setpwent","","",null,null],[5,"endpwent","","",null,null],[5,"getpwent","","",null,null],[5,"setgrent","","",null,null],[5,"endgrent","","",null,null],[5,"getgrent","","",null,null],[5,"setspent","","",null,null],[5,"endspent","","",null,null],[5,"getspent","","",null,null],[5,"getspnam","","",null,null],[5,"shm_open","","",null,null],[5,"shmget","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"ftok","","",null,null],[5,"semget","","",null,null],[5,"semop","","",null,null],[5,"semctl","","",null,null],[5,"msgctl","","",null,null],[5,"msgget","","",null,null],[5,"msgrcv","","",null,null],[5,"msgsnd","","",null,null],[5,"mprotect","","",null,null],[5,"__errno_location","","",null,null],[5,"fopen64","","",null,null],[5,"freopen64","","",null,null],[5,"tmpfile64","","",null,null],[5,"fgetpos64","","",null,null],[5,"fsetpos64","","",null,null],[5,"fseeko64","","",null,null],[5,"ftello64","","",null,null],[5,"fallocate","","",null,null],[5,"posix_fallocate","","",null,null],[5,"readahead","","",null,null],[5,"getxattr","","",null,null],[5,"lgetxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"lsetxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"llistxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"lremovexattr","","",null,null],[5,"fremovexattr","","",null,null],[5,"signalfd","","",null,null],[5,"timerfd_create","","",null,null],[5,"timerfd_gettime","","",null,null],[5,"timerfd_settime","","",null,null],[5,"pwritev","","",null,null],[5,"preadv","","",null,null],[5,"quotactl","","",null,null],[5,"mq_open","","",null,null],[5,"mq_close","","",null,null],[5,"mq_unlink","","",null,null],[5,"mq_receive","","",null,null],[5,"mq_send","","",null,null],[5,"mq_getattr","","",null,null],[5,"mq_setattr","","",null,null],[5,"epoll_pwait","","",null,null],[5,"dup3","","",null,null],[5,"mkostemp","","",null,null],[5,"mkostemps","","",null,null],[5,"sigtimedwait","","",null,null],[5,"sigwaitinfo","","",null,null],[5,"nl_langinfo_l","","",null,null],[5,"getnameinfo","","",null,null],[5,"pthread_setschedprio","","",null,null],[5,"prlimit","","",null,null],[5,"prlimit64","","",null,null],[5,"getloadavg","","",null,null],[5,"process_vm_readv","","",null,null],[5,"process_vm_writev","","",null,null],[5,"reboot","","",null,null],[5,"setfsgid","","",null,null],[5,"setfsuid","","",null,null],[5,"mkfifoat","","",null,null],[5,"if_nameindex","","",null,null],[5,"if_freenameindex","","",null,null],[5,"sync_file_range","","",null,null],[5,"mremap","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"madvise","","",null,null],[5,"msync","","",null,null],[5,"remap_file_pages","","",null,null],[5,"recvfrom","","",null,null],[5,"mkstemps","","",null,null],[5,"futimes","","",null,null],[5,"nl_langinfo","","",null,null],[5,"getdomainname","","",null,null],[5,"setdomainname","","",null,null],[5,"vhangup","","",null,null],[5,"sendmmsg","","",null,null],[5,"recvmmsg","","",null,null],[5,"sync","","",null,null],[5,"syscall","","",null,null],[5,"sched_getaffinity","","",null,null],[5,"sched_setaffinity","","",null,null],[5,"epoll_create","","",null,null],[5,"epoll_create1","","",null,null],[5,"epoll_wait","","",null,null],[5,"epoll_ctl","","",null,null],[5,"pthread_getschedparam","","",null,null],[5,"unshare","","",null,null],[5,"umount","","",null,null],[5,"sched_get_priority_max","","",null,null],[5,"tee","","",null,null],[5,"settimeofday","","",null,null],[5,"splice","","",null,null],[5,"eventfd","","",null,null],[5,"sched_rr_get_interval","","",null,null],[5,"sem_timedwait","","",null,null],[5,"sem_getvalue","","",null,null],[5,"sched_setparam","","",null,null],[5,"setns","","",null,null],[5,"swapoff","","",null,null],[5,"vmsplice","","",null,null],[5,"mount","","",null,null],[5,"personality","","",null,null],[5,"prctl","","",null,null],[5,"sched_getparam","","",null,null],[5,"ppoll","","",null,null],[5,"pthread_mutex_timedlock","","",null,null],[5,"clone","","",null,null],[5,"sched_getscheduler","","",null,null],[5,"clock_nanosleep","","",null,null],[5,"pthread_attr_getguardsize","","",null,null],[5,"sethostname","","",null,null],[5,"sched_get_priority_min","","",null,null],[5,"pthread_condattr_getpshared","","",null,null],[5,"sysinfo","","",null,null],[5,"umount2","","",null,null],[5,"pthread_setschedparam","","",null,null],[5,"swapon","","",null,null],[5,"sched_setscheduler","","",null,null],[5,"sendfile","","",null,null],[5,"sigsuspend","","",null,null],[5,"getgrgid_r","","",null,null],[5,"sigaltstack","","",null,null],[5,"sem_close","","",null,null],[5,"getdtablesize","","",null,null],[5,"getgrnam_r","","",null,null],[5,"initgroups","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"sem_open","","",null,null],[5,"getgrnam","","",null,null],[5,"pthread_cancel","","",null,null],[5,"pthread_kill","","",null,null],[5,"sem_unlink","","",null,null],[5,"daemon","","",null,null],[5,"getpwnam_r","","",null,null],[5,"getpwuid_r","","",null,null],[5,"sigwait","","",null,null],[5,"pthread_atfork","","",null,null],[5,"getgrgid","","",null,null],[5,"getgrouplist","","",null,null],[5,"pthread_mutexattr_getpshared","","",null,null],[5,"popen","","",null,null],[5,"faccessat","","",null,null],[5,"pthread_create","","",null,null],[5,"dl_iterate_phdr","","",null,null],[5,"setmntent","","",null,null],[5,"getmntent","","",null,null],[5,"addmntent","","",null,null],[5,"endmntent","","",null,null],[5,"hasmntopt","","",null,null],[5,"posix_spawn","","",null,null],[5,"posix_spawnp","","",null,null],[5,"posix_spawnattr_init","","",null,null],[5,"posix_spawnattr_destroy","","",null,null],[5,"posix_spawnattr_getsigdefault","","",null,null],[5,"posix_spawnattr_setsigdefault","","",null,null],[5,"posix_spawnattr_getsigmask","","",null,null],[5,"posix_spawnattr_setsigmask","","",null,null],[5,"posix_spawnattr_getflags","","",null,null],[5,"posix_spawnattr_setflags","","",null,null],[5,"posix_spawnattr_getpgroup","","",null,null],[5,"posix_spawnattr_setpgroup","","",null,null],[5,"posix_spawnattr_getschedpolicy","","",null,null],[5,"posix_spawnattr_setschedpolicy","","",null,null],[5,"posix_spawnattr_getschedparam","","",null,null],[5,"posix_spawnattr_setschedparam","","",null,null],[5,"posix_spawn_file_actions_init","","",null,null],[5,"posix_spawn_file_actions_destroy","","",null,null],[5,"posix_spawn_file_actions_addopen","","",null,null],[5,"posix_spawn_file_actions_addclose","","",null,null],[5,"posix_spawn_file_actions_adddup2","","",null,null],[5,"fread_unlocked","","",null,null],[5,"utmpxname","","",null,null],[5,"getutxent","","",null,null],[5,"getutxid","","",null,null],[5,"getutxline","","",null,null],[5,"pututxline","","",null,null],[5,"setutxent","","",null,null],[5,"endutxent","","",null,null],[5,"getpt","","",null,null],[5,"ioctl","","",null,null],[5,"backtrace","","",null,null],[5,"glob64","","",null,null],[5,"globfree64","","",null,null],[5,"ptrace","","",null,null],[5,"pthread_attr_getaffinity_np","","",null,null],[5,"pthread_attr_setaffinity_np","","",null,null],[5,"getpriority","","",null,null],[5,"setpriority","","",null,null],[5,"pthread_getaffinity_np","","",null,null],[5,"pthread_setaffinity_np","","",null,null],[5,"pthread_rwlockattr_getkind_np","","",null,null],[5,"pthread_rwlockattr_setkind_np","","",null,null],[5,"sched_getcpu","","",null,null],[5,"mallinfo","","",null,null],[5,"malloc_usable_size","","",null,null],[5,"getauxval","","",null,null],[5,"getpwent_r","","",null,null],[5,"getgrent_r","","",null,null],[5,"getcontext","","",null,null],[5,"setcontext","","",null,null],[5,"makecontext","","",null,null],[5,"swapcontext","","",null,null],[5,"iopl","","",null,null],[5,"ioperm","","",null,null],[5,"sysctl","","",null,null],[11,"clone","","",100,{"i":[{"n":"self"}],"o":{"n":"stat"}}],[11,"clone","","",101,{"i":[{"n":"self"}],"o":{"n":"stat64"}}],[11,"clone","","",102,{"i":[{"n":"self"}],"o":{"n":"statfs64"}}],[11,"clone","","",103,{"i":[{"n":"self"}],"o":{"n":"statvfs64"}}],[11,"clone","","",116,{"i":[{"n":"self"}],"o":{"n":"pthread_attr_t"}}],[11,"clone","","",104,{"i":[{"n":"self"}],"o":{"n":"_libc_fpxreg"}}],[11,"clone","","",105,{"i":[{"n":"self"}],"o":{"n":"_libc_xmmreg"}}],[11,"clone","","",106,{"i":[{"n":"self"}],"o":{"n":"_libc_fpstate"}}],[11,"clone","","",107,{"i":[{"n":"self"}],"o":{"n":"user_fpregs_struct"}}],[11,"clone","","",108,{"i":[{"n":"self"}],"o":{"n":"user_regs_struct"}}],[11,"clone","","",109,{"i":[{"n":"self"}],"o":{"n":"user"}}],[11,"clone","","",110,{"i":[{"n":"self"}],"o":{"n":"mcontext_t"}}],[11,"clone","","",111,{"i":[{"n":"self"}],"o":{"n":"ucontext_t"}}],[11,"clone","","",112,{"i":[{"n":"self"}],"o":{"n":"ipc_perm"}}],[11,"clone","","",113,{"i":[{"n":"self"}],"o":{"n":"shmid_ds"}}],[11,"clone","","",114,{"i":[{"n":"self"}],"o":{"n":"termios2"}}],[11,"clone","","",115,{"i":[{"n":"self"}],"o":{"n":"statvfs"}}],[11,"clone","","",117,{"i":[{"n":"self"}],"o":{"n":"sigset_t"}}],[11,"clone","","",98,{"i":[{"n":"self"}],"o":{"n":"sysinfo"}}],[11,"clone","","",99,{"i":[{"n":"self"}],"o":{"n":"msqid_ds"}}],[11,"clone","","",77,{"i":[{"n":"self"}],"o":{"n":"aiocb"}}],[11,"clone","","",78,{"i":[{"n":"self"}],"o":{"n":"__exit_status"}}],[11,"clone","","",79,{"i":[{"n":"self"}],"o":{"n":"__timeval"}}],[11,"clone","","",80,{"i":[{"n":"self"}],"o":{"n":"utmpx"}}],[11,"clone","","",81,{"i":[{"n":"self"}],"o":{"n":"sigaction"}}],[11,"clone","","",82,{"i":[{"n":"self"}],"o":{"n":"stack_t"}}],[11,"clone","","",83,{"i":[{"n":"self"}],"o":{"n":"siginfo_t"}}],[11,"clone","","",84,{"i":[{"n":"self"}],"o":{"n":"glob64_t"}}],[11,"clone","","",85,{"i":[{"n":"self"}],"o":{"n":"statfs"}}],[11,"clone","","",86,{"i":[{"n":"self"}],"o":{"n":"msghdr"}}],[11,"clone","","",87,{"i":[{"n":"self"}],"o":{"n":"cmsghdr"}}],[11,"clone","","",88,{"i":[{"n":"self"}],"o":{"n":"termios"}}],[11,"clone","","",89,{"i":[{"n":"self"}],"o":{"n":"flock"}}],[11,"clone","","",118,{"i":[{"n":"self"}],"o":{"n":"sem_t"}}],[11,"clone","","",90,{"i":[{"n":"self"}],"o":{"n":"mallinfo"}}],[11,"clone","","",91,{"i":[{"n":"self"}],"o":{"n":"nlmsghdr"}}],[11,"clone","","",92,{"i":[{"n":"self"}],"o":{"n":"nlmsgerr"}}],[11,"clone","","",93,{"i":[{"n":"self"}],"o":{"n":"nl_pktinfo"}}],[11,"clone","","",94,{"i":[{"n":"self"}],"o":{"n":"nl_mmap_req"}}],[11,"clone","","",95,{"i":[{"n":"self"}],"o":{"n":"nl_mmap_hdr"}}],[11,"clone","","",96,{"i":[{"n":"self"}],"o":{"n":"nlattr"}}],[11,"clone","","",97,{"i":[{"n":"self"}],"o":{"n":"rtentry"}}],[11,"clone","","",40,{"i":[{"n":"self"}],"o":{"n":"dirent"}}],[11,"clone","","",41,{"i":[{"n":"self"}],"o":{"n":"dirent64"}}],[11,"clone","","",42,{"i":[{"n":"self"}],"o":{"n":"rlimit64"}}],[11,"clone","","",43,{"i":[{"n":"self"}],"o":{"n":"glob_t"}}],[11,"clone","","",119,{"i":[{"n":"self"}],"o":{"n":"pthread_mutex_t"}}],[11,"clone","","",120,{"i":[{"n":"self"}],"o":{"n":"pthread_rwlock_t"}}],[11,"clone","","",121,{"i":[{"n":"self"}],"o":{"n":"pthread_mutexattr_t"}}],[11,"clone","","",122,{"i":[{"n":"self"}],"o":{"n":"pthread_rwlockattr_t"}}],[11,"clone","","",123,{"i":[{"n":"self"}],"o":{"n":"pthread_cond_t"}}],[11,"clone","","",124,{"i":[{"n":"self"}],"o":{"n":"pthread_condattr_t"}}],[11,"clone","","",44,{"i":[{"n":"self"}],"o":{"n":"passwd"}}],[11,"clone","","",45,{"i":[{"n":"self"}],"o":{"n":"spwd"}}],[11,"clone","","",46,{"i":[{"n":"self"}],"o":{"n":"dqblk"}}],[11,"clone","","",47,{"i":[{"n":"self"}],"o":{"n":"signalfd_siginfo"}}],[11,"clone","","",48,{"i":[{"n":"self"}],"o":{"n":"itimerspec"}}],[11,"clone","","",125,{"i":[{"n":"self"}],"o":{"n":"fsid_t"}}],[11,"clone","","",49,{"i":[{"n":"self"}],"o":{"n":"mq_attr"}}],[11,"clone","","",50,{"i":[{"n":"self"}],"o":{"n":"packet_mreq"}}],[11,"clone","","",126,{"i":[{"n":"self"}],"o":{"n":"cpu_set_t"}}],[11,"clone","","",51,{"i":[{"n":"self"}],"o":{"n":"if_nameindex"}}],[11,"clone","","",52,{"i":[{"n":"self"}],"o":{"n":"msginfo"}}],[11,"clone","","",53,{"i":[{"n":"self"}],"o":{"n":"mmsghdr"}}],[11,"clone","","",54,{"i":[{"n":"self"}],"o":{"n":"sembuf"}}],[11,"clone","","",55,{"i":[{"n":"self"}],"o":{"n":"input_event"}}],[11,"clone","","",56,{"i":[{"n":"self"}],"o":{"n":"input_id"}}],[11,"clone","","",57,{"i":[{"n":"self"}],"o":{"n":"input_absinfo"}}],[11,"clone","","",58,{"i":[{"n":"self"}],"o":{"n":"input_keymap_entry"}}],[11,"clone","","",59,{"i":[{"n":"self"}],"o":{"n":"input_mask"}}],[11,"clone","","",60,{"i":[{"n":"self"}],"o":{"n":"ff_replay"}}],[11,"clone","","",61,{"i":[{"n":"self"}],"o":{"n":"ff_trigger"}}],[11,"clone","","",62,{"i":[{"n":"self"}],"o":{"n":"ff_envelope"}}],[11,"clone","","",63,{"i":[{"n":"self"}],"o":{"n":"ff_constant_effect"}}],[11,"clone","","",64,{"i":[{"n":"self"}],"o":{"n":"ff_ramp_effect"}}],[11,"clone","","",65,{"i":[{"n":"self"}],"o":{"n":"ff_condition_effect"}}],[11,"clone","","",66,{"i":[{"n":"self"}],"o":{"n":"ff_periodic_effect"}}],[11,"clone","","",67,{"i":[{"n":"self"}],"o":{"n":"ff_rumble_effect"}}],[11,"clone","","",68,{"i":[{"n":"self"}],"o":{"n":"ff_effect"}}],[11,"clone","","",69,{"i":[{"n":"self"}],"o":{"n":"dl_phdr_info"}}],[11,"clone","","",70,{"i":[{"n":"self"}],"o":{"n":"elf32_phdr"}}],[11,"clone","","",71,{"i":[{"n":"self"}],"o":{"n":"elf64_phdr"}}],[11,"clone","","",72,{"i":[{"n":"self"}],"o":{"n":"ucred"}}],[11,"clone","","",73,{"i":[{"n":"self"}],"o":{"n":"mntent"}}],[11,"clone","","",127,{"i":[{"n":"self"}],"o":{"n":"posix_spawn_file_actions_t"}}],[11,"clone","","",128,{"i":[{"n":"self"}],"o":{"n":"posix_spawnattr_t"}}],[11,"clone","","",74,{"i":[{"n":"self"}],"o":{"n":"genlmsghdr"}}],[11,"clone","","",75,{"i":[{"n":"self"}],"o":{"n":"in6_pktinfo"}}],[11,"clone","","",76,{"i":[{"n":"self"}],"o":{"n":"arpd_request"}}],[11,"clone","","",20,{"i":[{"n":"self"}],"o":{"n":"sockaddr"}}],[11,"clone","","",21,{"i":[{"n":"self"}],"o":{"n":"sockaddr_in"}}],[11,"clone","","",22,{"i":[{"n":"self"}],"o":{"n":"sockaddr_in6"}}],[11,"clone","","",23,{"i":[{"n":"self"}],"o":{"n":"sockaddr_un"}}],[11,"clone","","",24,{"i":[{"n":"self"}],"o":{"n":"sockaddr_storage"}}],[11,"clone","","",25,{"i":[{"n":"self"}],"o":{"n":"addrinfo"}}],[11,"clone","","",26,{"i":[{"n":"self"}],"o":{"n":"sockaddr_nl"}}],[11,"clone","","",27,{"i":[{"n":"self"}],"o":{"n":"sockaddr_ll"}}],[11,"clone","","",129,{"i":[{"n":"self"}],"o":{"n":"fd_set"}}],[11,"clone","","",28,{"i":[{"n":"self"}],"o":{"n":"tm"}}],[11,"clone","","",29,{"i":[{"n":"self"}],"o":{"n":"sched_param"}}],[11,"clone","","",30,{"i":[{"n":"self"}],"o":{"n":"dl_info"}}],[11,"clone","","",31,{"i":[{"n":"self"}],"o":{"n":"epoll_event"}}],[11,"clone","","",32,{"i":[{"n":"self"}],"o":{"n":"utsname"}}],[11,"clone","","",33,{"i":[{"n":"self"}],"o":{"n":"lconv"}}],[11,"clone","","",34,{"i":[{"n":"self"}],"o":{"n":"sigevent"}}],[11,"clone","","",35,{"i":[{"n":"self"}],"o":{"n":"in_pktinfo"}}],[11,"clone","","",36,{"i":[{"n":"self"}],"o":{"n":"ifaddrs"}}],[11,"clone","","",130,{"i":[{"n":"self"}],"o":{"n":"in6_rtmsg"}}],[11,"clone","","",37,{"i":[{"n":"self"}],"o":{"n":"arpreq"}}],[11,"clone","","",38,{"i":[{"n":"self"}],"o":{"n":"arpreq_old"}}],[11,"clone","","",39,{"i":[{"n":"self"}],"o":{"n":"arphdr"}}],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"group"}}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"utimbuf"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"timeval"}}],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"timespec"}}],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"rlimit"}}],[11,"clone","","",5,{"i":[{"n":"self"}],"o":{"n":"rusage"}}],[11,"clone","","",6,{"i":[{"n":"self"}],"o":{"n":"in_addr"}}],[11,"clone","","",7,{"i":[{"n":"self"}],"o":{"n":"in6_addr"}}],[11,"clone","","",8,{"i":[{"n":"self"}],"o":{"n":"ip_mreq"}}],[11,"clone","","",9,{"i":[{"n":"self"}],"o":{"n":"ipv6_mreq"}}],[11,"clone","","",10,{"i":[{"n":"self"}],"o":{"n":"hostent"}}],[11,"clone","","",11,{"i":[{"n":"self"}],"o":{"n":"iovec"}}],[11,"clone","","",12,{"i":[{"n":"self"}],"o":{"n":"pollfd"}}],[11,"clone","","",13,{"i":[{"n":"self"}],"o":{"n":"winsize"}}],[11,"clone","","",14,{"i":[{"n":"self"}],"o":{"n":"linger"}}],[11,"clone","","",15,{"i":[{"n":"self"}],"o":{"n":"sigval"}}],[11,"clone","","",16,{"i":[{"n":"self"}],"o":{"n":"itimerval"}}],[11,"clone","","",17,{"i":[{"n":"self"}],"o":{"n":"tms"}}],[11,"clone","","",18,{"i":[{"n":"self"}],"o":{"n":"servent"}}],[11,"clone","","",19,{"i":[{"n":"self"}],"o":{"n":"protoent"}}],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"clockid_t","","",null,null],[6,"key_t","","",null,null],[6,"id_t","","",null,null],[6,"useconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"socklen_t","","",null,null],[6,"pthread_t","","",null,null],[6,"mode_t","","",null,null],[6,"ino64_t","","",null,null],[6,"off64_t","","",null,null],[6,"blkcnt64_t","","",null,null],[6,"rlim64_t","","",null,null],[6,"mqd_t","","",null,null],[6,"nfds_t","","",null,null],[6,"nl_item","","",null,null],[6,"idtype_t","","",null,null],[6,"loff_t","","",null,null],[6,"__u8","","",null,null],[6,"__u16","","",null,null],[6,"__s16","","",null,null],[6,"__u32","","",null,null],[6,"__s32","","",null,null],[6,"Elf32_Half","","",null,null],[6,"Elf32_Word","","",null,null],[6,"Elf32_Off","","",null,null],[6,"Elf32_Addr","","",null,null],[6,"Elf64_Half","","",null,null],[6,"Elf64_Word","","",null,null],[6,"Elf64_Off","","",null,null],[6,"Elf64_Addr","","",null,null],[6,"Elf64_Xword","","",null,null],[6,"__priority_which_t","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"ino_t","","",null,null],[6,"off_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"msgqnum_t","","",null,null],[6,"msglen_t","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"rlim_t","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"greg_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"__u64","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[17,"INT_MIN","","",null,null],[17,"INT_MAX","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_UNKNOWN","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"IFNAMSIZ","","",null,null],[17,"LOG_EMERG","","",null,null],[17,"LOG_ALERT","","",null,null],[17,"LOG_CRIT","","",null,null],[17,"LOG_ERR","","",null,null],[17,"LOG_WARNING","","",null,null],[17,"LOG_NOTICE","","",null,null],[17,"LOG_INFO","","",null,null],[17,"LOG_DEBUG","","",null,null],[17,"LOG_KERN","","",null,null],[17,"LOG_USER","","",null,null],[17,"LOG_MAIL","","",null,null],[17,"LOG_DAEMON","","",null,null],[17,"LOG_AUTH","","",null,null],[17,"LOG_SYSLOG","","",null,null],[17,"LOG_LPR","","",null,null],[17,"LOG_NEWS","","",null,null],[17,"LOG_UUCP","","",null,null],[17,"LOG_LOCAL0","","",null,null],[17,"LOG_LOCAL1","","",null,null],[17,"LOG_LOCAL2","","",null,null],[17,"LOG_LOCAL3","","",null,null],[17,"LOG_LOCAL4","","",null,null],[17,"LOG_LOCAL5","","",null,null],[17,"LOG_LOCAL6","","",null,null],[17,"LOG_LOCAL7","","",null,null],[17,"LOG_PID","","",null,null],[17,"LOG_CONS","","",null,null],[17,"LOG_ODELAY","","",null,null],[17,"LOG_NDELAY","","",null,null],[17,"LOG_NOWAIT","","",null,null],[17,"LOG_PRIMASK","","",null,null],[17,"LOG_FACMASK","","",null,null],[17,"PRIO_PROCESS","","",null,null],[17,"PRIO_PGRP","","",null,null],[17,"PRIO_USER","","",null,null],[17,"PRIO_MIN","","",null,null],[17,"PRIO_MAX","","",null,null],[17,"IPPROTO_ICMP","","",null,null],[17,"IPPROTO_ICMPV6","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_UDP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"INADDR_LOOPBACK","","",null,null],[17,"INADDR_ANY","","",null,null],[17,"INADDR_BROADCAST","","",null,null],[17,"INADDR_NONE","","",null,null],[17,"ARPOP_REQUEST","","",null,null],[17,"ARPOP_REPLY","","",null,null],[17,"ATF_COM","","",null,null],[17,"ATF_PERM","","",null,null],[17,"ATF_PUBL","","",null,null],[17,"ATF_USETRAILERS","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_SETLEASE","","",null,null],[17,"F_GETLEASE","","",null,null],[17,"F_NOTIFY","","",null,null],[17,"F_CANCELLK","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_SETPIPE_SZ","","",null,null],[17,"F_GETPIPE_SZ","","",null,null],[17,"F_ADD_SEALS","","",null,null],[17,"F_GET_SEALS","","",null,null],[17,"F_SEAL_SEAL","","",null,null],[17,"F_SEAL_SHRINK","","",null,null],[17,"F_SEAL_GROW","","",null,null],[17,"F_SEAL_WRITE","","",null,null],[17,"SIGTRAP","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"CLOCK_THREAD_CPUTIME_ID","","",null,null],[17,"CLOCK_MONOTONIC_RAW","","",null,null],[17,"CLOCK_REALTIME_COARSE","","",null,null],[17,"CLOCK_MONOTONIC_COARSE","","",null,null],[17,"CLOCK_BOOTTIME","","",null,null],[17,"CLOCK_REALTIME_ALARM","","",null,null],[17,"CLOCK_BOOTTIME_ALARM","","",null,null],[17,"TIMER_ABSTIME","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"SOCK_CLOEXEC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"LC_ALL","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"LC_MESSAGES_MASK","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_RDONLY","","",null,null],[17,"MS_NOSUID","","",null,null],[17,"MS_NODEV","","",null,null],[17,"MS_NOEXEC","","",null,null],[17,"MS_SYNCHRONOUS","","",null,null],[17,"MS_REMOUNT","","",null,null],[17,"MS_MANDLOCK","","",null,null],[17,"MS_DIRSYNC","","",null,null],[17,"MS_NOATIME","","",null,null],[17,"MS_NODIRATIME","","",null,null],[17,"MS_BIND","","",null,null],[17,"MS_MOVE","","",null,null],[17,"MS_REC","","",null,null],[17,"MS_SILENT","","",null,null],[17,"MS_POSIXACL","","",null,null],[17,"MS_UNBINDABLE","","",null,null],[17,"MS_PRIVATE","","",null,null],[17,"MS_SLAVE","","",null,null],[17,"MS_SHARED","","",null,null],[17,"MS_RELATIME","","",null,null],[17,"MS_KERNMOUNT","","",null,null],[17,"MS_I_VERSION","","",null,null],[17,"MS_STRICTATIME","","",null,null],[17,"MS_ACTIVE","","",null,null],[17,"MS_NOUSER","","",null,null],[17,"MS_MGC_VAL","","",null,null],[17,"MS_MGC_MSK","","",null,null],[17,"MS_RMT_MASK","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"SCM_RIGHTS","","",null,null],[17,"SCM_CREDENTIALS","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_FREE","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HUGEPAGE","","",null,null],[17,"MADV_NOHUGEPAGE","","",null,null],[17,"MADV_DONTDUMP","","",null,null],[17,"MADV_DODUMP","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"MADV_SOFT_OFFLINE","","",null,null],[17,"IFF_UP","","",null,null],[17,"IFF_BROADCAST","","",null,null],[17,"IFF_DEBUG","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"IFF_POINTOPOINT","","",null,null],[17,"IFF_NOTRAILERS","","",null,null],[17,"IFF_RUNNING","","",null,null],[17,"IFF_NOARP","","",null,null],[17,"IFF_PROMISC","","",null,null],[17,"IFF_ALLMULTI","","",null,null],[17,"IFF_MASTER","","",null,null],[17,"IFF_SLAVE","","",null,null],[17,"IFF_MULTICAST","","",null,null],[17,"IFF_PORTSEL","","",null,null],[17,"IFF_AUTOMEDIA","","",null,null],[17,"IFF_DYNAMIC","","",null,null],[17,"SOL_IP","","",null,null],[17,"SOL_TCP","","",null,null],[17,"SOL_UDP","","",null,null],[17,"SOL_IPV6","","",null,null],[17,"SOL_ICMPV6","","",null,null],[17,"SOL_RAW","","",null,null],[17,"SOL_DECNET","","",null,null],[17,"SOL_X25","","",null,null],[17,"SOL_PACKET","","",null,null],[17,"SOL_ATM","","",null,null],[17,"SOL_AAL","","",null,null],[17,"SOL_IRDA","","",null,null],[17,"SOL_NETBEUI","","",null,null],[17,"SOL_LLC","","",null,null],[17,"SOL_DCCP","","",null,null],[17,"SOL_NETLINK","","",null,null],[17,"SOL_TIPC","","",null,null],[17,"AF_UNSPEC","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_LOCAL","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_AX25","","",null,null],[17,"AF_IPX","","",null,null],[17,"AF_APPLETALK","","",null,null],[17,"AF_NETROM","","",null,null],[17,"AF_BRIDGE","","",null,null],[17,"AF_ATMPVC","","",null,null],[17,"AF_X25","","",null,null],[17,"AF_INET6","","",null,null],[17,"AF_ROSE","","",null,null],[17,"AF_DECnet","","",null,null],[17,"AF_NETBEUI","","",null,null],[17,"AF_SECURITY","","",null,null],[17,"AF_KEY","","",null,null],[17,"AF_NETLINK","","",null,null],[17,"AF_ROUTE","","",null,null],[17,"AF_PACKET","","",null,null],[17,"AF_ASH","","",null,null],[17,"AF_ECONET","","",null,null],[17,"AF_ATMSVC","","",null,null],[17,"AF_RDS","","",null,null],[17,"AF_SNA","","",null,null],[17,"AF_IRDA","","",null,null],[17,"AF_PPPOX","","",null,null],[17,"AF_WANPIPE","","",null,null],[17,"AF_LLC","","",null,null],[17,"AF_CAN","","",null,null],[17,"AF_TIPC","","",null,null],[17,"AF_BLUETOOTH","","",null,null],[17,"AF_IUCV","","",null,null],[17,"AF_RXRPC","","",null,null],[17,"AF_ISDN","","",null,null],[17,"AF_PHONET","","",null,null],[17,"AF_IEEE802154","","",null,null],[17,"AF_CAIF","","",null,null],[17,"AF_ALG","","",null,null],[17,"PF_UNSPEC","","",null,null],[17,"PF_UNIX","","",null,null],[17,"PF_LOCAL","","",null,null],[17,"PF_INET","","",null,null],[17,"PF_AX25","","",null,null],[17,"PF_IPX","","",null,null],[17,"PF_APPLETALK","","",null,null],[17,"PF_NETROM","","",null,null],[17,"PF_BRIDGE","","",null,null],[17,"PF_ATMPVC","","",null,null],[17,"PF_X25","","",null,null],[17,"PF_INET6","","",null,null],[17,"PF_ROSE","","",null,null],[17,"PF_DECnet","","",null,null],[17,"PF_NETBEUI","","",null,null],[17,"PF_SECURITY","","",null,null],[17,"PF_KEY","","",null,null],[17,"PF_NETLINK","","",null,null],[17,"PF_ROUTE","","",null,null],[17,"PF_PACKET","","",null,null],[17,"PF_ASH","","",null,null],[17,"PF_ECONET","","",null,null],[17,"PF_ATMSVC","","",null,null],[17,"PF_RDS","","",null,null],[17,"PF_SNA","","",null,null],[17,"PF_IRDA","","",null,null],[17,"PF_PPPOX","","",null,null],[17,"PF_WANPIPE","","",null,null],[17,"PF_LLC","","",null,null],[17,"PF_CAN","","",null,null],[17,"PF_TIPC","","",null,null],[17,"PF_BLUETOOTH","","",null,null],[17,"PF_IUCV","","",null,null],[17,"PF_RXRPC","","",null,null],[17,"PF_ISDN","","",null,null],[17,"PF_PHONET","","",null,null],[17,"PF_IEEE802154","","",null,null],[17,"PF_CAIF","","",null,null],[17,"PF_ALG","","",null,null],[17,"SOMAXCONN","","",null,null],[17,"MSG_OOB","","",null,null],[17,"MSG_PEEK","","",null,null],[17,"MSG_DONTROUTE","","",null,null],[17,"MSG_CTRUNC","","",null,null],[17,"MSG_TRUNC","","",null,null],[17,"MSG_DONTWAIT","","",null,null],[17,"MSG_EOR","","",null,null],[17,"MSG_WAITALL","","",null,null],[17,"MSG_FIN","","",null,null],[17,"MSG_SYN","","",null,null],[17,"MSG_CONFIRM","","",null,null],[17,"MSG_RST","","",null,null],[17,"MSG_ERRQUEUE","","",null,null],[17,"MSG_NOSIGNAL","","",null,null],[17,"MSG_MORE","","",null,null],[17,"MSG_WAITFORONE","","",null,null],[17,"MSG_FASTOPEN","","",null,null],[17,"MSG_CMSG_CLOEXEC","","",null,null],[17,"SCM_TIMESTAMP","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"SOCK_RDM","","",null,null],[17,"IP_MULTICAST_IF","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_PKTINFO","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_TRANSPARENT","","",null,null],[17,"IPV6_UNICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_IF","","",null,null],[17,"IPV6_MULTICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"IPV6_RECVPKTINFO","","",null,null],[17,"IPV6_PKTINFO","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"PATH_MAX","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"EPOLLIN","","",null,null],[17,"EPOLLPRI","","",null,null],[17,"EPOLLOUT","","",null,null],[17,"EPOLLRDNORM","","",null,null],[17,"EPOLLRDBAND","","",null,null],[17,"EPOLLWRNORM","","",null,null],[17,"EPOLLWRBAND","","",null,null],[17,"EPOLLMSG","","",null,null],[17,"EPOLLERR","","",null,null],[17,"EPOLLHUP","","",null,null],[17,"EPOLLET","","",null,null],[17,"EPOLL_CTL_ADD","","",null,null],[17,"EPOLL_CTL_MOD","","",null,null],[17,"EPOLL_CTL_DEL","","",null,null],[17,"MNT_DETACH","","",null,null],[17,"MNT_EXPIRE","","",null,null],[17,"Q_GETFMT","","",null,null],[17,"Q_GETINFO","","",null,null],[17,"Q_SETINFO","","",null,null],[17,"QIF_BLIMITS","","",null,null],[17,"QIF_SPACE","","",null,null],[17,"QIF_ILIMITS","","",null,null],[17,"QIF_INODES","","",null,null],[17,"QIF_BTIME","","",null,null],[17,"QIF_ITIME","","",null,null],[17,"QIF_LIMITS","","",null,null],[17,"QIF_USAGE","","",null,null],[17,"QIF_TIMES","","",null,null],[17,"QIF_ALL","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"CR0","","",null,null],[17,"FF0","","",null,null],[17,"BS0","","",null,null],[17,"VT0","","",null,null],[17,"VERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VLNEXT","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"CS5","","",null,null],[17,"CRTSCTS","","",null,null],[17,"ECHO","","",null,null],[17,"OCRNL","","",null,null],[17,"ONOCR","","",null,null],[17,"ONLRET","","",null,null],[17,"OFILL","","",null,null],[17,"OFDEL","","",null,null],[17,"CLONE_VM","","",null,null],[17,"CLONE_FS","","",null,null],[17,"CLONE_FILES","","",null,null],[17,"CLONE_SIGHAND","","",null,null],[17,"CLONE_PTRACE","","",null,null],[17,"CLONE_VFORK","","",null,null],[17,"CLONE_PARENT","","",null,null],[17,"CLONE_THREAD","","",null,null],[17,"CLONE_NEWNS","","",null,null],[17,"CLONE_SYSVSEM","","",null,null],[17,"CLONE_SETTLS","","",null,null],[17,"CLONE_PARENT_SETTID","","",null,null],[17,"CLONE_CHILD_CLEARTID","","",null,null],[17,"CLONE_DETACHED","","",null,null],[17,"CLONE_UNTRACED","","",null,null],[17,"CLONE_CHILD_SETTID","","",null,null],[17,"CLONE_NEWUTS","","",null,null],[17,"CLONE_NEWIPC","","",null,null],[17,"CLONE_NEWUSER","","",null,null],[17,"CLONE_NEWPID","","",null,null],[17,"CLONE_NEWNET","","",null,null],[17,"CLONE_IO","","",null,null],[17,"CLONE_NEWCGROUP","","",null,null],[17,"WNOHANG","","",null,null],[17,"WUNTRACED","","",null,null],[17,"WSTOPPED","","",null,null],[17,"WEXITED","","",null,null],[17,"WCONTINUED","","",null,null],[17,"WNOWAIT","","",null,null],[17,"PTRACE_O_TRACESYSGOOD","","",null,null],[17,"PTRACE_O_TRACEFORK","","",null,null],[17,"PTRACE_O_TRACEVFORK","","",null,null],[17,"PTRACE_O_TRACECLONE","","",null,null],[17,"PTRACE_O_TRACEEXEC","","",null,null],[17,"PTRACE_O_TRACEVFORKDONE","","",null,null],[17,"PTRACE_O_TRACEEXIT","","",null,null],[17,"PTRACE_O_TRACESECCOMP","","",null,null],[17,"PTRACE_O_EXITKILL","","",null,null],[17,"PTRACE_O_SUSPEND_SECCOMP","","",null,null],[17,"PTRACE_O_MASK","","",null,null],[17,"PTRACE_EVENT_FORK","","",null,null],[17,"PTRACE_EVENT_VFORK","","",null,null],[17,"PTRACE_EVENT_CLONE","","",null,null],[17,"PTRACE_EVENT_EXEC","","",null,null],[17,"PTRACE_EVENT_VFORK_DONE","","",null,null],[17,"PTRACE_EVENT_EXIT","","",null,null],[17,"PTRACE_EVENT_SECCOMP","","",null,null],[17,"__WNOTHREAD","","",null,null],[17,"__WALL","","",null,null],[17,"__WCLONE","","",null,null],[17,"SPLICE_F_MOVE","","",null,null],[17,"SPLICE_F_NONBLOCK","","",null,null],[17,"SPLICE_F_MORE","","",null,null],[17,"SPLICE_F_GIFT","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"POSIX_FADV_NORMAL","","",null,null],[17,"POSIX_FADV_RANDOM","","",null,null],[17,"POSIX_FADV_SEQUENTIAL","","",null,null],[17,"POSIX_FADV_WILLNEED","","",null,null],[17,"AT_FDCWD","","",null,null],[17,"AT_SYMLINK_NOFOLLOW","","",null,null],[17,"AT_REMOVEDIR","","",null,null],[17,"AT_SYMLINK_FOLLOW","","",null,null],[17,"AT_NO_AUTOMOUNT","","",null,null],[17,"AT_EMPTY_PATH","","",null,null],[17,"LOG_CRON","","",null,null],[17,"LOG_AUTHPRIV","","",null,null],[17,"LOG_FTP","","",null,null],[17,"LOG_PERROR","","",null,null],[17,"PIPE_BUF","","",null,null],[17,"SI_LOAD_SHIFT","","",null,null],[17,"SIGEV_SIGNAL","","",null,null],[17,"SIGEV_NONE","","",null,null],[17,"SIGEV_THREAD","","",null,null],[17,"P_ALL","","",null,null],[17,"P_PID","","",null,null],[17,"P_PGID","","",null,null],[17,"UTIME_OMIT","","",null,null],[17,"UTIME_NOW","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"POLLRDNORM","","",null,null],[17,"POLLRDBAND","","",null,null],[17,"IPTOS_LOWDELAY","","",null,null],[17,"IPTOS_THROUGHPUT","","",null,null],[17,"IPTOS_RELIABILITY","","",null,null],[17,"IPTOS_MINCOST","","",null,null],[17,"IPTOS_PREC_NETCONTROL","","",null,null],[17,"IPTOS_PREC_INTERNETCONTROL","","",null,null],[17,"IPTOS_PREC_CRITIC_ECP","","",null,null],[17,"IPTOS_PREC_FLASHOVERRIDE","","",null,null],[17,"IPTOS_PREC_FLASH","","",null,null],[17,"IPTOS_PREC_IMMEDIATE","","",null,null],[17,"IPTOS_PREC_PRIORITY","","",null,null],[17,"IPTOS_PREC_ROUTINE","","",null,null],[17,"IPOPT_COPY","","",null,null],[17,"IPOPT_CLASS_MASK","","",null,null],[17,"IPOPT_NUMBER_MASK","","",null,null],[17,"IPOPT_CONTROL","","",null,null],[17,"IPOPT_RESERVED1","","",null,null],[17,"IPOPT_MEASUREMENT","","",null,null],[17,"IPOPT_RESERVED2","","",null,null],[17,"IPOPT_END","","",null,null],[17,"IPOPT_NOOP","","",null,null],[17,"IPOPT_SEC","","",null,null],[17,"IPOPT_LSRR","","",null,null],[17,"IPOPT_TIMESTAMP","","",null,null],[17,"IPOPT_RR","","",null,null],[17,"IPOPT_SID","","",null,null],[17,"IPOPT_SSRR","","",null,null],[17,"IPOPT_RA","","",null,null],[17,"IPVERSION","","",null,null],[17,"MAXTTL","","",null,null],[17,"IPDEFTTL","","",null,null],[17,"IPOPT_OPTVAL","","",null,null],[17,"IPOPT_OLEN","","",null,null],[17,"IPOPT_OFFSET","","",null,null],[17,"IPOPT_MINOFF","","",null,null],[17,"MAX_IPOPTLEN","","",null,null],[17,"IPOPT_NOP","","",null,null],[17,"IPOPT_EOL","","",null,null],[17,"IPOPT_TS","","",null,null],[17,"IPOPT_TS_TSONLY","","",null,null],[17,"IPOPT_TS_TSANDADDR","","",null,null],[17,"IPOPT_TS_PRESPEC","","",null,null],[17,"ARPOP_RREQUEST","","",null,null],[17,"ARPOP_RREPLY","","",null,null],[17,"ARPOP_InREQUEST","","",null,null],[17,"ARPOP_InREPLY","","",null,null],[17,"ARPOP_NAK","","",null,null],[17,"ATF_NETMASK","","",null,null],[17,"ATF_DONTPUB","","",null,null],[17,"ARPHRD_NETROM","","",null,null],[17,"ARPHRD_ETHER","","",null,null],[17,"ARPHRD_EETHER","","",null,null],[17,"ARPHRD_AX25","","",null,null],[17,"ARPHRD_PRONET","","",null,null],[17,"ARPHRD_CHAOS","","",null,null],[17,"ARPHRD_IEEE802","","",null,null],[17,"ARPHRD_ARCNET","","",null,null],[17,"ARPHRD_APPLETLK","","",null,null],[17,"ARPHRD_DLCI","","",null,null],[17,"ARPHRD_ATM","","",null,null],[17,"ARPHRD_METRICOM","","",null,null],[17,"ARPHRD_IEEE1394","","",null,null],[17,"ARPHRD_EUI64","","",null,null],[17,"ARPHRD_INFINIBAND","","",null,null],[17,"ARPHRD_SLIP","","",null,null],[17,"ARPHRD_CSLIP","","",null,null],[17,"ARPHRD_SLIP6","","",null,null],[17,"ARPHRD_CSLIP6","","",null,null],[17,"ARPHRD_RSRVD","","",null,null],[17,"ARPHRD_ADAPT","","",null,null],[17,"ARPHRD_ROSE","","",null,null],[17,"ARPHRD_X25","","",null,null],[17,"ARPHRD_HWX25","","",null,null],[17,"ARPHRD_PPP","","",null,null],[17,"ARPHRD_CISCO","","",null,null],[17,"ARPHRD_HDLC","","",null,null],[17,"ARPHRD_LAPB","","",null,null],[17,"ARPHRD_DDCMP","","",null,null],[17,"ARPHRD_RAWHDLC","","",null,null],[17,"ARPHRD_TUNNEL","","",null,null],[17,"ARPHRD_TUNNEL6","","",null,null],[17,"ARPHRD_FRAD","","",null,null],[17,"ARPHRD_SKIP","","",null,null],[17,"ARPHRD_LOOPBACK","","",null,null],[17,"ARPHRD_LOCALTLK","","",null,null],[17,"ARPHRD_FDDI","","",null,null],[17,"ARPHRD_BIF","","",null,null],[17,"ARPHRD_SIT","","",null,null],[17,"ARPHRD_IPDDP","","",null,null],[17,"ARPHRD_IPGRE","","",null,null],[17,"ARPHRD_PIMREG","","",null,null],[17,"ARPHRD_HIPPI","","",null,null],[17,"ARPHRD_ASH","","",null,null],[17,"ARPHRD_ECONET","","",null,null],[17,"ARPHRD_IRDA","","",null,null],[17,"ARPHRD_FCPP","","",null,null],[17,"ARPHRD_FCAL","","",null,null],[17,"ARPHRD_FCPL","","",null,null],[17,"ARPHRD_FCFABRIC","","",null,null],[17,"ARPHRD_IEEE802_TR","","",null,null],[17,"ARPHRD_IEEE80211","","",null,null],[17,"ARPHRD_IEEE80211_PRISM","","",null,null],[17,"ARPHRD_IEEE80211_RADIOTAP","","",null,null],[17,"ARPHRD_IEEE802154","","",null,null],[17,"ARPHRD_VOID","","",null,null],[17,"ARPHRD_NONE","","",null,null],[17,"ABDAY_1","","",null,null],[17,"ABDAY_2","","",null,null],[17,"ABDAY_3","","",null,null],[17,"ABDAY_4","","",null,null],[17,"ABDAY_5","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ABDAY_7","","",null,null],[17,"DAY_1","","",null,null],[17,"DAY_2","","",null,null],[17,"DAY_3","","",null,null],[17,"DAY_4","","",null,null],[17,"DAY_5","","",null,null],[17,"DAY_6","","",null,null],[17,"DAY_7","","",null,null],[17,"ABMON_1","","",null,null],[17,"ABMON_2","","",null,null],[17,"ABMON_3","","",null,null],[17,"ABMON_4","","",null,null],[17,"ABMON_5","","",null,null],[17,"ABMON_6","","",null,null],[17,"ABMON_7","","",null,null],[17,"ABMON_8","","",null,null],[17,"ABMON_9","","",null,null],[17,"ABMON_10","","",null,null],[17,"ABMON_11","","",null,null],[17,"ABMON_12","","",null,null],[17,"MON_1","","",null,null],[17,"MON_2","","",null,null],[17,"MON_3","","",null,null],[17,"MON_4","","",null,null],[17,"MON_5","","",null,null],[17,"MON_6","","",null,null],[17,"MON_7","","",null,null],[17,"MON_8","","",null,null],[17,"MON_9","","",null,null],[17,"MON_10","","",null,null],[17,"MON_11","","",null,null],[17,"MON_12","","",null,null],[17,"AM_STR","","",null,null],[17,"PM_STR","","",null,null],[17,"D_T_FMT","","",null,null],[17,"D_FMT","","",null,null],[17,"T_FMT","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"ERA","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"ERA_T_FMT","","",null,null],[17,"CODESET","","",null,null],[17,"CRNCYSTR","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"RADIXCHAR","","",null,null],[17,"THOUSEP","","",null,null],[17,"YESEXPR","","",null,null],[17,"NOEXPR","","",null,null],[17,"YESSTR","","",null,null],[17,"NOSTR","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"_PC_LINK_MAX","","",null,null],[17,"_PC_MAX_CANON","","",null,null],[17,"_PC_MAX_INPUT","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_PC_PATH_MAX","","",null,null],[17,"_PC_PIPE_BUF","","",null,null],[17,"_PC_CHOWN_RESTRICTED","","",null,null],[17,"_PC_NO_TRUNC","","",null,null],[17,"_PC_VDISABLE","","",null,null],[17,"_PC_SYNC_IO","","",null,null],[17,"_PC_ASYNC_IO","","",null,null],[17,"_PC_PRIO_IO","","",null,null],[17,"_PC_SOCK_MAXBUF","","",null,null],[17,"_PC_FILESIZEBITS","","",null,null],[17,"_PC_REC_INCR_XFER_SIZE","","",null,null],[17,"_PC_REC_MAX_XFER_SIZE","","",null,null],[17,"_PC_REC_MIN_XFER_SIZE","","",null,null],[17,"_PC_REC_XFER_ALIGN","","",null,null],[17,"_PC_ALLOC_SIZE_MIN","","",null,null],[17,"_PC_SYMLINK_MAX","","",null,null],[17,"_PC_2_SYMLINKS","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_UIO_MAXIOV","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_THREAD_PROCESS_SHARED","","",null,null],[17,"_SC_NPROCESSORS_CONF","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_PHYS_PAGES","","",null,null],[17,"_SC_AVPHYS_PAGES","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_PASS_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XOPEN_XPG2","","",null,null],[17,"_SC_XOPEN_XPG3","","",null,null],[17,"_SC_XOPEN_XPG4","","",null,null],[17,"_SC_NZERO","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LP64_OFF64","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_ADVISORY_INFO","","",null,null],[17,"_SC_BARRIERS","","",null,null],[17,"_SC_CLOCK_SELECTION","","",null,null],[17,"_SC_CPUTIME","","",null,null],[17,"_SC_THREAD_CPUTIME","","",null,null],[17,"_SC_MONOTONIC_CLOCK","","",null,null],[17,"_SC_READER_WRITER_LOCKS","","",null,null],[17,"_SC_SPIN_LOCKS","","",null,null],[17,"_SC_REGEXP","","",null,null],[17,"_SC_SHELL","","",null,null],[17,"_SC_SPAWN","","",null,null],[17,"_SC_SPORADIC_SERVER","","",null,null],[17,"_SC_THREAD_SPORADIC_SERVER","","",null,null],[17,"_SC_TIMEOUTS","","",null,null],[17,"_SC_TYPED_MEMORY_OBJECTS","","",null,null],[17,"_SC_2_PBS","","",null,null],[17,"_SC_2_PBS_ACCOUNTING","","",null,null],[17,"_SC_2_PBS_LOCATE","","",null,null],[17,"_SC_2_PBS_MESSAGE","","",null,null],[17,"_SC_2_PBS_TRACK","","",null,null],[17,"_SC_SYMLOOP_MAX","","",null,null],[17,"_SC_STREAMS","","",null,null],[17,"_SC_2_PBS_CHECKPOINT","","",null,null],[17,"_SC_V6_ILP32_OFF32","","",null,null],[17,"_SC_V6_ILP32_OFFBIG","","",null,null],[17,"_SC_V6_LP64_OFF64","","",null,null],[17,"_SC_V6_LPBIG_OFFBIG","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"_SC_TRACE","","",null,null],[17,"_SC_TRACE_EVENT_FILTER","","",null,null],[17,"_SC_TRACE_INHERIT","","",null,null],[17,"_SC_TRACE_LOG","","",null,null],[17,"_SC_IPV6","","",null,null],[17,"_SC_RAW_SOCKETS","","",null,null],[17,"_SC_V7_ILP32_OFF32","","",null,null],[17,"_SC_V7_ILP32_OFFBIG","","",null,null],[17,"_SC_V7_LP64_OFF64","","",null,null],[17,"_SC_V7_LPBIG_OFFBIG","","",null,null],[17,"_SC_SS_REPL_MAX","","",null,null],[17,"_SC_TRACE_EVENT_NAME_MAX","","",null,null],[17,"_SC_TRACE_NAME_MAX","","",null,null],[17,"_SC_TRACE_SYS_MAX","","",null,null],[17,"_SC_TRACE_USER_EVENT_MAX","","",null,null],[17,"_SC_XOPEN_STREAMS","","",null,null],[17,"_SC_THREAD_ROBUST_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_ROBUST_PRIO_PROTECT","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"IFF_LOWER_UP","","",null,null],[17,"IFF_DORMANT","","",null,null],[17,"IFF_ECHO","","",null,null],[17,"IFF_TUN","","",null,null],[17,"IFF_TAP","","",null,null],[17,"IFF_NO_PI","","",null,null],[17,"TUN_READQ_SIZE","","",null,null],[17,"TUN_TUN_DEV","","",null,null],[17,"TUN_TAP_DEV","","",null,null],[17,"TUN_TYPE_MASK","","",null,null],[17,"IFF_ONE_QUEUE","","",null,null],[17,"IFF_VNET_HDR","","",null,null],[17,"IFF_TUN_EXCL","","",null,null],[17,"IFF_MULTI_QUEUE","","",null,null],[17,"IFF_ATTACH_QUEUE","","",null,null],[17,"IFF_DETACH_QUEUE","","",null,null],[17,"IFF_PERSIST","","",null,null],[17,"IFF_NOFILTER","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"ST_NODEV","","",null,null],[17,"ST_NOEXEC","","",null,null],[17,"ST_SYNCHRONOUS","","",null,null],[17,"ST_MANDLOCK","","",null,null],[17,"ST_WRITE","","",null,null],[17,"ST_APPEND","","",null,null],[17,"ST_IMMUTABLE","","",null,null],[17,"ST_NOATIME","","",null,null],[17,"ST_NODIRATIME","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"PTHREAD_MUTEX_NORMAL","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"PTHREAD_MUTEX_ERRORCHECK","","",null,null],[17,"PTHREAD_MUTEX_DEFAULT","","",null,null],[17,"PTHREAD_PROCESS_PRIVATE","","",null,null],[17,"PTHREAD_PROCESS_SHARED","","",null,null],[17,"__SIZEOF_PTHREAD_COND_T","","",null,null],[17,"RENAME_NOREPLACE","","",null,null],[17,"RENAME_EXCHANGE","","",null,null],[17,"RENAME_WHITEOUT","","",null,null],[17,"SCHED_OTHER","","",null,null],[17,"SCHED_FIFO","","",null,null],[17,"SCHED_RR","","",null,null],[17,"SCHED_BATCH","","",null,null],[17,"SCHED_IDLE","","",null,null],[17,"IPPROTO_HOPOPTS","","Hop-by-hop option header",null,null],[17,"IPPROTO_IGMP","","group mgmt protocol",null,null],[17,"IPPROTO_IPIP","","for compatibility",null,null],[17,"IPPROTO_EGP","","exterior gateway protocol",null,null],[17,"IPPROTO_PUP","","pup",null,null],[17,"IPPROTO_IDP","","xns idp",null,null],[17,"IPPROTO_TP","","tp-4 w/ class negotiation",null,null],[17,"IPPROTO_DCCP","","DCCP",null,null],[17,"IPPROTO_ROUTING","","IP6 routing header",null,null],[17,"IPPROTO_FRAGMENT","","IP6 fragmentation header",null,null],[17,"IPPROTO_RSVP","","resource reservation",null,null],[17,"IPPROTO_GRE","","General Routing Encap.",null,null],[17,"IPPROTO_ESP","","IP6 Encap Sec. Payload",null,null],[17,"IPPROTO_AH","","IP6 Auth Header",null,null],[17,"IPPROTO_NONE","","IP6 no next header",null,null],[17,"IPPROTO_DSTOPTS","","IP6 destination option",null,null],[17,"IPPROTO_MTP","","",null,null],[17,"IPPROTO_BEETPH","","",null,null],[17,"IPPROTO_ENCAP","","encapsulation header",null,null],[17,"IPPROTO_PIM","","Protocol indep. multicast",null,null],[17,"IPPROTO_COMP","","IP Payload Comp. Protocol",null,null],[17,"IPPROTO_SCTP","","SCTP",null,null],[17,"IPPROTO_MH","","",null,null],[17,"IPPROTO_UDPLITE","","",null,null],[17,"IPPROTO_MPLS","","",null,null],[17,"IPPROTO_RAW","","raw IP packet",null,null],[17,"IPPROTO_MAX","","",null,null],[17,"AF_IB","","",null,null],[17,"AF_MPLS","","",null,null],[17,"AF_NFC","","",null,null],[17,"AF_VSOCK","","",null,null],[17,"PF_IB","","",null,null],[17,"PF_MPLS","","",null,null],[17,"PF_NFC","","",null,null],[17,"PF_VSOCK","","",null,null],[17,"IPC_PRIVATE","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_INFO","","",null,null],[17,"MSG_STAT","","",null,null],[17,"MSG_INFO","","",null,null],[17,"MSG_NOERROR","","",null,null],[17,"MSG_EXCEPT","","",null,null],[17,"MSG_COPY","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHM_REMAP","","",null,null],[17,"SHM_EXEC","","",null,null],[17,"SHM_LOCK","","",null,null],[17,"SHM_UNLOCK","","",null,null],[17,"SHM_HUGETLB","","",null,null],[17,"SHM_NORESERVE","","",null,null],[17,"EPOLLRDHUP","","",null,null],[17,"EPOLLEXCLUSIVE","","",null,null],[17,"EPOLLONESHOT","","",null,null],[17,"QFMT_VFS_OLD","","",null,null],[17,"QFMT_VFS_V0","","",null,null],[17,"QFMT_VFS_V1","","",null,null],[17,"EFD_SEMAPHORE","","",null,null],[17,"LOG_NFACILITIES","","",null,null],[17,"SEM_FAILED","","",null,null],[17,"RB_AUTOBOOT","","",null,null],[17,"RB_HALT_SYSTEM","","",null,null],[17,"RB_ENABLE_CAD","","",null,null],[17,"RB_DISABLE_CAD","","",null,null],[17,"RB_POWER_OFF","","",null,null],[17,"RB_SW_SUSPEND","","",null,null],[17,"RB_KEXEC","","",null,null],[17,"AI_PASSIVE","","",null,null],[17,"AI_CANONNAME","","",null,null],[17,"AI_NUMERICHOST","","",null,null],[17,"AI_V4MAPPED","","",null,null],[17,"AI_ALL","","",null,null],[17,"AI_ADDRCONFIG","","",null,null],[17,"AI_NUMERICSERV","","",null,null],[17,"EAI_BADFLAGS","","",null,null],[17,"EAI_NONAME","","",null,null],[17,"EAI_AGAIN","","",null,null],[17,"EAI_FAIL","","",null,null],[17,"EAI_NODATA","","",null,null],[17,"EAI_FAMILY","","",null,null],[17,"EAI_SOCKTYPE","","",null,null],[17,"EAI_SERVICE","","",null,null],[17,"EAI_MEMORY","","",null,null],[17,"EAI_SYSTEM","","",null,null],[17,"EAI_OVERFLOW","","",null,null],[17,"NI_NUMERICHOST","","",null,null],[17,"NI_NUMERICSERV","","",null,null],[17,"NI_NOFQDN","","",null,null],[17,"NI_NAMEREQD","","",null,null],[17,"NI_DGRAM","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_BEFORE","","",null,null],[17,"SYNC_FILE_RANGE_WRITE","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_AFTER","","",null,null],[17,"AIO_CANCELED","","",null,null],[17,"AIO_NOTCANCELED","","",null,null],[17,"AIO_ALLDONE","","",null,null],[17,"LIO_READ","","",null,null],[17,"LIO_WRITE","","",null,null],[17,"LIO_NOP","","",null,null],[17,"LIO_WAIT","","",null,null],[17,"LIO_NOWAIT","","",null,null],[17,"MREMAP_MAYMOVE","","",null,null],[17,"MREMAP_FIXED","","",null,null],[17,"PR_SET_PDEATHSIG","","",null,null],[17,"PR_GET_PDEATHSIG","","",null,null],[17,"PR_GET_DUMPABLE","","",null,null],[17,"PR_SET_DUMPABLE","","",null,null],[17,"PR_GET_UNALIGN","","",null,null],[17,"PR_SET_UNALIGN","","",null,null],[17,"PR_UNALIGN_NOPRINT","","",null,null],[17,"PR_UNALIGN_SIGBUS","","",null,null],[17,"PR_GET_KEEPCAPS","","",null,null],[17,"PR_SET_KEEPCAPS","","",null,null],[17,"PR_GET_FPEMU","","",null,null],[17,"PR_SET_FPEMU","","",null,null],[17,"PR_FPEMU_NOPRINT","","",null,null],[17,"PR_FPEMU_SIGFPE","","",null,null],[17,"PR_GET_FPEXC","","",null,null],[17,"PR_SET_FPEXC","","",null,null],[17,"PR_FP_EXC_SW_ENABLE","","",null,null],[17,"PR_FP_EXC_DIV","","",null,null],[17,"PR_FP_EXC_OVF","","",null,null],[17,"PR_FP_EXC_UND","","",null,null],[17,"PR_FP_EXC_RES","","",null,null],[17,"PR_FP_EXC_INV","","",null,null],[17,"PR_FP_EXC_DISABLED","","",null,null],[17,"PR_FP_EXC_NONRECOV","","",null,null],[17,"PR_FP_EXC_ASYNC","","",null,null],[17,"PR_FP_EXC_PRECISE","","",null,null],[17,"PR_GET_TIMING","","",null,null],[17,"PR_SET_TIMING","","",null,null],[17,"PR_TIMING_STATISTICAL","","",null,null],[17,"PR_TIMING_TIMESTAMP","","",null,null],[17,"PR_SET_NAME","","",null,null],[17,"PR_GET_NAME","","",null,null],[17,"PR_GET_ENDIAN","","",null,null],[17,"PR_SET_ENDIAN","","",null,null],[17,"PR_ENDIAN_BIG","","",null,null],[17,"PR_ENDIAN_LITTLE","","",null,null],[17,"PR_ENDIAN_PPC_LITTLE","","",null,null],[17,"PR_GET_SECCOMP","","",null,null],[17,"PR_SET_SECCOMP","","",null,null],[17,"PR_CAPBSET_READ","","",null,null],[17,"PR_CAPBSET_DROP","","",null,null],[17,"PR_GET_TSC","","",null,null],[17,"PR_SET_TSC","","",null,null],[17,"PR_TSC_ENABLE","","",null,null],[17,"PR_TSC_SIGSEGV","","",null,null],[17,"PR_GET_SECUREBITS","","",null,null],[17,"PR_SET_SECUREBITS","","",null,null],[17,"PR_SET_TIMERSLACK","","",null,null],[17,"PR_GET_TIMERSLACK","","",null,null],[17,"PR_TASK_PERF_EVENTS_DISABLE","","",null,null],[17,"PR_TASK_PERF_EVENTS_ENABLE","","",null,null],[17,"PR_MCE_KILL","","",null,null],[17,"PR_MCE_KILL_CLEAR","","",null,null],[17,"PR_MCE_KILL_SET","","",null,null],[17,"PR_MCE_KILL_LATE","","",null,null],[17,"PR_MCE_KILL_EARLY","","",null,null],[17,"PR_MCE_KILL_DEFAULT","","",null,null],[17,"PR_MCE_KILL_GET","","",null,null],[17,"PR_SET_MM","","",null,null],[17,"PR_SET_MM_START_CODE","","",null,null],[17,"PR_SET_MM_END_CODE","","",null,null],[17,"PR_SET_MM_START_DATA","","",null,null],[17,"PR_SET_MM_END_DATA","","",null,null],[17,"PR_SET_MM_START_STACK","","",null,null],[17,"PR_SET_MM_START_BRK","","",null,null],[17,"PR_SET_MM_BRK","","",null,null],[17,"PR_SET_MM_ARG_START","","",null,null],[17,"PR_SET_MM_ARG_END","","",null,null],[17,"PR_SET_MM_ENV_START","","",null,null],[17,"PR_SET_MM_ENV_END","","",null,null],[17,"PR_SET_MM_AUXV","","",null,null],[17,"PR_SET_MM_EXE_FILE","","",null,null],[17,"PR_SET_MM_MAP","","",null,null],[17,"PR_SET_MM_MAP_SIZE","","",null,null],[17,"PR_SET_PTRACER","","",null,null],[17,"PR_SET_CHILD_SUBREAPER","","",null,null],[17,"PR_GET_CHILD_SUBREAPER","","",null,null],[17,"PR_SET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_TID_ADDRESS","","",null,null],[17,"PR_SET_THP_DISABLE","","",null,null],[17,"PR_GET_THP_DISABLE","","",null,null],[17,"PR_MPX_ENABLE_MANAGEMENT","","",null,null],[17,"PR_MPX_DISABLE_MANAGEMENT","","",null,null],[17,"PR_SET_FP_MODE","","",null,null],[17,"PR_GET_FP_MODE","","",null,null],[17,"PR_FP_MODE_FR","","",null,null],[17,"PR_FP_MODE_FRE","","",null,null],[17,"PR_CAP_AMBIENT","","",null,null],[17,"PR_CAP_AMBIENT_IS_SET","","",null,null],[17,"PR_CAP_AMBIENT_RAISE","","",null,null],[17,"PR_CAP_AMBIENT_LOWER","","",null,null],[17,"PR_CAP_AMBIENT_CLEAR_ALL","","",null,null],[17,"GRND_NONBLOCK","","",null,null],[17,"GRND_RANDOM","","",null,null],[17,"SECCOMP_MODE_DISABLED","","",null,null],[17,"SECCOMP_MODE_STRICT","","",null,null],[17,"SECCOMP_MODE_FILTER","","",null,null],[17,"ITIMER_REAL","","",null,null],[17,"ITIMER_VIRTUAL","","",null,null],[17,"ITIMER_PROF","","",null,null],[17,"TFD_CLOEXEC","","",null,null],[17,"TFD_NONBLOCK","","",null,null],[17,"TFD_TIMER_ABSTIME","","",null,null],[17,"XATTR_CREATE","","",null,null],[17,"XATTR_REPLACE","","",null,null],[17,"_POSIX_VDISABLE","","",null,null],[17,"FALLOC_FL_KEEP_SIZE","","",null,null],[17,"FALLOC_FL_PUNCH_HOLE","","",null,null],[17,"FALLOC_FL_COLLAPSE_RANGE","","",null,null],[17,"FALLOC_FL_ZERO_RANGE","","",null,null],[17,"FALLOC_FL_INSERT_RANGE","","",null,null],[17,"FALLOC_FL_UNSHARE_RANGE","","",null,null],[17,"ENOATTR","","",null,null],[17,"SO_ORIGINAL_DST","","",null,null],[17,"IUTF8","","",null,null],[17,"CMSPAR","","",null,null],[17,"MFD_CLOEXEC","","",null,null],[17,"MFD_ALLOW_SEALING","","",null,null],[17,"PT_NULL","","",null,null],[17,"PT_LOAD","","",null,null],[17,"PT_DYNAMIC","","",null,null],[17,"PT_INTERP","","",null,null],[17,"PT_NOTE","","",null,null],[17,"PT_SHLIB","","",null,null],[17,"PT_PHDR","","",null,null],[17,"PT_TLS","","",null,null],[17,"PT_NUM","","",null,null],[17,"PT_LOOS","","",null,null],[17,"PT_GNU_EH_FRAME","","",null,null],[17,"PT_GNU_STACK","","",null,null],[17,"PT_GNU_RELRO","","",null,null],[17,"ETH_ALEN","","",null,null],[17,"ETH_HLEN","","",null,null],[17,"ETH_ZLEN","","",null,null],[17,"ETH_DATA_LEN","","",null,null],[17,"ETH_FRAME_LEN","","",null,null],[17,"ETH_FCS_LEN","","",null,null],[17,"ETH_P_LOOP","","",null,null],[17,"ETH_P_PUP","","",null,null],[17,"ETH_P_PUPAT","","",null,null],[17,"ETH_P_IP","","",null,null],[17,"ETH_P_X25","","",null,null],[17,"ETH_P_ARP","","",null,null],[17,"ETH_P_BPQ","","",null,null],[17,"ETH_P_IEEEPUP","","",null,null],[17,"ETH_P_IEEEPUPAT","","",null,null],[17,"ETH_P_BATMAN","","",null,null],[17,"ETH_P_DEC","","",null,null],[17,"ETH_P_DNA_DL","","",null,null],[17,"ETH_P_DNA_RC","","",null,null],[17,"ETH_P_DNA_RT","","",null,null],[17,"ETH_P_LAT","","",null,null],[17,"ETH_P_DIAG","","",null,null],[17,"ETH_P_CUST","","",null,null],[17,"ETH_P_SCA","","",null,null],[17,"ETH_P_TEB","","",null,null],[17,"ETH_P_RARP","","",null,null],[17,"ETH_P_ATALK","","",null,null],[17,"ETH_P_AARP","","",null,null],[17,"ETH_P_8021Q","","",null,null],[17,"ETH_P_IPX","","",null,null],[17,"ETH_P_IPV6","","",null,null],[17,"ETH_P_PAUSE","","",null,null],[17,"ETH_P_SLOW","","",null,null],[17,"ETH_P_WCCP","","",null,null],[17,"ETH_P_MPLS_UC","","",null,null],[17,"ETH_P_MPLS_MC","","",null,null],[17,"ETH_P_ATMMPOA","","",null,null],[17,"ETH_P_PPP_DISC","","",null,null],[17,"ETH_P_PPP_SES","","",null,null],[17,"ETH_P_LINK_CTL","","",null,null],[17,"ETH_P_ATMFATE","","",null,null],[17,"ETH_P_PAE","","",null,null],[17,"ETH_P_AOE","","",null,null],[17,"ETH_P_8021AD","","",null,null],[17,"ETH_P_802_EX1","","",null,null],[17,"ETH_P_TIPC","","",null,null],[17,"ETH_P_MACSEC","","",null,null],[17,"ETH_P_8021AH","","",null,null],[17,"ETH_P_MVRP","","",null,null],[17,"ETH_P_1588","","",null,null],[17,"ETH_P_PRP","","",null,null],[17,"ETH_P_FCOE","","",null,null],[17,"ETH_P_TDLS","","",null,null],[17,"ETH_P_FIP","","",null,null],[17,"ETH_P_80221","","",null,null],[17,"ETH_P_LOOPBACK","","",null,null],[17,"ETH_P_QINQ1","","",null,null],[17,"ETH_P_QINQ2","","",null,null],[17,"ETH_P_QINQ3","","",null,null],[17,"ETH_P_EDSA","","",null,null],[17,"ETH_P_AF_IUCV","","",null,null],[17,"ETH_P_802_3_MIN","","",null,null],[17,"ETH_P_802_3","","",null,null],[17,"ETH_P_AX25","","",null,null],[17,"ETH_P_ALL","","",null,null],[17,"ETH_P_802_2","","",null,null],[17,"ETH_P_SNAP","","",null,null],[17,"ETH_P_DDCMP","","",null,null],[17,"ETH_P_WAN_PPP","","",null,null],[17,"ETH_P_PPP_MP","","",null,null],[17,"ETH_P_LOCALTALK","","",null,null],[17,"ETH_P_CANFD","","",null,null],[17,"ETH_P_PPPTALK","","",null,null],[17,"ETH_P_TR_802_2","","",null,null],[17,"ETH_P_MOBITEX","","",null,null],[17,"ETH_P_CONTROL","","",null,null],[17,"ETH_P_IRDA","","",null,null],[17,"ETH_P_ECONET","","",null,null],[17,"ETH_P_HDLC","","",null,null],[17,"ETH_P_ARCNET","","",null,null],[17,"ETH_P_DSA","","",null,null],[17,"ETH_P_TRAILER","","",null,null],[17,"ETH_P_PHONET","","",null,null],[17,"ETH_P_IEEE802154","","",null,null],[17,"ETH_P_CAIF","","",null,null],[17,"POSIX_SPAWN_RESETIDS","","",null,null],[17,"POSIX_SPAWN_SETPGROUP","","",null,null],[17,"POSIX_SPAWN_SETSIGDEF","","",null,null],[17,"POSIX_SPAWN_SETSIGMASK","","",null,null],[17,"POSIX_SPAWN_SETSCHEDPARAM","","",null,null],[17,"POSIX_SPAWN_SETSCHEDULER","","",null,null],[17,"NLMSG_NOOP","","",null,null],[17,"NLMSG_ERROR","","",null,null],[17,"NLMSG_DONE","","",null,null],[17,"NLMSG_OVERRUN","","",null,null],[17,"NLMSG_MIN_TYPE","","",null,null],[17,"GENL_NAMSIZ","","",null,null],[17,"GENL_MIN_ID","","",null,null],[17,"GENL_MAX_ID","","",null,null],[17,"GENL_ADMIN_PERM","","",null,null],[17,"GENL_CMD_CAP_DO","","",null,null],[17,"GENL_CMD_CAP_DUMP","","",null,null],[17,"GENL_CMD_CAP_HASPOL","","",null,null],[17,"GENL_ID_CTRL","","",null,null],[17,"CTRL_CMD_UNSPEC","","",null,null],[17,"CTRL_CMD_NEWFAMILY","","",null,null],[17,"CTRL_CMD_DELFAMILY","","",null,null],[17,"CTRL_CMD_GETFAMILY","","",null,null],[17,"CTRL_CMD_NEWOPS","","",null,null],[17,"CTRL_CMD_DELOPS","","",null,null],[17,"CTRL_CMD_GETOPS","","",null,null],[17,"CTRL_CMD_NEWMCAST_GRP","","",null,null],[17,"CTRL_CMD_DELMCAST_GRP","","",null,null],[17,"CTRL_CMD_GETMCAST_GRP","","",null,null],[17,"CTRL_ATTR_UNSPEC","","",null,null],[17,"CTRL_ATTR_FAMILY_ID","","",null,null],[17,"CTRL_ATTR_FAMILY_NAME","","",null,null],[17,"CTRL_ATTR_VERSION","","",null,null],[17,"CTRL_ATTR_HDRSIZE","","",null,null],[17,"CTRL_ATTR_MAXATTR","","",null,null],[17,"CTRL_ATTR_OPS","","",null,null],[17,"CTRL_ATTR_MCAST_GROUPS","","",null,null],[17,"CTRL_ATTR_OP_UNSPEC","","",null,null],[17,"CTRL_ATTR_OP_ID","","",null,null],[17,"CTRL_ATTR_OP_FLAGS","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_UNSPEC","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_NAME","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_ID","","",null,null],[17,"PACKET_ADD_MEMBERSHIP","","",null,null],[17,"PACKET_DROP_MEMBERSHIP","","",null,null],[17,"PACKET_MR_MULTICAST","","",null,null],[17,"PACKET_MR_PROMISC","","",null,null],[17,"PACKET_MR_ALLMULTI","","",null,null],[17,"PACKET_MR_UNICAST","","",null,null],[17,"NF_DROP","","",null,null],[17,"NF_ACCEPT","","",null,null],[17,"NF_STOLEN","","",null,null],[17,"NF_QUEUE","","",null,null],[17,"NF_REPEAT","","",null,null],[17,"NF_STOP","","",null,null],[17,"NF_MAX_VERDICT","","",null,null],[17,"NF_VERDICT_MASK","","",null,null],[17,"NF_VERDICT_FLAG_QUEUE_BYPASS","","",null,null],[17,"NF_VERDICT_QMASK","","",null,null],[17,"NF_VERDICT_QBITS","","",null,null],[17,"NF_VERDICT_BITS","","",null,null],[17,"NF_INET_PRE_ROUTING","","",null,null],[17,"NF_INET_LOCAL_IN","","",null,null],[17,"NF_INET_FORWARD","","",null,null],[17,"NF_INET_LOCAL_OUT","","",null,null],[17,"NF_INET_POST_ROUTING","","",null,null],[17,"NF_INET_NUMHOOKS","","",null,null],[17,"NFPROTO_UNSPEC","","",null,null],[17,"NFPROTO_IPV4","","",null,null],[17,"NFPROTO_ARP","","",null,null],[17,"NFPROTO_BRIDGE","","",null,null],[17,"NFPROTO_IPV6","","",null,null],[17,"NFPROTO_DECNET","","",null,null],[17,"NFPROTO_NUMPROTO","","",null,null],[17,"NF_IP_PRE_ROUTING","","",null,null],[17,"NF_IP_LOCAL_IN","","",null,null],[17,"NF_IP_FORWARD","","",null,null],[17,"NF_IP_LOCAL_OUT","","",null,null],[17,"NF_IP_POST_ROUTING","","",null,null],[17,"NF_IP_NUMHOOKS","","",null,null],[17,"NF_IP_PRI_FIRST","","",null,null],[17,"NF_IP_PRI_CONNTRACK_DEFRAG","","",null,null],[17,"NF_IP_PRI_RAW","","",null,null],[17,"NF_IP_PRI_SELINUX_FIRST","","",null,null],[17,"NF_IP_PRI_CONNTRACK","","",null,null],[17,"NF_IP_PRI_MANGLE","","",null,null],[17,"NF_IP_PRI_NAT_DST","","",null,null],[17,"NF_IP_PRI_FILTER","","",null,null],[17,"NF_IP_PRI_SECURITY","","",null,null],[17,"NF_IP_PRI_NAT_SRC","","",null,null],[17,"NF_IP_PRI_SELINUX_LAST","","",null,null],[17,"NF_IP_PRI_CONNTRACK_HELPER","","",null,null],[17,"NF_IP_PRI_CONNTRACK_CONFIRM","","",null,null],[17,"NF_IP_PRI_LAST","","",null,null],[17,"NF_IP6_PRE_ROUTING","","",null,null],[17,"NF_IP6_LOCAL_IN","","",null,null],[17,"NF_IP6_FORWARD","","",null,null],[17,"NF_IP6_LOCAL_OUT","","",null,null],[17,"NF_IP6_POST_ROUTING","","",null,null],[17,"NF_IP6_NUMHOOKS","","",null,null],[17,"NF_IP6_PRI_FIRST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK_DEFRAG","","",null,null],[17,"NF_IP6_PRI_RAW","","",null,null],[17,"NF_IP6_PRI_SELINUX_FIRST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK","","",null,null],[17,"NF_IP6_PRI_MANGLE","","",null,null],[17,"NF_IP6_PRI_NAT_DST","","",null,null],[17,"NF_IP6_PRI_FILTER","","",null,null],[17,"NF_IP6_PRI_SECURITY","","",null,null],[17,"NF_IP6_PRI_NAT_SRC","","",null,null],[17,"NF_IP6_PRI_SELINUX_LAST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK_HELPER","","",null,null],[17,"NF_IP6_PRI_LAST","","",null,null],[17,"SIOCADDRT","","",null,null],[17,"SIOCDELRT","","",null,null],[17,"SIOCGIFNAME","","",null,null],[17,"SIOCSIFLINK","","",null,null],[17,"SIOCGIFCONF","","",null,null],[17,"SIOCGIFFLAGS","","",null,null],[17,"SIOCSIFFLAGS","","",null,null],[17,"SIOCGIFADDR","","",null,null],[17,"SIOCSIFADDR","","",null,null],[17,"SIOCGIFDSTADDR","","",null,null],[17,"SIOCSIFDSTADDR","","",null,null],[17,"SIOCGIFBRDADDR","","",null,null],[17,"SIOCSIFBRDADDR","","",null,null],[17,"SIOCGIFNETMASK","","",null,null],[17,"SIOCSIFNETMASK","","",null,null],[17,"SIOCGIFMETRIC","","",null,null],[17,"SIOCSIFMETRIC","","",null,null],[17,"SIOCGIFMEM","","",null,null],[17,"SIOCSIFMEM","","",null,null],[17,"SIOCGIFMTU","","",null,null],[17,"SIOCSIFMTU","","",null,null],[17,"SIOCSIFHWADDR","","",null,null],[17,"SIOCGIFENCAP","","",null,null],[17,"SIOCSIFENCAP","","",null,null],[17,"SIOCGIFHWADDR","","",null,null],[17,"SIOCGIFSLAVE","","",null,null],[17,"SIOCSIFSLAVE","","",null,null],[17,"SIOCADDMULTI","","",null,null],[17,"SIOCDELMULTI","","",null,null],[17,"SIOCDARP","","",null,null],[17,"SIOCGARP","","",null,null],[17,"SIOCSARP","","",null,null],[17,"SIOCDRARP","","",null,null],[17,"SIOCGRARP","","",null,null],[17,"SIOCSRARP","","",null,null],[17,"SIOCGIFMAP","","",null,null],[17,"SIOCSIFMAP","","",null,null],[17,"IPTOS_TOS_MASK","","",null,null],[17,"IPTOS_PREC_MASK","","",null,null],[17,"RTF_UP","","",null,null],[17,"RTF_GATEWAY","","",null,null],[17,"RTF_HOST","","",null,null],[17,"RTF_REINSTATE","","",null,null],[17,"RTF_DYNAMIC","","",null,null],[17,"RTF_MODIFIED","","",null,null],[17,"RTF_MTU","","",null,null],[17,"RTF_MSS","","",null,null],[17,"RTF_WINDOW","","",null,null],[17,"RTF_IRTT","","",null,null],[17,"RTF_REJECT","","",null,null],[17,"RTF_STATIC","","",null,null],[17,"RTF_XRESOLVE","","",null,null],[17,"RTF_NOFORWARD","","",null,null],[17,"RTF_THROW","","",null,null],[17,"RTF_NOPMTUDISC","","",null,null],[17,"RTF_DEFAULT","","",null,null],[17,"RTF_ALLONLINK","","",null,null],[17,"RTF_ADDRCONF","","",null,null],[17,"RTF_LINKRT","","",null,null],[17,"RTF_NONEXTHOP","","",null,null],[17,"RTF_CACHE","","",null,null],[17,"RTF_FLOW","","",null,null],[17,"RTF_POLICY","","",null,null],[17,"RTCF_VALVE","","",null,null],[17,"RTCF_MASQ","","",null,null],[17,"RTCF_NAT","","",null,null],[17,"RTCF_DOREDIRECT","","",null,null],[17,"RTCF_LOG","","",null,null],[17,"RTCF_DIRECTSRC","","",null,null],[17,"RTF_LOCAL","","",null,null],[17,"RTF_INTERFACE","","",null,null],[17,"RTF_MULTICAST","","",null,null],[17,"RTF_BROADCAST","","",null,null],[17,"RTF_NAT","","",null,null],[17,"RTF_ADDRCLASSMASK","","",null,null],[17,"RT_CLASS_UNSPEC","","",null,null],[17,"RT_CLASS_DEFAULT","","",null,null],[17,"RT_CLASS_MAIN","","",null,null],[17,"RT_CLASS_LOCAL","","",null,null],[17,"RT_CLASS_MAX","","",null,null],[17,"RTMSG_OVERRUN","","",null,null],[17,"RTMSG_NEWDEVICE","","",null,null],[17,"RTMSG_DELDEVICE","","",null,null],[17,"RTMSG_NEWROUTE","","",null,null],[17,"RTMSG_DELROUTE","","",null,null],[17,"RTMSG_NEWRULE","","",null,null],[17,"RTMSG_DELRULE","","",null,null],[17,"RTMSG_CONTROL","","",null,null],[17,"RTMSG_AR_FAILED","","",null,null],[17,"MAX_ADDR_LEN","","",null,null],[17,"ARPD_UPDATE","","",null,null],[17,"ARPD_LOOKUP","","",null,null],[17,"ARPD_FLUSH","","",null,null],[17,"ATF_MAGIC","","",null,null],[17,"MODULE_INIT_IGNORE_MODVERSIONS","","",null,null],[17,"MODULE_INIT_IGNORE_VERMAGIC","","",null,null],[17,"__UT_LINESIZE","","",null,null],[17,"__UT_NAMESIZE","","",null,null],[17,"__UT_HOSTSIZE","","",null,null],[17,"EMPTY","","",null,null],[17,"RUN_LVL","","",null,null],[17,"BOOT_TIME","","",null,null],[17,"NEW_TIME","","",null,null],[17,"OLD_TIME","","",null,null],[17,"INIT_PROCESS","","",null,null],[17,"LOGIN_PROCESS","","",null,null],[17,"USER_PROCESS","","",null,null],[17,"DEAD_PROCESS","","",null,null],[17,"ACCOUNTING","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"SOCK_NONBLOCK","","",null,null],[17,"SOL_RXRPC","","",null,null],[17,"SOL_PPPOL2TP","","",null,null],[17,"SOL_BLUETOOTH","","",null,null],[17,"SOL_PNPIPE","","",null,null],[17,"SOL_RDS","","",null,null],[17,"SOL_IUCV","","",null,null],[17,"SOL_CAIF","","",null,null],[17,"SOL_ALG","","",null,null],[17,"SOL_NFC","","",null,null],[17,"MSG_TRYHARD","","",null,null],[17,"LC_PAPER","","",null,null],[17,"LC_NAME","","",null,null],[17,"LC_ADDRESS","","",null,null],[17,"LC_TELEPHONE","","",null,null],[17,"LC_MEASUREMENT","","",null,null],[17,"LC_IDENTIFICATION","","",null,null],[17,"LC_PAPER_MASK","","",null,null],[17,"LC_NAME_MASK","","",null,null],[17,"LC_ADDRESS_MASK","","",null,null],[17,"LC_TELEPHONE_MASK","","",null,null],[17,"LC_MEASUREMENT_MASK","","",null,null],[17,"LC_IDENTIFICATION_MASK","","",null,null],[17,"LC_ALL_MASK","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"ENOTSUP","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"SOCK_DCCP","","",null,null],[17,"SOCK_PACKET","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"DCCP_SOCKOPT_PACKET_SIZE","","",null,null],[17,"DCCP_SOCKOPT_SERVICE","","",null,null],[17,"DCCP_SOCKOPT_CHANGE_L","","",null,null],[17,"DCCP_SOCKOPT_CHANGE_R","","",null,null],[17,"DCCP_SOCKOPT_GET_CUR_MPS","","",null,null],[17,"DCCP_SOCKOPT_SERVER_TIMEWAIT","","",null,null],[17,"DCCP_SOCKOPT_SEND_CSCOV","","",null,null],[17,"DCCP_SOCKOPT_RECV_CSCOV","","",null,null],[17,"DCCP_SOCKOPT_AVAILABLE_CCIDS","","",null,null],[17,"DCCP_SOCKOPT_CCID","","",null,null],[17,"DCCP_SOCKOPT_TX_CCID","","",null,null],[17,"DCCP_SOCKOPT_RX_CCID","","",null,null],[17,"DCCP_SOCKOPT_QPOLICY_ID","","",null,null],[17,"DCCP_SOCKOPT_QPOLICY_TXQLEN","","",null,null],[17,"DCCP_SOCKOPT_CCID_RX_INFO","","",null,null],[17,"DCCP_SOCKOPT_CCID_TX_INFO","","",null,null],[17,"DCCP_SERVICE_LIST_MAX_LEN","","maximum number of services provided on the same listening port",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGEV_THREAD_ID","","",null,null],[17,"BUFSIZ","","",null,null],[17,"TMP_MAX","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"POSIX_FADV_DONTNEED","","",null,null],[17,"POSIX_FADV_NOREUSE","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_EQUIV_CLASS_MAX","","",null,null],[17,"_SC_CHARCLASS_NAME_MAX","","",null,null],[17,"_SC_PII","","",null,null],[17,"_SC_PII_XTI","","",null,null],[17,"_SC_PII_SOCKET","","",null,null],[17,"_SC_PII_INTERNET","","",null,null],[17,"_SC_PII_OSI","","",null,null],[17,"_SC_POLL","","",null,null],[17,"_SC_SELECT","","",null,null],[17,"_SC_PII_INTERNET_STREAM","","",null,null],[17,"_SC_PII_INTERNET_DGRAM","","",null,null],[17,"_SC_PII_OSI_COTS","","",null,null],[17,"_SC_PII_OSI_CLTS","","",null,null],[17,"_SC_PII_OSI_M","","",null,null],[17,"_SC_T_IOV_MAX","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"_SC_CHAR_BIT","","",null,null],[17,"_SC_CHAR_MAX","","",null,null],[17,"_SC_CHAR_MIN","","",null,null],[17,"_SC_INT_MAX","","",null,null],[17,"_SC_INT_MIN","","",null,null],[17,"_SC_LONG_BIT","","",null,null],[17,"_SC_WORD_BIT","","",null,null],[17,"_SC_MB_LEN_MAX","","",null,null],[17,"_SC_SSIZE_MAX","","",null,null],[17,"_SC_SCHAR_MAX","","",null,null],[17,"_SC_SCHAR_MIN","","",null,null],[17,"_SC_SHRT_MAX","","",null,null],[17,"_SC_SHRT_MIN","","",null,null],[17,"_SC_UCHAR_MAX","","",null,null],[17,"_SC_UINT_MAX","","",null,null],[17,"_SC_ULONG_MAX","","",null,null],[17,"_SC_USHRT_MAX","","",null,null],[17,"_SC_NL_ARGMAX","","",null,null],[17,"_SC_NL_LANGMAX","","",null,null],[17,"_SC_NL_MSGMAX","","",null,null],[17,"_SC_NL_NMAX","","",null,null],[17,"_SC_NL_SETMAX","","",null,null],[17,"_SC_NL_TEXTMAX","","",null,null],[17,"_SC_BASE","","",null,null],[17,"_SC_C_LANG_SUPPORT","","",null,null],[17,"_SC_C_LANG_SUPPORT_R","","",null,null],[17,"_SC_DEVICE_IO","","",null,null],[17,"_SC_DEVICE_SPECIFIC","","",null,null],[17,"_SC_DEVICE_SPECIFIC_R","","",null,null],[17,"_SC_FD_MGMT","","",null,null],[17,"_SC_FIFO","","",null,null],[17,"_SC_PIPE","","",null,null],[17,"_SC_FILE_ATTRIBUTES","","",null,null],[17,"_SC_FILE_LOCKING","","",null,null],[17,"_SC_FILE_SYSTEM","","",null,null],[17,"_SC_MULTI_PROCESS","","",null,null],[17,"_SC_SINGLE_PROCESS","","",null,null],[17,"_SC_NETWORKING","","",null,null],[17,"_SC_REGEX_VERSION","","",null,null],[17,"_SC_SIGNALS","","",null,null],[17,"_SC_SYSTEM_DATABASE","","",null,null],[17,"_SC_SYSTEM_DATABASE_R","","",null,null],[17,"_SC_USER_GROUPS","","",null,null],[17,"_SC_USER_GROUPS_R","","",null,null],[17,"_SC_LEVEL1_ICACHE_SIZE","","",null,null],[17,"_SC_LEVEL1_ICACHE_ASSOC","","",null,null],[17,"_SC_LEVEL1_ICACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL1_DCACHE_SIZE","","",null,null],[17,"_SC_LEVEL1_DCACHE_ASSOC","","",null,null],[17,"_SC_LEVEL1_DCACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL2_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL2_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL2_CACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL3_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL3_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL3_CACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL4_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL4_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL4_CACHE_LINESIZE","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"ST_RELATIME","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"ADFS_SUPER_MAGIC","","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[17,"VEOF","","",null,null],[17,"CPU_SETSIZE","","",null,null],[17,"PTRACE_TRACEME","","",null,null],[17,"PTRACE_PEEKTEXT","","",null,null],[17,"PTRACE_PEEKDATA","","",null,null],[17,"PTRACE_PEEKUSER","","",null,null],[17,"PTRACE_POKETEXT","","",null,null],[17,"PTRACE_POKEDATA","","",null,null],[17,"PTRACE_POKEUSER","","",null,null],[17,"PTRACE_CONT","","",null,null],[17,"PTRACE_KILL","","",null,null],[17,"PTRACE_SINGLESTEP","","",null,null],[17,"PTRACE_ATTACH","","",null,null],[17,"PTRACE_SYSCALL","","",null,null],[17,"PTRACE_SETOPTIONS","","",null,null],[17,"PTRACE_GETEVENTMSG","","",null,null],[17,"PTRACE_GETSIGINFO","","",null,null],[17,"PTRACE_SETSIGINFO","","",null,null],[17,"PTRACE_GETREGSET","","",null,null],[17,"PTRACE_SETREGSET","","",null,null],[17,"PTRACE_SEIZE","","",null,null],[17,"PTRACE_INTERRUPT","","",null,null],[17,"PTRACE_LISTEN","","",null,null],[17,"PTRACE_PEEKSIGINFO","","",null,null],[17,"EPOLLWAKEUP","","",null,null],[17,"MAP_HUGETLB","","",null,null],[17,"SEEK_DATA","","",null,null],[17,"SEEK_HOLE","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"TIOCLINUX","","",null,null],[17,"TIOCGSERIAL","","",null,null],[17,"RTLD_DEEPBIND","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"LINUX_REBOOT_MAGIC1","","",null,null],[17,"LINUX_REBOOT_MAGIC2","","",null,null],[17,"LINUX_REBOOT_MAGIC2A","","",null,null],[17,"LINUX_REBOOT_MAGIC2B","","",null,null],[17,"LINUX_REBOOT_MAGIC2C","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART","","",null,null],[17,"LINUX_REBOOT_CMD_HALT","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_ON","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_POWER_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART2","","",null,null],[17,"LINUX_REBOOT_CMD_SW_SUSPEND","","",null,null],[17,"LINUX_REBOOT_CMD_KEXEC","","",null,null],[17,"NETLINK_ROUTE","","",null,null],[17,"NETLINK_UNUSED","","",null,null],[17,"NETLINK_USERSOCK","","",null,null],[17,"NETLINK_FIREWALL","","",null,null],[17,"NETLINK_SOCK_DIAG","","",null,null],[17,"NETLINK_NFLOG","","",null,null],[17,"NETLINK_XFRM","","",null,null],[17,"NETLINK_SELINUX","","",null,null],[17,"NETLINK_ISCSI","","",null,null],[17,"NETLINK_AUDIT","","",null,null],[17,"NETLINK_FIB_LOOKUP","","",null,null],[17,"NETLINK_CONNECTOR","","",null,null],[17,"NETLINK_NETFILTER","","",null,null],[17,"NETLINK_IP6_FW","","",null,null],[17,"NETLINK_DNRTMSG","","",null,null],[17,"NETLINK_KOBJECT_UEVENT","","",null,null],[17,"NETLINK_GENERIC","","",null,null],[17,"NETLINK_SCSITRANSPORT","","",null,null],[17,"NETLINK_ECRYPTFS","","",null,null],[17,"NETLINK_RDMA","","",null,null],[17,"NETLINK_CRYPTO","","",null,null],[17,"NETLINK_INET_DIAG","","",null,null],[17,"MAX_LINKS","","",null,null],[17,"NLM_F_REQUEST","","",null,null],[17,"NLM_F_MULTI","","",null,null],[17,"NLM_F_ACK","","",null,null],[17,"NLM_F_ECHO","","",null,null],[17,"NLM_F_DUMP_INTR","","",null,null],[17,"NLM_F_DUMP_FILTERED","","",null,null],[17,"NLM_F_ROOT","","",null,null],[17,"NLM_F_MATCH","","",null,null],[17,"NLM_F_ATOMIC","","",null,null],[17,"NLM_F_DUMP","","",null,null],[17,"NLM_F_REPLACE","","",null,null],[17,"NLM_F_EXCL","","",null,null],[17,"NLM_F_CREATE","","",null,null],[17,"NLM_F_APPEND","","",null,null],[17,"NETLINK_ADD_MEMBERSHIP","","",null,null],[17,"NETLINK_DROP_MEMBERSHIP","","",null,null],[17,"NETLINK_PKTINFO","","",null,null],[17,"NETLINK_BROADCAST_ERROR","","",null,null],[17,"NETLINK_NO_ENOBUFS","","",null,null],[17,"NETLINK_RX_RING","","",null,null],[17,"NETLINK_TX_RING","","",null,null],[17,"NETLINK_LISTEN_ALL_NSID","","",null,null],[17,"NETLINK_LIST_MEMBERSHIPS","","",null,null],[17,"NETLINK_CAP_ACK","","",null,null],[17,"NLA_F_NESTED","","",null,null],[17,"NLA_F_NET_BYTEORDER","","",null,null],[17,"NLA_TYPE_MASK","","",null,null],[17,"NLA_ALIGNTO","","",null,null],[17,"GENL_UNS_ADMIN_PERM","","",null,null],[17,"GENL_ID_VFS_DQUOT","","",null,null],[17,"GENL_ID_PMCRAID","","",null,null],[17,"TIOCM_LE","","",null,null],[17,"TIOCM_DTR","","",null,null],[17,"TIOCM_RTS","","",null,null],[17,"TIOCM_ST","","",null,null],[17,"TIOCM_SR","","",null,null],[17,"TIOCM_CTS","","",null,null],[17,"TIOCM_CAR","","",null,null],[17,"TIOCM_RNG","","",null,null],[17,"TIOCM_DSR","","",null,null],[17,"TIOCM_CD","","",null,null],[17,"TIOCM_RI","","",null,null],[17,"NF_NETDEV_INGRESS","","",null,null],[17,"NF_NETDEV_NUMHOOKS","","",null,null],[17,"NFPROTO_INET","","",null,null],[17,"NFPROTO_NETDEV","","",null,null],[17,"NFT_TABLE_MAXNAMELEN","","",null,null],[17,"NFT_CHAIN_MAXNAMELEN","","",null,null],[17,"NFT_SET_MAXNAMELEN","","",null,null],[17,"NFT_OBJ_MAXNAMELEN","","",null,null],[17,"NFT_USERDATA_MAXLEN","","",null,null],[17,"NFT_REG_VERDICT","","",null,null],[17,"NFT_REG_1","","",null,null],[17,"NFT_REG_2","","",null,null],[17,"NFT_REG_3","","",null,null],[17,"NFT_REG_4","","",null,null],[17,"__NFT_REG_MAX","","",null,null],[17,"NFT_REG32_00","","",null,null],[17,"NFT_REG32_01","","",null,null],[17,"NFT_REG32_02","","",null,null],[17,"NFT_REG32_03","","",null,null],[17,"NFT_REG32_04","","",null,null],[17,"NFT_REG32_05","","",null,null],[17,"NFT_REG32_06","","",null,null],[17,"NFT_REG32_07","","",null,null],[17,"NFT_REG32_08","","",null,null],[17,"NFT_REG32_09","","",null,null],[17,"NFT_REG32_10","","",null,null],[17,"NFT_REG32_11","","",null,null],[17,"NFT_REG32_12","","",null,null],[17,"NFT_REG32_13","","",null,null],[17,"NFT_REG32_14","","",null,null],[17,"NFT_REG32_15","","",null,null],[17,"NFT_REG_SIZE","","",null,null],[17,"NFT_REG32_SIZE","","",null,null],[17,"NFT_CONTINUE","","",null,null],[17,"NFT_BREAK","","",null,null],[17,"NFT_JUMP","","",null,null],[17,"NFT_GOTO","","",null,null],[17,"NFT_RETURN","","",null,null],[17,"NFT_MSG_NEWTABLE","","",null,null],[17,"NFT_MSG_GETTABLE","","",null,null],[17,"NFT_MSG_DELTABLE","","",null,null],[17,"NFT_MSG_NEWCHAIN","","",null,null],[17,"NFT_MSG_GETCHAIN","","",null,null],[17,"NFT_MSG_DELCHAIN","","",null,null],[17,"NFT_MSG_NEWRULE","","",null,null],[17,"NFT_MSG_GETRULE","","",null,null],[17,"NFT_MSG_DELRULE","","",null,null],[17,"NFT_MSG_NEWSET","","",null,null],[17,"NFT_MSG_GETSET","","",null,null],[17,"NFT_MSG_DELSET","","",null,null],[17,"NFT_MSG_NEWSETELEM","","",null,null],[17,"NFT_MSG_GETSETELEM","","",null,null],[17,"NFT_MSG_DELSETELEM","","",null,null],[17,"NFT_MSG_NEWGEN","","",null,null],[17,"NFT_MSG_GETGEN","","",null,null],[17,"NFT_MSG_TRACE","","",null,null],[17,"NFT_MSG_NEWOBJ","","",null,null],[17,"NFT_MSG_GETOBJ","","",null,null],[17,"NFT_MSG_DELOBJ","","",null,null],[17,"NFT_MSG_GETOBJ_RESET","","",null,null],[17,"NFT_MSG_MAX","","",null,null],[17,"NFT_SET_ANONYMOUS","","",null,null],[17,"NFT_SET_CONSTANT","","",null,null],[17,"NFT_SET_INTERVAL","","",null,null],[17,"NFT_SET_MAP","","",null,null],[17,"NFT_SET_TIMEOUT","","",null,null],[17,"NFT_SET_EVAL","","",null,null],[17,"NFT_SET_POL_PERFORMANCE","","",null,null],[17,"NFT_SET_POL_MEMORY","","",null,null],[17,"NFT_SET_ELEM_INTERVAL_END","","",null,null],[17,"NFT_DATA_VALUE","","",null,null],[17,"NFT_DATA_VERDICT","","",null,null],[17,"NFT_DATA_RESERVED_MASK","","",null,null],[17,"NFT_DATA_VALUE_MAXLEN","","",null,null],[17,"NFT_BYTEORDER_NTOH","","",null,null],[17,"NFT_BYTEORDER_HTON","","",null,null],[17,"NFT_CMP_EQ","","",null,null],[17,"NFT_CMP_NEQ","","",null,null],[17,"NFT_CMP_LT","","",null,null],[17,"NFT_CMP_LTE","","",null,null],[17,"NFT_CMP_GT","","",null,null],[17,"NFT_CMP_GTE","","",null,null],[17,"NFT_RANGE_EQ","","",null,null],[17,"NFT_RANGE_NEQ","","",null,null],[17,"NFT_LOOKUP_F_INV","","",null,null],[17,"NFT_DYNSET_OP_ADD","","",null,null],[17,"NFT_DYNSET_OP_UPDATE","","",null,null],[17,"NFT_DYNSET_F_INV","","",null,null],[17,"NFT_PAYLOAD_LL_HEADER","","",null,null],[17,"NFT_PAYLOAD_NETWORK_HEADER","","",null,null],[17,"NFT_PAYLOAD_TRANSPORT_HEADER","","",null,null],[17,"NFT_PAYLOAD_CSUM_NONE","","",null,null],[17,"NFT_PAYLOAD_CSUM_INET","","",null,null],[17,"NFT_META_LEN","","",null,null],[17,"NFT_META_PROTOCOL","","",null,null],[17,"NFT_META_PRIORITY","","",null,null],[17,"NFT_META_MARK","","",null,null],[17,"NFT_META_IIF","","",null,null],[17,"NFT_META_OIF","","",null,null],[17,"NFT_META_IIFNAME","","",null,null],[17,"NFT_META_OIFNAME","","",null,null],[17,"NFT_META_IIFTYPE","","",null,null],[17,"NFT_META_OIFTYPE","","",null,null],[17,"NFT_META_SKUID","","",null,null],[17,"NFT_META_SKGID","","",null,null],[17,"NFT_META_NFTRACE","","",null,null],[17,"NFT_META_RTCLASSID","","",null,null],[17,"NFT_META_SECMARK","","",null,null],[17,"NFT_META_NFPROTO","","",null,null],[17,"NFT_META_L4PROTO","","",null,null],[17,"NFT_META_BRI_IIFNAME","","",null,null],[17,"NFT_META_BRI_OIFNAME","","",null,null],[17,"NFT_META_PKTTYPE","","",null,null],[17,"NFT_META_CPU","","",null,null],[17,"NFT_META_IIFGROUP","","",null,null],[17,"NFT_META_OIFGROUP","","",null,null],[17,"NFT_META_CGROUP","","",null,null],[17,"NFT_META_PRANDOM","","",null,null],[17,"NFT_CT_STATE","","",null,null],[17,"NFT_CT_DIRECTION","","",null,null],[17,"NFT_CT_STATUS","","",null,null],[17,"NFT_CT_MARK","","",null,null],[17,"NFT_CT_SECMARK","","",null,null],[17,"NFT_CT_EXPIRATION","","",null,null],[17,"NFT_CT_HELPER","","",null,null],[17,"NFT_CT_L3PROTOCOL","","",null,null],[17,"NFT_CT_SRC","","",null,null],[17,"NFT_CT_DST","","",null,null],[17,"NFT_CT_PROTOCOL","","",null,null],[17,"NFT_CT_PROTO_SRC","","",null,null],[17,"NFT_CT_PROTO_DST","","",null,null],[17,"NFT_CT_LABELS","","",null,null],[17,"NFT_CT_PKTS","","",null,null],[17,"NFT_CT_BYTES","","",null,null],[17,"NFT_LIMIT_PKTS","","",null,null],[17,"NFT_LIMIT_PKT_BYTES","","",null,null],[17,"NFT_LIMIT_F_INV","","",null,null],[17,"NFT_QUEUE_FLAG_BYPASS","","",null,null],[17,"NFT_QUEUE_FLAG_CPU_FANOUT","","",null,null],[17,"NFT_QUEUE_FLAG_MASK","","",null,null],[17,"NFT_QUOTA_F_INV","","",null,null],[17,"NFT_REJECT_ICMP_UNREACH","","",null,null],[17,"NFT_REJECT_TCP_RST","","",null,null],[17,"NFT_REJECT_ICMPX_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_NO_ROUTE","","",null,null],[17,"NFT_REJECT_ICMPX_PORT_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_HOST_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_ADMIN_PROHIBITED","","",null,null],[17,"NFT_NAT_SNAT","","",null,null],[17,"NFT_NAT_DNAT","","",null,null],[17,"NFT_TRACETYPE_UNSPEC","","",null,null],[17,"NFT_TRACETYPE_POLICY","","",null,null],[17,"NFT_TRACETYPE_RETURN","","",null,null],[17,"NFT_TRACETYPE_RULE","","",null,null],[17,"NFT_NG_INCREMENTAL","","",null,null],[17,"NFT_NG_RANDOM","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"PTHREAD_MUTEX_ADAPTIVE_NP","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCKATTR_T","","",null,null],[17,"O_LARGEFILE","","",null,null],[17,"TIOCGSOFTCAR","","",null,null],[17,"TIOCSSOFTCAR","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_FSYNC","","",null,null],[17,"O_NOATIME","","",null,null],[17,"O_PATH","","",null,null],[17,"O_TMPFILE","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EBADMSG","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EHWPOISON","","",null,null],[17,"ERFKILL","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_SNDBUFFORCE","","",null,null],[17,"SO_RCVBUFFORCE","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_NO_CHECK","","",null,null],[17,"SO_PRIORITY","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_BSDCOMPAT","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_PASSCRED","","",null,null],[17,"SO_PEERCRED","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_SECURITY_AUTHENTICATION","","",null,null],[17,"SO_SECURITY_ENCRYPTION_TRANSPORT","","",null,null],[17,"SO_SECURITY_ENCRYPTION_NETWORK","","",null,null],[17,"SO_BINDTODEVICE","","",null,null],[17,"SO_ATTACH_FILTER","","",null,null],[17,"SO_DETACH_FILTER","","",null,null],[17,"SO_GET_FILTER","","",null,null],[17,"SO_PEERNAME","","",null,null],[17,"SO_TIMESTAMP","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SO_PEERSEC","","",null,null],[17,"SO_PASSSEC","","",null,null],[17,"SO_TIMESTAMPNS","","",null,null],[17,"SCM_TIMESTAMPNS","","",null,null],[17,"SO_MARK","","",null,null],[17,"SO_TIMESTAMPING","","",null,null],[17,"SCM_TIMESTAMPING","","",null,null],[17,"SO_PROTOCOL","","",null,null],[17,"SO_DOMAIN","","",null,null],[17,"SO_RXQ_OVFL","","",null,null],[17,"SO_WIFI_STATUS","","",null,null],[17,"SCM_WIFI_STATUS","","",null,null],[17,"SO_PEEK_OFF","","",null,null],[17,"SO_NOFCS","","",null,null],[17,"SO_LOCK_FILTER","","",null,null],[17,"SO_SELECT_ERR_QUEUE","","",null,null],[17,"SO_BUSY_POLL","","",null,null],[17,"SO_MAX_PACING_RATE","","",null,null],[17,"SO_BPF_EXTENSIONS","","",null,null],[17,"SO_INCOMING_CPU","","",null,null],[17,"SO_ATTACH_BPF","","",null,null],[17,"SO_DETACH_BPF","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGSTKFLT","","",null,null],[17,"SIGUNUSED","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGPWR","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"POLLWRNORM","","",null,null],[17,"POLLWRBAND","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"PTRACE_DETACH","","",null,null],[17,"EFD_NONBLOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"F_RDLCK","","",null,null],[17,"F_WRLCK","","",null,null],[17,"F_UNLCK","","",null,null],[17,"SFD_NONBLOCK","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMSET","","",null,null],[17,"TIOCCONS","","",null,null],[17,"SFD_CLOEXEC","","",null,null],[17,"NCCS","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EDOTDOT","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"EPOLL_CLOEXEC","","",null,null],[17,"EFD_CLOEXEC","","",null,null],[17,"__SIZEOF_PTHREAD_CONDATTR_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",null,null],[17,"O_DIRECT","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"PTRACE_GETFPREGS","","",null,null],[17,"PTRACE_SETFPREGS","","",null,null],[17,"PTRACE_GETFPXREGS","","",null,null],[17,"PTRACE_SETFPXREGS","","",null,null],[17,"PTRACE_GETREGS","","",null,null],[17,"PTRACE_SETREGS","","",null,null],[17,"PTRACE_PEEKSIGINFO_SHARED","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"MINSIGSTKSZ","","",null,null],[17,"CBAUD","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"TAB3","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF1","","",null,null],[17,"BS1","","",null,null],[17,"VT1","","",null,null],[17,"VWERASE","","",null,null],[17,"VREPRINT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VDISCARD","","",null,null],[17,"VTIME","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"CIBAUD","","",null,null],[17,"CBAUDEX","","",null,null],[17,"VSWTC","","",null,null],[17,"OLCUC","","",null,null],[17,"NLDLY","","",null,null],[17,"CRDLY","","",null,null],[17,"TABDLY","","",null,null],[17,"BSDLY","","",null,null],[17,"FFDLY","","",null,null],[17,"VTDLY","","",null,null],[17,"XTABS","","",null,null],[17,"B0","","",null,null],[17,"B50","","",null,null],[17,"B75","","",null,null],[17,"B110","","",null,null],[17,"B134","","",null,null],[17,"B150","","",null,null],[17,"B200","","",null,null],[17,"B300","","",null,null],[17,"B600","","",null,null],[17,"B1200","","",null,null],[17,"B1800","","",null,null],[17,"B2400","","",null,null],[17,"B4800","","",null,null],[17,"B9600","","",null,null],[17,"B19200","","",null,null],[17,"B38400","","",null,null],[17,"EXTA","","",null,null],[17,"EXTB","","",null,null],[17,"BOTHER","","",null,null],[17,"B57600","","",null,null],[17,"B115200","","",null,null],[17,"B230400","","",null,null],[17,"B460800","","",null,null],[17,"B500000","","",null,null],[17,"B576000","","",null,null],[17,"B921600","","",null,null],[17,"B1000000","","",null,null],[17,"B1152000","","",null,null],[17,"B1500000","","",null,null],[17,"B2000000","","",null,null],[17,"B2500000","","",null,null],[17,"B3000000","","",null,null],[17,"B3500000","","",null,null],[17,"B4000000","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VMIN","","",null,null],[17,"IEXTEN","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"EXTPROC","","",null,null],[17,"TCGETS","","",null,null],[17,"TCSETS","","",null,null],[17,"TCSETSW","","",null,null],[17,"TCSETSF","","",null,null],[17,"TCGETA","","",null,null],[17,"TCSETA","","",null,null],[17,"TCSETAW","","",null,null],[17,"TCSETAF","","",null,null],[17,"TCSBRK","","",null,null],[17,"TCXONC","","",null,null],[17,"TCFLSH","","",null,null],[17,"TIOCINQ","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"FIONREAD","","",null,null],[17,"R15","","",null,null],[17,"R14","","",null,null],[17,"R13","","",null,null],[17,"R12","","",null,null],[17,"RBP","","",null,null],[17,"RBX","","",null,null],[17,"R11","","",null,null],[17,"R10","","",null,null],[17,"R9","","",null,null],[17,"R8","","",null,null],[17,"RAX","","",null,null],[17,"RCX","","",null,null],[17,"RDX","","",null,null],[17,"RSI","","",null,null],[17,"RDI","","",null,null],[17,"ORIG_RAX","","",null,null],[17,"RIP","","",null,null],[17,"CS","","",null,null],[17,"EFLAGS","","",null,null],[17,"RSP","","",null,null],[17,"SS","","",null,null],[17,"FS_BASE","","",null,null],[17,"GS_BASE","","",null,null],[17,"DS","","",null,null],[17,"ES","","",null,null],[17,"FS","","",null,null],[17,"GS","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",null,null],[17,"PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP","","",null,null],[17,"PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP","","",null,null],[17,"PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP","","",null,null],[17,"SYS_read","","",null,null],[17,"SYS_write","","",null,null],[17,"SYS_open","","",null,null],[17,"SYS_close","","",null,null],[17,"SYS_stat","","",null,null],[17,"SYS_fstat","","",null,null],[17,"SYS_lstat","","",null,null],[17,"SYS_poll","","",null,null],[17,"SYS_lseek","","",null,null],[17,"SYS_mmap","","",null,null],[17,"SYS_mprotect","","",null,null],[17,"SYS_munmap","","",null,null],[17,"SYS_brk","","",null,null],[17,"SYS_rt_sigaction","","",null,null],[17,"SYS_rt_sigprocmask","","",null,null],[17,"SYS_rt_sigreturn","","",null,null],[17,"SYS_ioctl","","",null,null],[17,"SYS_pread64","","",null,null],[17,"SYS_pwrite64","","",null,null],[17,"SYS_readv","","",null,null],[17,"SYS_writev","","",null,null],[17,"SYS_access","","",null,null],[17,"SYS_pipe","","",null,null],[17,"SYS_select","","",null,null],[17,"SYS_sched_yield","","",null,null],[17,"SYS_mremap","","",null,null],[17,"SYS_msync","","",null,null],[17,"SYS_mincore","","",null,null],[17,"SYS_madvise","","",null,null],[17,"SYS_shmget","","",null,null],[17,"SYS_shmat","","",null,null],[17,"SYS_shmctl","","",null,null],[17,"SYS_dup","","",null,null],[17,"SYS_dup2","","",null,null],[17,"SYS_pause","","",null,null],[17,"SYS_nanosleep","","",null,null],[17,"SYS_getitimer","","",null,null],[17,"SYS_alarm","","",null,null],[17,"SYS_setitimer","","",null,null],[17,"SYS_getpid","","",null,null],[17,"SYS_sendfile","","",null,null],[17,"SYS_socket","","",null,null],[17,"SYS_connect","","",null,null],[17,"SYS_accept","","",null,null],[17,"SYS_sendto","","",null,null],[17,"SYS_recvfrom","","",null,null],[17,"SYS_sendmsg","","",null,null],[17,"SYS_recvmsg","","",null,null],[17,"SYS_shutdown","","",null,null],[17,"SYS_bind","","",null,null],[17,"SYS_listen","","",null,null],[17,"SYS_getsockname","","",null,null],[17,"SYS_getpeername","","",null,null],[17,"SYS_socketpair","","",null,null],[17,"SYS_setsockopt","","",null,null],[17,"SYS_getsockopt","","",null,null],[17,"SYS_clone","","",null,null],[17,"SYS_fork","","",null,null],[17,"SYS_vfork","","",null,null],[17,"SYS_execve","","",null,null],[17,"SYS_exit","","",null,null],[17,"SYS_wait4","","",null,null],[17,"SYS_kill","","",null,null],[17,"SYS_uname","","",null,null],[17,"SYS_semget","","",null,null],[17,"SYS_semop","","",null,null],[17,"SYS_semctl","","",null,null],[17,"SYS_shmdt","","",null,null],[17,"SYS_msgget","","",null,null],[17,"SYS_msgsnd","","",null,null],[17,"SYS_msgrcv","","",null,null],[17,"SYS_msgctl","","",null,null],[17,"SYS_fcntl","","",null,null],[17,"SYS_flock","","",null,null],[17,"SYS_fsync","","",null,null],[17,"SYS_fdatasync","","",null,null],[17,"SYS_truncate","","",null,null],[17,"SYS_ftruncate","","",null,null],[17,"SYS_getdents","","",null,null],[17,"SYS_getcwd","","",null,null],[17,"SYS_chdir","","",null,null],[17,"SYS_fchdir","","",null,null],[17,"SYS_rename","","",null,null],[17,"SYS_mkdir","","",null,null],[17,"SYS_rmdir","","",null,null],[17,"SYS_creat","","",null,null],[17,"SYS_link","","",null,null],[17,"SYS_unlink","","",null,null],[17,"SYS_symlink","","",null,null],[17,"SYS_readlink","","",null,null],[17,"SYS_chmod","","",null,null],[17,"SYS_fchmod","","",null,null],[17,"SYS_chown","","",null,null],[17,"SYS_fchown","","",null,null],[17,"SYS_lchown","","",null,null],[17,"SYS_umask","","",null,null],[17,"SYS_gettimeofday","","",null,null],[17,"SYS_getrlimit","","",null,null],[17,"SYS_getrusage","","",null,null],[17,"SYS_sysinfo","","",null,null],[17,"SYS_times","","",null,null],[17,"SYS_ptrace","","",null,null],[17,"SYS_getuid","","",null,null],[17,"SYS_syslog","","",null,null],[17,"SYS_getgid","","",null,null],[17,"SYS_setuid","","",null,null],[17,"SYS_setgid","","",null,null],[17,"SYS_geteuid","","",null,null],[17,"SYS_getegid","","",null,null],[17,"SYS_setpgid","","",null,null],[17,"SYS_getppid","","",null,null],[17,"SYS_getpgrp","","",null,null],[17,"SYS_setsid","","",null,null],[17,"SYS_setreuid","","",null,null],[17,"SYS_setregid","","",null,null],[17,"SYS_getgroups","","",null,null],[17,"SYS_setgroups","","",null,null],[17,"SYS_setresuid","","",null,null],[17,"SYS_getresuid","","",null,null],[17,"SYS_setresgid","","",null,null],[17,"SYS_getresgid","","",null,null],[17,"SYS_getpgid","","",null,null],[17,"SYS_setfsuid","","",null,null],[17,"SYS_setfsgid","","",null,null],[17,"SYS_getsid","","",null,null],[17,"SYS_capget","","",null,null],[17,"SYS_capset","","",null,null],[17,"SYS_rt_sigpending","","",null,null],[17,"SYS_rt_sigtimedwait","","",null,null],[17,"SYS_rt_sigqueueinfo","","",null,null],[17,"SYS_rt_sigsuspend","","",null,null],[17,"SYS_sigaltstack","","",null,null],[17,"SYS_utime","","",null,null],[17,"SYS_mknod","","",null,null],[17,"SYS_uselib","","",null,null],[17,"SYS_personality","","",null,null],[17,"SYS_ustat","","",null,null],[17,"SYS_statfs","","",null,null],[17,"SYS_fstatfs","","",null,null],[17,"SYS_sysfs","","",null,null],[17,"SYS_getpriority","","",null,null],[17,"SYS_setpriority","","",null,null],[17,"SYS_sched_setparam","","",null,null],[17,"SYS_sched_getparam","","",null,null],[17,"SYS_sched_setscheduler","","",null,null],[17,"SYS_sched_getscheduler","","",null,null],[17,"SYS_sched_get_priority_max","","",null,null],[17,"SYS_sched_get_priority_min","","",null,null],[17,"SYS_sched_rr_get_interval","","",null,null],[17,"SYS_mlock","","",null,null],[17,"SYS_munlock","","",null,null],[17,"SYS_mlockall","","",null,null],[17,"SYS_munlockall","","",null,null],[17,"SYS_vhangup","","",null,null],[17,"SYS_modify_ldt","","",null,null],[17,"SYS_pivot_root","","",null,null],[17,"SYS__sysctl","","",null,null],[17,"SYS_prctl","","",null,null],[17,"SYS_arch_prctl","","",null,null],[17,"SYS_adjtimex","","",null,null],[17,"SYS_setrlimit","","",null,null],[17,"SYS_chroot","","",null,null],[17,"SYS_sync","","",null,null],[17,"SYS_acct","","",null,null],[17,"SYS_settimeofday","","",null,null],[17,"SYS_mount","","",null,null],[17,"SYS_umount2","","",null,null],[17,"SYS_swapon","","",null,null],[17,"SYS_swapoff","","",null,null],[17,"SYS_reboot","","",null,null],[17,"SYS_sethostname","","",null,null],[17,"SYS_setdomainname","","",null,null],[17,"SYS_iopl","","",null,null],[17,"SYS_ioperm","","",null,null],[17,"SYS_create_module","","",null,null],[17,"SYS_init_module","","",null,null],[17,"SYS_delete_module","","",null,null],[17,"SYS_get_kernel_syms","","",null,null],[17,"SYS_query_module","","",null,null],[17,"SYS_quotactl","","",null,null],[17,"SYS_nfsservctl","","",null,null],[17,"SYS_getpmsg","","",null,null],[17,"SYS_putpmsg","","",null,null],[17,"SYS_afs_syscall","","",null,null],[17,"SYS_tuxcall","","",null,null],[17,"SYS_security","","",null,null],[17,"SYS_gettid","","",null,null],[17,"SYS_readahead","","",null,null],[17,"SYS_setxattr","","",null,null],[17,"SYS_lsetxattr","","",null,null],[17,"SYS_fsetxattr","","",null,null],[17,"SYS_getxattr","","",null,null],[17,"SYS_lgetxattr","","",null,null],[17,"SYS_fgetxattr","","",null,null],[17,"SYS_listxattr","","",null,null],[17,"SYS_llistxattr","","",null,null],[17,"SYS_flistxattr","","",null,null],[17,"SYS_removexattr","","",null,null],[17,"SYS_lremovexattr","","",null,null],[17,"SYS_fremovexattr","","",null,null],[17,"SYS_tkill","","",null,null],[17,"SYS_time","","",null,null],[17,"SYS_futex","","",null,null],[17,"SYS_sched_setaffinity","","",null,null],[17,"SYS_sched_getaffinity","","",null,null],[17,"SYS_set_thread_area","","",null,null],[17,"SYS_io_setup","","",null,null],[17,"SYS_io_destroy","","",null,null],[17,"SYS_io_getevents","","",null,null],[17,"SYS_io_submit","","",null,null],[17,"SYS_io_cancel","","",null,null],[17,"SYS_get_thread_area","","",null,null],[17,"SYS_lookup_dcookie","","",null,null],[17,"SYS_epoll_create","","",null,null],[17,"SYS_epoll_ctl_old","","",null,null],[17,"SYS_epoll_wait_old","","",null,null],[17,"SYS_remap_file_pages","","",null,null],[17,"SYS_getdents64","","",null,null],[17,"SYS_set_tid_address","","",null,null],[17,"SYS_restart_syscall","","",null,null],[17,"SYS_semtimedop","","",null,null],[17,"SYS_fadvise64","","",null,null],[17,"SYS_timer_create","","",null,null],[17,"SYS_timer_settime","","",null,null],[17,"SYS_timer_gettime","","",null,null],[17,"SYS_timer_getoverrun","","",null,null],[17,"SYS_timer_delete","","",null,null],[17,"SYS_clock_settime","","",null,null],[17,"SYS_clock_gettime","","",null,null],[17,"SYS_clock_getres","","",null,null],[17,"SYS_clock_nanosleep","","",null,null],[17,"SYS_exit_group","","",null,null],[17,"SYS_epoll_wait","","",null,null],[17,"SYS_epoll_ctl","","",null,null],[17,"SYS_tgkill","","",null,null],[17,"SYS_utimes","","",null,null],[17,"SYS_vserver","","",null,null],[17,"SYS_mbind","","",null,null],[17,"SYS_set_mempolicy","","",null,null],[17,"SYS_get_mempolicy","","",null,null],[17,"SYS_mq_open","","",null,null],[17,"SYS_mq_unlink","","",null,null],[17,"SYS_mq_timedsend","","",null,null],[17,"SYS_mq_timedreceive","","",null,null],[17,"SYS_mq_notify","","",null,null],[17,"SYS_mq_getsetattr","","",null,null],[17,"SYS_kexec_load","","",null,null],[17,"SYS_waitid","","",null,null],[17,"SYS_add_key","","",null,null],[17,"SYS_request_key","","",null,null],[17,"SYS_keyctl","","",null,null],[17,"SYS_ioprio_set","","",null,null],[17,"SYS_ioprio_get","","",null,null],[17,"SYS_inotify_init","","",null,null],[17,"SYS_inotify_add_watch","","",null,null],[17,"SYS_inotify_rm_watch","","",null,null],[17,"SYS_migrate_pages","","",null,null],[17,"SYS_openat","","",null,null],[17,"SYS_mkdirat","","",null,null],[17,"SYS_mknodat","","",null,null],[17,"SYS_fchownat","","",null,null],[17,"SYS_futimesat","","",null,null],[17,"SYS_newfstatat","","",null,null],[17,"SYS_unlinkat","","",null,null],[17,"SYS_renameat","","",null,null],[17,"SYS_linkat","","",null,null],[17,"SYS_symlinkat","","",null,null],[17,"SYS_readlinkat","","",null,null],[17,"SYS_fchmodat","","",null,null],[17,"SYS_faccessat","","",null,null],[17,"SYS_pselect6","","",null,null],[17,"SYS_ppoll","","",null,null],[17,"SYS_unshare","","",null,null],[17,"SYS_set_robust_list","","",null,null],[17,"SYS_get_robust_list","","",null,null],[17,"SYS_splice","","",null,null],[17,"SYS_tee","","",null,null],[17,"SYS_sync_file_range","","",null,null],[17,"SYS_vmsplice","","",null,null],[17,"SYS_move_pages","","",null,null],[17,"SYS_utimensat","","",null,null],[17,"SYS_epoll_pwait","","",null,null],[17,"SYS_signalfd","","",null,null],[17,"SYS_timerfd_create","","",null,null],[17,"SYS_eventfd","","",null,null],[17,"SYS_fallocate","","",null,null],[17,"SYS_timerfd_settime","","",null,null],[17,"SYS_timerfd_gettime","","",null,null],[17,"SYS_accept4","","",null,null],[17,"SYS_signalfd4","","",null,null],[17,"SYS_eventfd2","","",null,null],[17,"SYS_epoll_create1","","",null,null],[17,"SYS_dup3","","",null,null],[17,"SYS_pipe2","","",null,null],[17,"SYS_inotify_init1","","",null,null],[17,"SYS_preadv","","",null,null],[17,"SYS_pwritev","","",null,null],[17,"SYS_rt_tgsigqueueinfo","","",null,null],[17,"SYS_perf_event_open","","",null,null],[17,"SYS_recvmmsg","","",null,null],[17,"SYS_fanotify_init","","",null,null],[17,"SYS_fanotify_mark","","",null,null],[17,"SYS_prlimit64","","",null,null],[17,"SYS_name_to_handle_at","","",null,null],[17,"SYS_open_by_handle_at","","",null,null],[17,"SYS_clock_adjtime","","",null,null],[17,"SYS_syncfs","","",null,null],[17,"SYS_sendmmsg","","",null,null],[17,"SYS_setns","","",null,null],[17,"SYS_getcpu","","",null,null],[17,"SYS_process_vm_readv","","",null,null],[17,"SYS_process_vm_writev","","",null,null],[17,"SYS_kcmp","","",null,null],[17,"SYS_finit_module","","",null,null],[17,"SYS_sched_setattr","","",null,null],[17,"SYS_sched_getattr","","",null,null],[17,"SYS_renameat2","","",null,null],[17,"SYS_seccomp","","",null,null],[17,"SYS_getrandom","","",null,null],[17,"SYS_memfd_create","","",null,null],[17,"SYS_kexec_file_load","","",null,null],[17,"SYS_bpf","","",null,null],[17,"SYS_execveat","","",null,null],[17,"SYS_userfaultfd","","",null,null],[17,"SYS_membarrier","","",null,null],[17,"SYS_mlock2","","",null,null],[17,"SYS_copy_file_range","","",null,null],[17,"SYS_preadv2","","",null,null],[17,"SYS_pwritev2","","",null,null],[17,"SYS_pkey_mprotect","","",null,null],[17,"SYS_pkey_alloc","","",null,null],[17,"SYS_pkey_free","","",null,null]],"paths":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_nl"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"lconv"],[3,"sigevent"],[3,"in_pktinfo"],[3,"ifaddrs"],[3,"arpreq"],[3,"arpreq_old"],[3,"arphdr"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"passwd"],[3,"spwd"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"itimerspec"],[3,"mq_attr"],[3,"packet_mreq"],[3,"if_nameindex"],[3,"msginfo"],[3,"mmsghdr"],[3,"sembuf"],[3,"input_event"],[3,"input_id"],[3,"input_absinfo"],[3,"input_keymap_entry"],[3,"input_mask"],[3,"ff_replay"],[3,"ff_trigger"],[3,"ff_envelope"],[3,"ff_constant_effect"],[3,"ff_ramp_effect"],[3,"ff_condition_effect"],[3,"ff_periodic_effect"],[3,"ff_rumble_effect"],[3,"ff_effect"],[3,"dl_phdr_info"],[3,"Elf32_Phdr"],[3,"Elf64_Phdr"],[3,"ucred"],[3,"mntent"],[3,"genlmsghdr"],[3,"in6_pktinfo"],[3,"arpd_request"],[3,"aiocb"],[3,"__exit_status"],[3,"__timeval"],[3,"utmpx"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"statfs"],[3,"msghdr"],[3,"cmsghdr"],[3,"termios"],[3,"flock"],[3,"mallinfo"],[3,"nlmsghdr"],[3,"nlmsgerr"],[3,"nl_pktinfo"],[3,"nl_mmap_req"],[3,"nl_mmap_hdr"],[3,"nlattr"],[3,"rtentry"],[3,"sysinfo"],[3,"msqid_ds"],[3,"stat"],[3,"stat64"],[3,"statfs64"],[3,"statvfs64"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"user_fpregs_struct"],[3,"user_regs_struct"],[3,"user"],[3,"mcontext_t"],[3,"ucontext_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"termios2"],[3,"statvfs"],[3,"pthread_attr_t"],[3,"sigset_t"],[3,"sem_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_rwlockattr_t"],[3,"pthread_cond_t"],[3,"pthread_condattr_t"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"posix_spawn_file_actions_t"],[3,"posix_spawnattr_t"],[3,"fd_set"],[3,"in6_rtmsg"]]};
searchIndex["matrixmultiply"] = {"doc":"General matrix multiplication for f32, f64 matrices.","items":[[5,"sgemm","matrixmultiply","General matrix multiplication (f32)",null,null],[5,"dgemm","","General matrix multiplication (f64)",null,null]],"paths":[]};
searchIndex["nalgebra"] = {"doc":"nalgebra","items":[[3,"Id","nalgebra","The universal identity element wrt. a given operator, usually noted `Id` with a context-dependent subscript.",null,null],[8,"Real","","Trait shared by all reals.",null,null],[10,"floor","","",0,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"ceil","","",0,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"round","","",0,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"trunc","","",0,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"fract","","",0,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"abs","","",0,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"signum","","",0,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"is_sign_positive","","",0,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[10,"is_sign_negative","","",0,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[10,"mul_add","","",0,{"i":[{"n":"self"},{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[10,"recip","","",0,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"powi","","",0,{"i":[{"n":"self"},{"n":"i32"}],"o":{"n":"self"}}],[10,"powf","","",0,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[10,"sqrt","","",0,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"exp","","",0,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"exp2","","",0,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"ln","","",0,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"log","","",0,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[10,"log2","","",0,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"log10","","",0,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"max","","",0,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[10,"min","","",0,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[10,"cbrt","","",0,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"hypot","","",0,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[10,"sin","","",0,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"cos","","",0,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"tan","","",0,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"asin","","",0,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"acos","","",0,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"atan","","",0,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"atan2","","",0,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[10,"sin_cos","","",0,null],[10,"exp_m1","","",0,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"ln_1p","","",0,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"sinh","","",0,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"cosh","","",0,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"tanh","","",0,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"asinh","","",0,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"acosh","","",0,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"atanh","","",0,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"pi","","",0,{"o":{"n":"self"}}],[10,"two_pi","","",0,{"o":{"n":"self"}}],[10,"frac_pi_2","","",0,{"o":{"n":"self"}}],[10,"frac_pi_3","","",0,{"o":{"n":"self"}}],[10,"frac_pi_4","","",0,{"o":{"n":"self"}}],[10,"frac_pi_6","","",0,{"o":{"n":"self"}}],[10,"frac_pi_8","","",0,{"o":{"n":"self"}}],[10,"frac_1_pi","","",0,{"o":{"n":"self"}}],[10,"frac_2_pi","","",0,{"o":{"n":"self"}}],[10,"frac_2_sqrt_pi","","",0,{"o":{"n":"self"}}],[10,"e","","",0,{"o":{"n":"self"}}],[10,"log2_e","","",0,{"o":{"n":"self"}}],[10,"log10_e","","",0,{"o":{"n":"self"}}],[10,"ln_2","","",0,{"o":{"n":"self"}}],[10,"ln_10","","",0,{"o":{"n":"self"}}],[5,"id","","Gets the ubiquitous multiplicative identity element.",null,{"o":{"n":"id"}}],[5,"one","","Gets the multiplicative identity element.",null,{"o":{"n":"t"}}],[5,"zero","","Gets the additive identity element.",null,{"o":{"n":"t"}}],[5,"origin","","Gets the origin of the given point.",null,{"o":{"n":"p"}}],[5,"dimension","","The dimension of the given algebraic entity seen as a vector space.",null,{"o":{"n":"usize"}}],[5,"wrap","","Wraps `val` into the range `[min, max]` using modular arithmetics.",null,{"i":[{"n":"t"},{"n":"t"},{"n":"t"}],"o":{"n":"t"}}],[5,"clamp","","Returns a reference to the input value clamped to the interval `[min, max]`.",null,{"i":[{"n":"t"},{"n":"t"},{"n":"t"}],"o":{"n":"t"}}],[5,"max","","Same as `cmp::max`.",null,{"i":[{"n":"t"},{"n":"t"}],"o":{"n":"t"}}],[5,"min","","Same as `cmp::min`.",null,{"i":[{"n":"t"},{"n":"t"}],"o":{"n":"t"}}],[5,"abs","","The absolute value of `a`.",null,{"i":[{"n":"t"}],"o":{"n":"t"}}],[5,"inf","","Returns the infimum of `a` and `b`.",null,{"i":[{"n":"t"},{"n":"t"}],"o":{"n":"t"}}],[5,"sup","","Returns the supremum of `a` and `b`.",null,{"i":[{"n":"t"},{"n":"t"}],"o":{"n":"t"}}],[5,"inf_sup","","Returns simultaneously the infimum and supremum of `a` and `b`.",null,null],[5,"partial_cmp","","Compare `a` and `b` using a partial ordering relation.",null,{"i":[{"n":"t"},{"n":"t"}],"o":{"g":["ordering"],"n":"option"}}],[5,"partial_lt","","Returns `true` iff `a` and `b` are comparable and `a < b`.",null,{"i":[{"n":"t"},{"n":"t"}],"o":{"n":"bool"}}],[5,"partial_le","","Returns `true` iff `a` and `b` are comparable and `a <= b`.",null,{"i":[{"n":"t"},{"n":"t"}],"o":{"n":"bool"}}],[5,"partial_gt","","Returns `true` iff `a` and `b` are comparable and `a > b`.",null,{"i":[{"n":"t"},{"n":"t"}],"o":{"n":"bool"}}],[5,"partial_ge","","Returns `true` iff `a` and `b` are comparable and `a >= b`.",null,{"i":[{"n":"t"},{"n":"t"}],"o":{"n":"bool"}}],[5,"partial_min","","Return the minimum of `a` and `b` if they are comparable.",null,{"i":[{"n":"t"},{"n":"t"}],"o":{"n":"option"}}],[5,"partial_max","","Return the maximum of `a` and `b` if they are comparable.",null,{"i":[{"n":"t"},{"n":"t"}],"o":{"n":"option"}}],[5,"partial_clamp","","Clamp `value` between `min` and `max`. Returns `None` if `value` is not comparable to `min` or `max`.",null,{"i":[{"n":"t"},{"n":"t"},{"n":"t"}],"o":{"n":"option"}}],[5,"partial_sort2","","Sorts two values in increasing order using a partial ordering.",null,{"i":[{"n":"t"},{"n":"t"}],"o":{"n":"option"}}],[5,"try_inverse","","Tries to gets an inverted copy of a square matrix.",null,{"i":[{"n":"m"}],"o":{"n":"option"}}],[5,"inverse","","Computes the multiplicative inverse of an (always invertible) algebraic entity.",null,{"i":[{"n":"m"}],"o":{"n":"m"}}],[5,"dot","","Computes the dot product of two vectors.",null,null],[5,"angle","","Computes the smallest angle between two vectors.",null,null],[5,"norm","","Computes the L2 (euclidean) norm of a vector.",null,null],[5,"norm_squared","","Computes the squared L2 (euclidean) norm of the vector `v`.",null,null],[5,"normalize","","Computes the normalized version of the vector `v`.",null,{"i":[{"n":"v"}],"o":{"n":"v"}}],[5,"try_normalize","","Computes the normalized version of the vector `v` or returns `None` if its norm is smaller than `min_norm`.",null,null],[5,"center","","The center of two points.",null,{"i":[{"n":"p"},{"n":"p"}],"o":{"n":"p"}}],[5,"distance","","The distance between two points.",null,null],[5,"distance_squared","","The squared distance between two points.",null,null],[5,"convert","","Converts an object from one type to an equivalent or more general one.",null,{"i":[{"n":"from"}],"o":{"n":"to"}}],[5,"try_convert","","Attempts to convert an object to a more specific one.",null,{"i":[{"n":"from"}],"o":{"n":"option"}}],[5,"is_convertible","","Indicates if `::try_convert` will succeed without actually performing the conversion.",null,{"i":[{"n":"from"}],"o":{"n":"bool"}}],[5,"convert_unchecked","","Use with care! Same as `try_convert` but without any property checks.",null,{"i":[{"n":"from"}],"o":{"n":"to"}}],[5,"convert_ref","","Converts an object from one type to an equivalent or more general one.",null,{"i":[{"n":"from"}],"o":{"n":"to"}}],[5,"try_convert_ref","","Attempts to convert an object to a more specific one.",null,{"i":[{"n":"from"}],"o":{"n":"option"}}],[5,"convert_ref_unchecked","","Use with care! Same as `try_convert` but without any property checks.",null,{"i":[{"n":"from"}],"o":{"n":"to"}}],[0,"core","","[Reexported at the root of this crate.] Data structures for vector and matrix computations.",null,null],[3,"Matrix","nalgebra::core","The most generic column-major matrix (and vector) type.",null,null],[12,"data","","The data storage that contains all the matrix components and informations about its number of rows and column (if needed).",1,null],[3,"Unit","","A wrapper that ensures the undelying algebraic entity has a unit norm.",null,null],[3,"SliceStorage","","A matrix data storage for a matrix slice. Only contains an internal reference to another matrix data storage.",null,null],[3,"SliceStorageMut","","A mutable matrix data storage for mutable matrix slice. Only contains an internal mutable reference to another matrix data storage.",null,null],[3,"MatrixArray","","A array-based statically sized matrix data storage.",null,null],[3,"MatrixVec","","A Vec-based matrix data storage. It may be dynamically-sized.",null,null],[0,"dimension","","Traits and tags for identifying the dimension of all algebraic entities.",null,null],[3,"Dynamic","nalgebra::core::dimension","Dim of dynamically-sized algebraic entities.",null,null],[3,"U1","","",null,null],[3,"U0","","",null,null],[3,"U2","","",null,null],[3,"U3","","",null,null],[3,"U4","","",null,null],[3,"U5","","",null,null],[3,"U6","","",null,null],[3,"U7","","",null,null],[3,"U8","","",null,null],[3,"U9","","",null,null],[3,"U10","","",null,null],[3,"U11","","",null,null],[3,"U12","","",null,null],[3,"U13","","",null,null],[3,"U14","","",null,null],[3,"U15","","",null,null],[3,"U16","","",null,null],[3,"U17","","",null,null],[3,"U18","","",null,null],[3,"U19","","",null,null],[3,"U20","","",null,null],[3,"U21","","",null,null],[3,"U22","","",null,null],[3,"U23","","",null,null],[3,"U24","","",null,null],[3,"U25","","",null,null],[3,"U26","","",null,null],[3,"U27","","",null,null],[3,"U28","","",null,null],[3,"U29","","",null,null],[3,"U30","","",null,null],[3,"U31","","",null,null],[3,"U32","","",null,null],[3,"U33","","",null,null],[3,"U34","","",null,null],[3,"U35","","",null,null],[3,"U36","","",null,null],[3,"U37","","",null,null],[3,"U38","","",null,null],[3,"U39","","",null,null],[3,"U40","","",null,null],[3,"U41","","",null,null],[3,"U42","","",null,null],[3,"U43","","",null,null],[3,"U44","","",null,null],[3,"U45","","",null,null],[3,"U46","","",null,null],[3,"U47","","",null,null],[3,"U48","","",null,null],[3,"U49","","",null,null],[3,"U50","","",null,null],[3,"U51","","",null,null],[3,"U52","","",null,null],[3,"U53","","",null,null],[3,"U54","","",null,null],[3,"U55","","",null,null],[3,"U56","","",null,null],[3,"U57","","",null,null],[3,"U58","","",null,null],[3,"U59","","",null,null],[3,"U60","","",null,null],[3,"U61","","",null,null],[3,"U62","","",null,null],[3,"U63","","",null,null],[3,"U64","","",null,null],[3,"U65","","",null,null],[3,"U66","","",null,null],[3,"U67","","",null,null],[3,"U68","","",null,null],[3,"U69","","",null,null],[3,"U70","","",null,null],[3,"U71","","",null,null],[3,"U72","","",null,null],[3,"U73","","",null,null],[3,"U74","","",null,null],[3,"U75","","",null,null],[3,"U76","","",null,null],[3,"U77","","",null,null],[3,"U78","","",null,null],[3,"U79","","",null,null],[3,"U80","","",null,null],[3,"U81","","",null,null],[3,"U82","","",null,null],[3,"U83","","",null,null],[3,"U84","","",null,null],[3,"U85","","",null,null],[3,"U86","","",null,null],[3,"U87","","",null,null],[3,"U88","","",null,null],[3,"U89","","",null,null],[3,"U90","","",null,null],[3,"U91","","",null,null],[3,"U92","","",null,null],[3,"U93","","",null,null],[3,"U94","","",null,null],[3,"U95","","",null,null],[3,"U96","","",null,null],[3,"U97","","",null,null],[3,"U98","","",null,null],[3,"U99","","",null,null],[3,"U100","","",null,null],[3,"U101","","",null,null],[3,"U102","","",null,null],[3,"U103","","",null,null],[3,"U104","","",null,null],[3,"U105","","",null,null],[3,"U106","","",null,null],[3,"U107","","",null,null],[3,"U108","","",null,null],[3,"U109","","",null,null],[3,"U110","","",null,null],[3,"U111","","",null,null],[3,"U112","","",null,null],[3,"U113","","",null,null],[3,"U114","","",null,null],[3,"U115","","",null,null],[3,"U116","","",null,null],[3,"U117","","",null,null],[3,"U118","","",null,null],[3,"U119","","",null,null],[3,"U120","","",null,null],[3,"U121","","",null,null],[3,"U122","","",null,null],[3,"U123","","",null,null],[3,"U124","","",null,null],[3,"U125","","",null,null],[3,"U126","","",null,null],[3,"U127","","",null,null],[6,"DimSum","","",null,null],[6,"DimNameSum","","",null,null],[6,"DimProd","","",null,null],[6,"DimNameProd","","",null,null],[6,"DimDiff","","",null,null],[6,"DimNameDiff","","",null,null],[6,"DimQuot","","",null,null],[6,"DimNameQuot","","",null,null],[6,"DimMinimum","","",null,null],[6,"DimNameNimimum","","",null,null],[6,"DimMaximum","","",null,null],[6,"DimNameMaximum","","",null,null],[8,"IsDynamic","","Trait implemented by `Dynamic`.",null,null],[8,"IsNotStaticOne","","Trait implemented by `Dynamic` and type-level integers different from `U1`.",null,null],[8,"Dim","","Trait implemented by any type that can be used as a dimension. This includes type-level integers and `Dynamic` (for dimensions not known at compile-time).",null,null],[11,"is","","",2,{"o":{"n":"bool"}}],[10,"try_to_usize","","Gets the compile-time value of `Self`. Returns `None` if it is not known, i.e., if `Self = Dynamic`.",2,{"o":{"g":["usize"],"n":"option"}}],[10,"value","","Gets the run-time value of `self`. For type-level integers, this is the same as `Self::try_to_usize().unwrap()`.",2,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[10,"from_usize","","Builds an instance of `Self` from a run-time value. Panics if `Self` is a type-level integer and `dim != Self::try_to_usize().unwrap()`.",2,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[8,"DimAdd","","",null,null],[16,"Output","","",3,null],[10,"add","","",3,null],[8,"DimNameAdd","","",null,null],[16,"Output","","",4,null],[10,"add","","",4,null],[8,"DimMul","","",null,null],[16,"Output","","",5,null],[10,"mul","","",5,null],[8,"DimNameMul","","",null,null],[16,"Output","","",6,null],[10,"mul","","",6,null],[8,"DimSub","","",null,null],[16,"Output","","",7,null],[10,"sub","","",7,null],[8,"DimNameSub","","",null,null],[16,"Output","","",8,null],[10,"sub","","",8,null],[8,"DimDiv","","",null,null],[16,"Output","","",9,null],[10,"div","","",9,null],[8,"DimNameDiv","","",null,null],[16,"Output","","",10,null],[10,"div","","",10,null],[8,"DimMin","","",null,null],[16,"Output","","",11,null],[10,"min","","",11,null],[8,"DimNameMin","","",null,null],[16,"Output","","",12,null],[10,"min","","",12,null],[8,"DimMax","","",null,null],[16,"Output","","",13,null],[10,"max","","",13,null],[8,"DimNameMax","","",null,null],[16,"Output","","",14,null],[10,"max","","",14,null],[8,"DimName","","Trait implemented exclusively by type-level integers.",null,null],[16,"Value","","",15,null],[10,"name","","The name of this dimension, i.e., the singleton `Self`.",15,{"o":{"n":"self"}}],[11,"dim","","The value of this dimension.",15,{"o":{"n":"usize"}}],[8,"NamedDim","","",null,null],[16,"Name","","",16,null],[11,"clone","","",17,{"i":[{"n":"self"}],"o":{"n":"dynamic"}}],[11,"eq","","",17,{"i":[{"n":"self"},{"n":"dynamic"}],"o":{"n":"bool"}}],[11,"ne","","",17,{"i":[{"n":"self"},{"n":"dynamic"}],"o":{"n":"bool"}}],[11,"fmt","","",17,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","A dynamic size equal to `value`.",17,{"i":[{"n":"usize"}],"o":{"n":"dynamic"}}],[11,"try_to_usize","","",17,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",17,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",17,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"add","","",17,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"dynamic"}}],[11,"sub","","",17,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"dynamic"}}],[11,"add","","",17,{"i":[{"n":"self"},{"n":"d"}],"o":{"n":"dynamic"}}],[11,"mul","","",17,{"i":[{"n":"self"},{"n":"d"}],"o":{"n":"dynamic"}}],[11,"sub","","",17,{"i":[{"n":"self"},{"n":"d"}],"o":{"n":"dynamic"}}],[11,"div","","",17,{"i":[{"n":"self"},{"n":"d"}],"o":{"n":"dynamic"}}],[11,"min","","",17,{"i":[{"n":"self"},{"n":"d"}],"o":{"n":"dynamic"}}],[11,"max","","",17,{"i":[{"n":"self"},{"n":"d"}],"o":{"n":"dynamic"}}],[11,"fmt","","",18,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",18,{"i":[{"n":"self"}],"o":{"n":"u1"}}],[11,"hash","","",18,null],[11,"eq","","",18,{"i":[{"n":"self"},{"n":"u1"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",18,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",18,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",18,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",18,{"o":{"n":"self"}}],[11,"fmt","","",19,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",19,{"i":[{"n":"self"}],"o":{"n":"u0"}}],[11,"hash","","",19,null],[11,"eq","","",19,{"i":[{"n":"self"},{"n":"u0"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",19,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",19,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",19,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",19,{"o":{"n":"self"}}],[11,"fmt","","",20,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",20,{"i":[{"n":"self"}],"o":{"n":"u2"}}],[11,"hash","","",20,null],[11,"eq","","",20,{"i":[{"n":"self"},{"n":"u2"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",20,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",20,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",20,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",20,{"o":{"n":"self"}}],[11,"fmt","","",21,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",21,{"i":[{"n":"self"}],"o":{"n":"u3"}}],[11,"hash","","",21,null],[11,"eq","","",21,{"i":[{"n":"self"},{"n":"u3"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",21,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",21,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",21,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",21,{"o":{"n":"self"}}],[11,"fmt","","",22,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",22,{"i":[{"n":"self"}],"o":{"n":"u4"}}],[11,"hash","","",22,null],[11,"eq","","",22,{"i":[{"n":"self"},{"n":"u4"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",22,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",22,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",22,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",22,{"o":{"n":"self"}}],[11,"fmt","","",23,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",23,{"i":[{"n":"self"}],"o":{"n":"u5"}}],[11,"hash","","",23,null],[11,"eq","","",23,{"i":[{"n":"self"},{"n":"u5"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",23,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",23,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",23,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",23,{"o":{"n":"self"}}],[11,"fmt","","",24,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",24,{"i":[{"n":"self"}],"o":{"n":"u6"}}],[11,"hash","","",24,null],[11,"eq","","",24,{"i":[{"n":"self"},{"n":"u6"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",24,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",24,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",24,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",24,{"o":{"n":"self"}}],[11,"fmt","","",25,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",25,{"i":[{"n":"self"}],"o":{"n":"u7"}}],[11,"hash","","",25,null],[11,"eq","","",25,{"i":[{"n":"self"},{"n":"u7"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",25,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",25,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",25,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",25,{"o":{"n":"self"}}],[11,"fmt","","",26,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",26,{"i":[{"n":"self"}],"o":{"n":"u8"}}],[11,"hash","","",26,null],[11,"eq","","",26,{"i":[{"n":"self"},{"n":"u8"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",26,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",26,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",26,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",26,{"o":{"n":"self"}}],[11,"fmt","","",27,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",27,{"i":[{"n":"self"}],"o":{"n":"u9"}}],[11,"hash","","",27,null],[11,"eq","","",27,{"i":[{"n":"self"},{"n":"u9"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",27,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",27,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",27,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",27,{"o":{"n":"self"}}],[11,"fmt","","",28,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",28,{"i":[{"n":"self"}],"o":{"n":"u10"}}],[11,"hash","","",28,null],[11,"eq","","",28,{"i":[{"n":"self"},{"n":"u10"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",28,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",28,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",28,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",28,{"o":{"n":"self"}}],[11,"fmt","","",29,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",29,{"i":[{"n":"self"}],"o":{"n":"u11"}}],[11,"hash","","",29,null],[11,"eq","","",29,{"i":[{"n":"self"},{"n":"u11"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",29,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",29,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",29,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",29,{"o":{"n":"self"}}],[11,"fmt","","",30,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",30,{"i":[{"n":"self"}],"o":{"n":"u12"}}],[11,"hash","","",30,null],[11,"eq","","",30,{"i":[{"n":"self"},{"n":"u12"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",30,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",30,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",30,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",30,{"o":{"n":"self"}}],[11,"fmt","","",31,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",31,{"i":[{"n":"self"}],"o":{"n":"u13"}}],[11,"hash","","",31,null],[11,"eq","","",31,{"i":[{"n":"self"},{"n":"u13"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",31,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",31,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",31,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",31,{"o":{"n":"self"}}],[11,"fmt","","",32,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",32,{"i":[{"n":"self"}],"o":{"n":"u14"}}],[11,"hash","","",32,null],[11,"eq","","",32,{"i":[{"n":"self"},{"n":"u14"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",32,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",32,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",32,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",32,{"o":{"n":"self"}}],[11,"fmt","","",33,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",33,{"i":[{"n":"self"}],"o":{"n":"u15"}}],[11,"hash","","",33,null],[11,"eq","","",33,{"i":[{"n":"self"},{"n":"u15"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",33,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",33,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",33,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",33,{"o":{"n":"self"}}],[11,"fmt","","",34,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",34,{"i":[{"n":"self"}],"o":{"n":"u16"}}],[11,"hash","","",34,null],[11,"eq","","",34,{"i":[{"n":"self"},{"n":"u16"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",34,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",34,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",34,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",34,{"o":{"n":"self"}}],[11,"fmt","","",35,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",35,{"i":[{"n":"self"}],"o":{"n":"u17"}}],[11,"hash","","",35,null],[11,"eq","","",35,{"i":[{"n":"self"},{"n":"u17"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",35,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",35,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",35,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",35,{"o":{"n":"self"}}],[11,"fmt","","",36,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",36,{"i":[{"n":"self"}],"o":{"n":"u18"}}],[11,"hash","","",36,null],[11,"eq","","",36,{"i":[{"n":"self"},{"n":"u18"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",36,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",36,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",36,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",36,{"o":{"n":"self"}}],[11,"fmt","","",37,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",37,{"i":[{"n":"self"}],"o":{"n":"u19"}}],[11,"hash","","",37,null],[11,"eq","","",37,{"i":[{"n":"self"},{"n":"u19"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",37,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",37,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",37,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",37,{"o":{"n":"self"}}],[11,"fmt","","",38,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",38,{"i":[{"n":"self"}],"o":{"n":"u20"}}],[11,"hash","","",38,null],[11,"eq","","",38,{"i":[{"n":"self"},{"n":"u20"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",38,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",38,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",38,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",38,{"o":{"n":"self"}}],[11,"fmt","","",39,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",39,{"i":[{"n":"self"}],"o":{"n":"u21"}}],[11,"hash","","",39,null],[11,"eq","","",39,{"i":[{"n":"self"},{"n":"u21"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",39,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",39,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",39,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",39,{"o":{"n":"self"}}],[11,"fmt","","",40,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",40,{"i":[{"n":"self"}],"o":{"n":"u22"}}],[11,"hash","","",40,null],[11,"eq","","",40,{"i":[{"n":"self"},{"n":"u22"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",40,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",40,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",40,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",40,{"o":{"n":"self"}}],[11,"fmt","","",41,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",41,{"i":[{"n":"self"}],"o":{"n":"u23"}}],[11,"hash","","",41,null],[11,"eq","","",41,{"i":[{"n":"self"},{"n":"u23"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",41,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",41,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",41,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",41,{"o":{"n":"self"}}],[11,"fmt","","",42,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",42,{"i":[{"n":"self"}],"o":{"n":"u24"}}],[11,"hash","","",42,null],[11,"eq","","",42,{"i":[{"n":"self"},{"n":"u24"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",42,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",42,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",42,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",42,{"o":{"n":"self"}}],[11,"fmt","","",43,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",43,{"i":[{"n":"self"}],"o":{"n":"u25"}}],[11,"hash","","",43,null],[11,"eq","","",43,{"i":[{"n":"self"},{"n":"u25"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",43,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",43,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",43,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",43,{"o":{"n":"self"}}],[11,"fmt","","",44,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",44,{"i":[{"n":"self"}],"o":{"n":"u26"}}],[11,"hash","","",44,null],[11,"eq","","",44,{"i":[{"n":"self"},{"n":"u26"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",44,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",44,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",44,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",44,{"o":{"n":"self"}}],[11,"fmt","","",45,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",45,{"i":[{"n":"self"}],"o":{"n":"u27"}}],[11,"hash","","",45,null],[11,"eq","","",45,{"i":[{"n":"self"},{"n":"u27"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",45,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",45,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",45,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",45,{"o":{"n":"self"}}],[11,"fmt","","",46,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",46,{"i":[{"n":"self"}],"o":{"n":"u28"}}],[11,"hash","","",46,null],[11,"eq","","",46,{"i":[{"n":"self"},{"n":"u28"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",46,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",46,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",46,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",46,{"o":{"n":"self"}}],[11,"fmt","","",47,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",47,{"i":[{"n":"self"}],"o":{"n":"u29"}}],[11,"hash","","",47,null],[11,"eq","","",47,{"i":[{"n":"self"},{"n":"u29"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",47,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",47,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",47,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",47,{"o":{"n":"self"}}],[11,"fmt","","",48,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",48,{"i":[{"n":"self"}],"o":{"n":"u30"}}],[11,"hash","","",48,null],[11,"eq","","",48,{"i":[{"n":"self"},{"n":"u30"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",48,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",48,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",48,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",48,{"o":{"n":"self"}}],[11,"fmt","","",49,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",49,{"i":[{"n":"self"}],"o":{"n":"u31"}}],[11,"hash","","",49,null],[11,"eq","","",49,{"i":[{"n":"self"},{"n":"u31"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",49,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",49,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",49,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",49,{"o":{"n":"self"}}],[11,"fmt","","",50,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",50,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"hash","","",50,null],[11,"eq","","",50,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",50,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",50,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",50,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",50,{"o":{"n":"self"}}],[11,"fmt","","",51,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",51,{"i":[{"n":"self"}],"o":{"n":"u33"}}],[11,"hash","","",51,null],[11,"eq","","",51,{"i":[{"n":"self"},{"n":"u33"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",51,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",51,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",51,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",51,{"o":{"n":"self"}}],[11,"fmt","","",52,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",52,{"i":[{"n":"self"}],"o":{"n":"u34"}}],[11,"hash","","",52,null],[11,"eq","","",52,{"i":[{"n":"self"},{"n":"u34"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",52,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",52,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",52,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",52,{"o":{"n":"self"}}],[11,"fmt","","",53,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",53,{"i":[{"n":"self"}],"o":{"n":"u35"}}],[11,"hash","","",53,null],[11,"eq","","",53,{"i":[{"n":"self"},{"n":"u35"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",53,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",53,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",53,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",53,{"o":{"n":"self"}}],[11,"fmt","","",54,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",54,{"i":[{"n":"self"}],"o":{"n":"u36"}}],[11,"hash","","",54,null],[11,"eq","","",54,{"i":[{"n":"self"},{"n":"u36"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",54,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",54,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",54,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",54,{"o":{"n":"self"}}],[11,"fmt","","",55,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",55,{"i":[{"n":"self"}],"o":{"n":"u37"}}],[11,"hash","","",55,null],[11,"eq","","",55,{"i":[{"n":"self"},{"n":"u37"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",55,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",55,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",55,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",55,{"o":{"n":"self"}}],[11,"fmt","","",56,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",56,{"i":[{"n":"self"}],"o":{"n":"u38"}}],[11,"hash","","",56,null],[11,"eq","","",56,{"i":[{"n":"self"},{"n":"u38"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",56,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",56,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",56,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",56,{"o":{"n":"self"}}],[11,"fmt","","",57,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",57,{"i":[{"n":"self"}],"o":{"n":"u39"}}],[11,"hash","","",57,null],[11,"eq","","",57,{"i":[{"n":"self"},{"n":"u39"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",57,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",57,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",57,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",57,{"o":{"n":"self"}}],[11,"fmt","","",58,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",58,{"i":[{"n":"self"}],"o":{"n":"u40"}}],[11,"hash","","",58,null],[11,"eq","","",58,{"i":[{"n":"self"},{"n":"u40"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",58,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",58,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",58,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",58,{"o":{"n":"self"}}],[11,"fmt","","",59,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",59,{"i":[{"n":"self"}],"o":{"n":"u41"}}],[11,"hash","","",59,null],[11,"eq","","",59,{"i":[{"n":"self"},{"n":"u41"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",59,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",59,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",59,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",59,{"o":{"n":"self"}}],[11,"fmt","","",60,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",60,{"i":[{"n":"self"}],"o":{"n":"u42"}}],[11,"hash","","",60,null],[11,"eq","","",60,{"i":[{"n":"self"},{"n":"u42"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",60,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",60,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",60,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",60,{"o":{"n":"self"}}],[11,"fmt","","",61,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",61,{"i":[{"n":"self"}],"o":{"n":"u43"}}],[11,"hash","","",61,null],[11,"eq","","",61,{"i":[{"n":"self"},{"n":"u43"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",61,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",61,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",61,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",61,{"o":{"n":"self"}}],[11,"fmt","","",62,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",62,{"i":[{"n":"self"}],"o":{"n":"u44"}}],[11,"hash","","",62,null],[11,"eq","","",62,{"i":[{"n":"self"},{"n":"u44"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",62,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",62,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",62,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",62,{"o":{"n":"self"}}],[11,"fmt","","",63,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",63,{"i":[{"n":"self"}],"o":{"n":"u45"}}],[11,"hash","","",63,null],[11,"eq","","",63,{"i":[{"n":"self"},{"n":"u45"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",63,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",63,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",63,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",63,{"o":{"n":"self"}}],[11,"fmt","","",64,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",64,{"i":[{"n":"self"}],"o":{"n":"u46"}}],[11,"hash","","",64,null],[11,"eq","","",64,{"i":[{"n":"self"},{"n":"u46"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",64,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",64,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",64,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",64,{"o":{"n":"self"}}],[11,"fmt","","",65,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",65,{"i":[{"n":"self"}],"o":{"n":"u47"}}],[11,"hash","","",65,null],[11,"eq","","",65,{"i":[{"n":"self"},{"n":"u47"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",65,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",65,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",65,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",65,{"o":{"n":"self"}}],[11,"fmt","","",66,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",66,{"i":[{"n":"self"}],"o":{"n":"u48"}}],[11,"hash","","",66,null],[11,"eq","","",66,{"i":[{"n":"self"},{"n":"u48"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",66,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",66,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",66,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",66,{"o":{"n":"self"}}],[11,"fmt","","",67,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",67,{"i":[{"n":"self"}],"o":{"n":"u49"}}],[11,"hash","","",67,null],[11,"eq","","",67,{"i":[{"n":"self"},{"n":"u49"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",67,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",67,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",67,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",67,{"o":{"n":"self"}}],[11,"fmt","","",68,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",68,{"i":[{"n":"self"}],"o":{"n":"u50"}}],[11,"hash","","",68,null],[11,"eq","","",68,{"i":[{"n":"self"},{"n":"u50"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",68,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",68,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",68,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",68,{"o":{"n":"self"}}],[11,"fmt","","",69,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",69,{"i":[{"n":"self"}],"o":{"n":"u51"}}],[11,"hash","","",69,null],[11,"eq","","",69,{"i":[{"n":"self"},{"n":"u51"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",69,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",69,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",69,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",69,{"o":{"n":"self"}}],[11,"fmt","","",70,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",70,{"i":[{"n":"self"}],"o":{"n":"u52"}}],[11,"hash","","",70,null],[11,"eq","","",70,{"i":[{"n":"self"},{"n":"u52"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",70,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",70,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",70,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",70,{"o":{"n":"self"}}],[11,"fmt","","",71,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",71,{"i":[{"n":"self"}],"o":{"n":"u53"}}],[11,"hash","","",71,null],[11,"eq","","",71,{"i":[{"n":"self"},{"n":"u53"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",71,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",71,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",71,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",71,{"o":{"n":"self"}}],[11,"fmt","","",72,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",72,{"i":[{"n":"self"}],"o":{"n":"u54"}}],[11,"hash","","",72,null],[11,"eq","","",72,{"i":[{"n":"self"},{"n":"u54"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",72,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",72,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",72,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",72,{"o":{"n":"self"}}],[11,"fmt","","",73,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",73,{"i":[{"n":"self"}],"o":{"n":"u55"}}],[11,"hash","","",73,null],[11,"eq","","",73,{"i":[{"n":"self"},{"n":"u55"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",73,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",73,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",73,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",73,{"o":{"n":"self"}}],[11,"fmt","","",74,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",74,{"i":[{"n":"self"}],"o":{"n":"u56"}}],[11,"hash","","",74,null],[11,"eq","","",74,{"i":[{"n":"self"},{"n":"u56"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",74,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",74,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",74,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",74,{"o":{"n":"self"}}],[11,"fmt","","",75,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",75,{"i":[{"n":"self"}],"o":{"n":"u57"}}],[11,"hash","","",75,null],[11,"eq","","",75,{"i":[{"n":"self"},{"n":"u57"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",75,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",75,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",75,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",75,{"o":{"n":"self"}}],[11,"fmt","","",76,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",76,{"i":[{"n":"self"}],"o":{"n":"u58"}}],[11,"hash","","",76,null],[11,"eq","","",76,{"i":[{"n":"self"},{"n":"u58"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",76,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",76,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",76,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",76,{"o":{"n":"self"}}],[11,"fmt","","",77,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",77,{"i":[{"n":"self"}],"o":{"n":"u59"}}],[11,"hash","","",77,null],[11,"eq","","",77,{"i":[{"n":"self"},{"n":"u59"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",77,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",77,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",77,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",77,{"o":{"n":"self"}}],[11,"fmt","","",78,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",78,{"i":[{"n":"self"}],"o":{"n":"u60"}}],[11,"hash","","",78,null],[11,"eq","","",78,{"i":[{"n":"self"},{"n":"u60"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",78,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",78,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",78,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",78,{"o":{"n":"self"}}],[11,"fmt","","",79,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",79,{"i":[{"n":"self"}],"o":{"n":"u61"}}],[11,"hash","","",79,null],[11,"eq","","",79,{"i":[{"n":"self"},{"n":"u61"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",79,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",79,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",79,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",79,{"o":{"n":"self"}}],[11,"fmt","","",80,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",80,{"i":[{"n":"self"}],"o":{"n":"u62"}}],[11,"hash","","",80,null],[11,"eq","","",80,{"i":[{"n":"self"},{"n":"u62"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",80,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",80,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",80,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",80,{"o":{"n":"self"}}],[11,"fmt","","",81,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",81,{"i":[{"n":"self"}],"o":{"n":"u63"}}],[11,"hash","","",81,null],[11,"eq","","",81,{"i":[{"n":"self"},{"n":"u63"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",81,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",81,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",81,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",81,{"o":{"n":"self"}}],[11,"fmt","","",82,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",82,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"hash","","",82,null],[11,"eq","","",82,{"i":[{"n":"self"},{"n":"u64"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",82,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",82,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",82,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",82,{"o":{"n":"self"}}],[11,"fmt","","",83,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",83,{"i":[{"n":"self"}],"o":{"n":"u65"}}],[11,"hash","","",83,null],[11,"eq","","",83,{"i":[{"n":"self"},{"n":"u65"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",83,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",83,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",83,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",83,{"o":{"n":"self"}}],[11,"fmt","","",84,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",84,{"i":[{"n":"self"}],"o":{"n":"u66"}}],[11,"hash","","",84,null],[11,"eq","","",84,{"i":[{"n":"self"},{"n":"u66"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",84,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",84,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",84,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",84,{"o":{"n":"self"}}],[11,"fmt","","",85,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",85,{"i":[{"n":"self"}],"o":{"n":"u67"}}],[11,"hash","","",85,null],[11,"eq","","",85,{"i":[{"n":"self"},{"n":"u67"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",85,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",85,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",85,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",85,{"o":{"n":"self"}}],[11,"fmt","","",86,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",86,{"i":[{"n":"self"}],"o":{"n":"u68"}}],[11,"hash","","",86,null],[11,"eq","","",86,{"i":[{"n":"self"},{"n":"u68"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",86,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",86,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",86,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",86,{"o":{"n":"self"}}],[11,"fmt","","",87,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",87,{"i":[{"n":"self"}],"o":{"n":"u69"}}],[11,"hash","","",87,null],[11,"eq","","",87,{"i":[{"n":"self"},{"n":"u69"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",87,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",87,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",87,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",87,{"o":{"n":"self"}}],[11,"fmt","","",88,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",88,{"i":[{"n":"self"}],"o":{"n":"u70"}}],[11,"hash","","",88,null],[11,"eq","","",88,{"i":[{"n":"self"},{"n":"u70"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",88,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",88,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",88,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",88,{"o":{"n":"self"}}],[11,"fmt","","",89,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",89,{"i":[{"n":"self"}],"o":{"n":"u71"}}],[11,"hash","","",89,null],[11,"eq","","",89,{"i":[{"n":"self"},{"n":"u71"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",89,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",89,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",89,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",89,{"o":{"n":"self"}}],[11,"fmt","","",90,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",90,{"i":[{"n":"self"}],"o":{"n":"u72"}}],[11,"hash","","",90,null],[11,"eq","","",90,{"i":[{"n":"self"},{"n":"u72"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",90,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",90,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",90,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",90,{"o":{"n":"self"}}],[11,"fmt","","",91,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",91,{"i":[{"n":"self"}],"o":{"n":"u73"}}],[11,"hash","","",91,null],[11,"eq","","",91,{"i":[{"n":"self"},{"n":"u73"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",91,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",91,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",91,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",91,{"o":{"n":"self"}}],[11,"fmt","","",92,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",92,{"i":[{"n":"self"}],"o":{"n":"u74"}}],[11,"hash","","",92,null],[11,"eq","","",92,{"i":[{"n":"self"},{"n":"u74"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",92,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",92,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",92,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",92,{"o":{"n":"self"}}],[11,"fmt","","",93,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",93,{"i":[{"n":"self"}],"o":{"n":"u75"}}],[11,"hash","","",93,null],[11,"eq","","",93,{"i":[{"n":"self"},{"n":"u75"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",93,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",93,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",93,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",93,{"o":{"n":"self"}}],[11,"fmt","","",94,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",94,{"i":[{"n":"self"}],"o":{"n":"u76"}}],[11,"hash","","",94,null],[11,"eq","","",94,{"i":[{"n":"self"},{"n":"u76"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",94,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",94,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",94,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",94,{"o":{"n":"self"}}],[11,"fmt","","",95,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",95,{"i":[{"n":"self"}],"o":{"n":"u77"}}],[11,"hash","","",95,null],[11,"eq","","",95,{"i":[{"n":"self"},{"n":"u77"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",95,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",95,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",95,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",95,{"o":{"n":"self"}}],[11,"fmt","","",96,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",96,{"i":[{"n":"self"}],"o":{"n":"u78"}}],[11,"hash","","",96,null],[11,"eq","","",96,{"i":[{"n":"self"},{"n":"u78"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",96,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",96,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",96,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",96,{"o":{"n":"self"}}],[11,"fmt","","",97,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",97,{"i":[{"n":"self"}],"o":{"n":"u79"}}],[11,"hash","","",97,null],[11,"eq","","",97,{"i":[{"n":"self"},{"n":"u79"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",97,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",97,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",97,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",97,{"o":{"n":"self"}}],[11,"fmt","","",98,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",98,{"i":[{"n":"self"}],"o":{"n":"u80"}}],[11,"hash","","",98,null],[11,"eq","","",98,{"i":[{"n":"self"},{"n":"u80"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",98,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",98,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",98,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",98,{"o":{"n":"self"}}],[11,"fmt","","",99,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",99,{"i":[{"n":"self"}],"o":{"n":"u81"}}],[11,"hash","","",99,null],[11,"eq","","",99,{"i":[{"n":"self"},{"n":"u81"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",99,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",99,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",99,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",99,{"o":{"n":"self"}}],[11,"fmt","","",100,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",100,{"i":[{"n":"self"}],"o":{"n":"u82"}}],[11,"hash","","",100,null],[11,"eq","","",100,{"i":[{"n":"self"},{"n":"u82"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",100,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",100,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",100,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",100,{"o":{"n":"self"}}],[11,"fmt","","",101,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",101,{"i":[{"n":"self"}],"o":{"n":"u83"}}],[11,"hash","","",101,null],[11,"eq","","",101,{"i":[{"n":"self"},{"n":"u83"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",101,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",101,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",101,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",101,{"o":{"n":"self"}}],[11,"fmt","","",102,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",102,{"i":[{"n":"self"}],"o":{"n":"u84"}}],[11,"hash","","",102,null],[11,"eq","","",102,{"i":[{"n":"self"},{"n":"u84"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",102,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",102,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",102,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",102,{"o":{"n":"self"}}],[11,"fmt","","",103,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",103,{"i":[{"n":"self"}],"o":{"n":"u85"}}],[11,"hash","","",103,null],[11,"eq","","",103,{"i":[{"n":"self"},{"n":"u85"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",103,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",103,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",103,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",103,{"o":{"n":"self"}}],[11,"fmt","","",104,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",104,{"i":[{"n":"self"}],"o":{"n":"u86"}}],[11,"hash","","",104,null],[11,"eq","","",104,{"i":[{"n":"self"},{"n":"u86"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",104,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",104,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",104,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",104,{"o":{"n":"self"}}],[11,"fmt","","",105,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",105,{"i":[{"n":"self"}],"o":{"n":"u87"}}],[11,"hash","","",105,null],[11,"eq","","",105,{"i":[{"n":"self"},{"n":"u87"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",105,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",105,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",105,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",105,{"o":{"n":"self"}}],[11,"fmt","","",106,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",106,{"i":[{"n":"self"}],"o":{"n":"u88"}}],[11,"hash","","",106,null],[11,"eq","","",106,{"i":[{"n":"self"},{"n":"u88"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",106,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",106,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",106,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",106,{"o":{"n":"self"}}],[11,"fmt","","",107,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",107,{"i":[{"n":"self"}],"o":{"n":"u89"}}],[11,"hash","","",107,null],[11,"eq","","",107,{"i":[{"n":"self"},{"n":"u89"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",107,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",107,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",107,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",107,{"o":{"n":"self"}}],[11,"fmt","","",108,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",108,{"i":[{"n":"self"}],"o":{"n":"u90"}}],[11,"hash","","",108,null],[11,"eq","","",108,{"i":[{"n":"self"},{"n":"u90"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",108,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",108,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",108,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",108,{"o":{"n":"self"}}],[11,"fmt","","",109,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",109,{"i":[{"n":"self"}],"o":{"n":"u91"}}],[11,"hash","","",109,null],[11,"eq","","",109,{"i":[{"n":"self"},{"n":"u91"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",109,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",109,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",109,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",109,{"o":{"n":"self"}}],[11,"fmt","","",110,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",110,{"i":[{"n":"self"}],"o":{"n":"u92"}}],[11,"hash","","",110,null],[11,"eq","","",110,{"i":[{"n":"self"},{"n":"u92"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",110,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",110,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",110,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",110,{"o":{"n":"self"}}],[11,"fmt","","",111,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",111,{"i":[{"n":"self"}],"o":{"n":"u93"}}],[11,"hash","","",111,null],[11,"eq","","",111,{"i":[{"n":"self"},{"n":"u93"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",111,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",111,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",111,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",111,{"o":{"n":"self"}}],[11,"fmt","","",112,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",112,{"i":[{"n":"self"}],"o":{"n":"u94"}}],[11,"hash","","",112,null],[11,"eq","","",112,{"i":[{"n":"self"},{"n":"u94"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",112,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",112,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",112,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",112,{"o":{"n":"self"}}],[11,"fmt","","",113,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",113,{"i":[{"n":"self"}],"o":{"n":"u95"}}],[11,"hash","","",113,null],[11,"eq","","",113,{"i":[{"n":"self"},{"n":"u95"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",113,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",113,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",113,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",113,{"o":{"n":"self"}}],[11,"fmt","","",114,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",114,{"i":[{"n":"self"}],"o":{"n":"u96"}}],[11,"hash","","",114,null],[11,"eq","","",114,{"i":[{"n":"self"},{"n":"u96"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",114,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",114,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",114,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",114,{"o":{"n":"self"}}],[11,"fmt","","",115,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",115,{"i":[{"n":"self"}],"o":{"n":"u97"}}],[11,"hash","","",115,null],[11,"eq","","",115,{"i":[{"n":"self"},{"n":"u97"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",115,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",115,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",115,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",115,{"o":{"n":"self"}}],[11,"fmt","","",116,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",116,{"i":[{"n":"self"}],"o":{"n":"u98"}}],[11,"hash","","",116,null],[11,"eq","","",116,{"i":[{"n":"self"},{"n":"u98"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",116,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",116,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",116,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",116,{"o":{"n":"self"}}],[11,"fmt","","",117,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",117,{"i":[{"n":"self"}],"o":{"n":"u99"}}],[11,"hash","","",117,null],[11,"eq","","",117,{"i":[{"n":"self"},{"n":"u99"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",117,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",117,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",117,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",117,{"o":{"n":"self"}}],[11,"fmt","","",118,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",118,{"i":[{"n":"self"}],"o":{"n":"u100"}}],[11,"hash","","",118,null],[11,"eq","","",118,{"i":[{"n":"self"},{"n":"u100"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",118,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",118,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",118,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",118,{"o":{"n":"self"}}],[11,"fmt","","",119,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",119,{"i":[{"n":"self"}],"o":{"n":"u101"}}],[11,"hash","","",119,null],[11,"eq","","",119,{"i":[{"n":"self"},{"n":"u101"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",119,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",119,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",119,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",119,{"o":{"n":"self"}}],[11,"fmt","","",120,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",120,{"i":[{"n":"self"}],"o":{"n":"u102"}}],[11,"hash","","",120,null],[11,"eq","","",120,{"i":[{"n":"self"},{"n":"u102"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",120,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",120,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",120,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",120,{"o":{"n":"self"}}],[11,"fmt","","",121,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",121,{"i":[{"n":"self"}],"o":{"n":"u103"}}],[11,"hash","","",121,null],[11,"eq","","",121,{"i":[{"n":"self"},{"n":"u103"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",121,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",121,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",121,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",121,{"o":{"n":"self"}}],[11,"fmt","","",122,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",122,{"i":[{"n":"self"}],"o":{"n":"u104"}}],[11,"hash","","",122,null],[11,"eq","","",122,{"i":[{"n":"self"},{"n":"u104"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",122,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",122,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",122,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",122,{"o":{"n":"self"}}],[11,"fmt","","",123,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",123,{"i":[{"n":"self"}],"o":{"n":"u105"}}],[11,"hash","","",123,null],[11,"eq","","",123,{"i":[{"n":"self"},{"n":"u105"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",123,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",123,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",123,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",123,{"o":{"n":"self"}}],[11,"fmt","","",124,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",124,{"i":[{"n":"self"}],"o":{"n":"u106"}}],[11,"hash","","",124,null],[11,"eq","","",124,{"i":[{"n":"self"},{"n":"u106"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",124,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",124,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",124,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",124,{"o":{"n":"self"}}],[11,"fmt","","",125,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",125,{"i":[{"n":"self"}],"o":{"n":"u107"}}],[11,"hash","","",125,null],[11,"eq","","",125,{"i":[{"n":"self"},{"n":"u107"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",125,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",125,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",125,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",125,{"o":{"n":"self"}}],[11,"fmt","","",126,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",126,{"i":[{"n":"self"}],"o":{"n":"u108"}}],[11,"hash","","",126,null],[11,"eq","","",126,{"i":[{"n":"self"},{"n":"u108"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",126,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",126,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",126,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",126,{"o":{"n":"self"}}],[11,"fmt","","",127,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",127,{"i":[{"n":"self"}],"o":{"n":"u109"}}],[11,"hash","","",127,null],[11,"eq","","",127,{"i":[{"n":"self"},{"n":"u109"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",127,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",127,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",127,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",127,{"o":{"n":"self"}}],[11,"fmt","","",128,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",128,{"i":[{"n":"self"}],"o":{"n":"u110"}}],[11,"hash","","",128,null],[11,"eq","","",128,{"i":[{"n":"self"},{"n":"u110"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",128,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",128,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",128,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",128,{"o":{"n":"self"}}],[11,"fmt","","",129,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",129,{"i":[{"n":"self"}],"o":{"n":"u111"}}],[11,"hash","","",129,null],[11,"eq","","",129,{"i":[{"n":"self"},{"n":"u111"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",129,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",129,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",129,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",129,{"o":{"n":"self"}}],[11,"fmt","","",130,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",130,{"i":[{"n":"self"}],"o":{"n":"u112"}}],[11,"hash","","",130,null],[11,"eq","","",130,{"i":[{"n":"self"},{"n":"u112"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",130,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",130,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",130,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",130,{"o":{"n":"self"}}],[11,"fmt","","",131,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",131,{"i":[{"n":"self"}],"o":{"n":"u113"}}],[11,"hash","","",131,null],[11,"eq","","",131,{"i":[{"n":"self"},{"n":"u113"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",131,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",131,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",131,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",131,{"o":{"n":"self"}}],[11,"fmt","","",132,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",132,{"i":[{"n":"self"}],"o":{"n":"u114"}}],[11,"hash","","",132,null],[11,"eq","","",132,{"i":[{"n":"self"},{"n":"u114"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",132,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",132,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",132,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",132,{"o":{"n":"self"}}],[11,"fmt","","",133,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",133,{"i":[{"n":"self"}],"o":{"n":"u115"}}],[11,"hash","","",133,null],[11,"eq","","",133,{"i":[{"n":"self"},{"n":"u115"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",133,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",133,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",133,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",133,{"o":{"n":"self"}}],[11,"fmt","","",134,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",134,{"i":[{"n":"self"}],"o":{"n":"u116"}}],[11,"hash","","",134,null],[11,"eq","","",134,{"i":[{"n":"self"},{"n":"u116"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",134,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",134,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",134,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",134,{"o":{"n":"self"}}],[11,"fmt","","",135,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",135,{"i":[{"n":"self"}],"o":{"n":"u117"}}],[11,"hash","","",135,null],[11,"eq","","",135,{"i":[{"n":"self"},{"n":"u117"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",135,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",135,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",135,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",135,{"o":{"n":"self"}}],[11,"fmt","","",136,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",136,{"i":[{"n":"self"}],"o":{"n":"u118"}}],[11,"hash","","",136,null],[11,"eq","","",136,{"i":[{"n":"self"},{"n":"u118"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",136,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",136,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",136,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",136,{"o":{"n":"self"}}],[11,"fmt","","",137,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",137,{"i":[{"n":"self"}],"o":{"n":"u119"}}],[11,"hash","","",137,null],[11,"eq","","",137,{"i":[{"n":"self"},{"n":"u119"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",137,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",137,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",137,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",137,{"o":{"n":"self"}}],[11,"fmt","","",138,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",138,{"i":[{"n":"self"}],"o":{"n":"u120"}}],[11,"hash","","",138,null],[11,"eq","","",138,{"i":[{"n":"self"},{"n":"u120"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",138,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",138,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",138,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",138,{"o":{"n":"self"}}],[11,"fmt","","",139,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",139,{"i":[{"n":"self"}],"o":{"n":"u121"}}],[11,"hash","","",139,null],[11,"eq","","",139,{"i":[{"n":"self"},{"n":"u121"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",139,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",139,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",139,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",139,{"o":{"n":"self"}}],[11,"fmt","","",140,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",140,{"i":[{"n":"self"}],"o":{"n":"u122"}}],[11,"hash","","",140,null],[11,"eq","","",140,{"i":[{"n":"self"},{"n":"u122"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",140,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",140,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",140,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",140,{"o":{"n":"self"}}],[11,"fmt","","",141,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",141,{"i":[{"n":"self"}],"o":{"n":"u123"}}],[11,"hash","","",141,null],[11,"eq","","",141,{"i":[{"n":"self"},{"n":"u123"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",141,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",141,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",141,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",141,{"o":{"n":"self"}}],[11,"fmt","","",142,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",142,{"i":[{"n":"self"}],"o":{"n":"u124"}}],[11,"hash","","",142,null],[11,"eq","","",142,{"i":[{"n":"self"},{"n":"u124"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",142,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",142,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",142,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",142,{"o":{"n":"self"}}],[11,"fmt","","",143,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",143,{"i":[{"n":"self"}],"o":{"n":"u125"}}],[11,"hash","","",143,null],[11,"eq","","",143,{"i":[{"n":"self"},{"n":"u125"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",143,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",143,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",143,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",143,{"o":{"n":"self"}}],[11,"fmt","","",144,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",144,{"i":[{"n":"self"}],"o":{"n":"u126"}}],[11,"hash","","",144,null],[11,"eq","","",144,{"i":[{"n":"self"},{"n":"u126"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",144,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",144,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",144,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",144,{"o":{"n":"self"}}],[11,"fmt","","",145,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",145,{"i":[{"n":"self"}],"o":{"n":"u127"}}],[11,"hash","","",145,null],[11,"eq","","",145,{"i":[{"n":"self"},{"n":"u127"}],"o":{"n":"bool"}}],[11,"try_to_usize","","",145,{"o":{"g":["usize"],"n":"option"}}],[11,"from_usize","","",145,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"value","","",145,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"name","","",145,{"o":{"n":"self"}}],[0,"constraint","nalgebra::core","Compatibility constraints between matrix shapes, e.g., for addition or multiplication.",null,null],[3,"ShapeConstraint","nalgebra::core::constraint","A type used in `where` clauses for enforcing constraints.",null,null],[8,"AreMultipliable","","Constraints `C1` and `R2` to be equivalent.",null,null],[8,"DimEq","","Constraints `D1` and `D2` to be equivalent.",null,null],[16,"Representative","","This is either equal to `D1` or `D2`, always choosing the one (if any) which is a type-level constant.",146,null],[8,"SameNumberOfRows","","Constraints `D1` and `D2` to be equivalent. They are both assumed to be the number of rows of a matrix.",null,null],[16,"Representative","","This is either equal to `D1` or `D2`, always choosing the one (if any) which is a type-level constant.",147,null],[8,"SameNumberOfColumns","","Constraints `D1` and `D2` to be equivalent. They are both assumed to be the number of columns of a matrix.",null,null],[16,"Representative","","This is either equal to `D1` or `D2`, always choosing the one (if any) which is a type-level constant.",148,null],[8,"SameDimension","","Constraints D1 and D2 to be equivalent, where they both designate dimensions of algebraic entities (e.g. square matrices).",null,null],[16,"Representative","","This is either equal to `D1` or `D2`, always choosing the one (if any) which is a type-level constant.",149,null],[0,"allocator","nalgebra::core","Abstract definition of a matrix data storage allocator.",null,null],[6,"SameShapeR","nalgebra::core::allocator","The number of rows of the result of a componentwise operation on two matrices.",null,null],[6,"SameShapeC","","The number of columns of the result of a componentwise operation on two matrices.",null,null],[8,"Allocator","","A matrix allocator of a memory buffer that may contain `R::to_usize() * C::to_usize()` elements of type `N`.",null,null],[16,"Buffer","","The type of buffer this allocator can instanciate.",150,null],[10,"allocate_uninitialized","","Allocates a buffer with the given number of rows and columns without initializing its content.",150,null],[10,"allocate_from_iterator","","Allocates a buffer initialized with the content of the given iterator.",150,null],[8,"Reallocator","","A matrix reallocator. Changes the size of the memory buffer that initially contains (RFrom Ã— CFrom) elements to a smaller or larger size (RTo, CTo).",null,null],[10,"reallocate_copy","","Reallocates a buffer of shape `(RTo, CTo)`, possibly reusing a previously allocated buffer `buf`. Data stored by `buf` are linearly copied to the output:",151,null],[8,"SameShapeAllocator","","Restricts the given number of rows and columns to be respectively the same.",null,null],[8,"SameShapeVectorAllocator","","Restricts the given number of rows to be equal.",null,null],[0,"storage","nalgebra::core","Abstract definition of a matrix data storage.",null,null],[6,"SameShapeStorage","nalgebra::core::storage","The data storage for the sum of two matrices with dimensions `(R1, C1)` and `(R2, C2)`.",null,null],[6,"Owned","","The owned data storage that can be allocated from `S`.",null,null],[6,"RStride","","The row-stride of the owned data storage for a buffer of dimension `(R, C)`.",null,null],[6,"CStride","","The column-stride of the owned data storage for a buffer of dimension `(R, C)`.",null,null],[8,"Storage","","The trait shared by all matrix data storage.",null,null],[16,"RStride","","The static stride of this storage's rows.",152,null],[16,"CStride","","The static stride of this storage's columns.",152,null],[10,"ptr","","The matrix data pointer.",152,null],[10,"shape","","The dimension of the matrix at run-time. Arr length of zero indicates the additive identity element of any dimension. Must be equal to `Self::dimension()` if it is not `None`.",152,null],[10,"strides","","The spacing between concecutive row elements and consecutive column elements.",152,null],[11,"linear_index","","Compute the index corresponding to the irow-th row and icol-th column of this matrix. The index must be such that the following holds:",152,{"i":[{"n":"self"},{"n":"usize"},{"n":"usize"}],"o":{"n":"usize"}}],[11,"get_address_unchecked_linear","","Gets the address of the i-th matrix component without performing bound-checking.",152,null],[11,"get_address_unchecked","","Gets the address of the i-th matrix component without performing bound-checking.",152,null],[11,"get_unchecked_linear","","Retrieves a reference to the i-th element without bound-checking.",152,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"n"}}],[11,"get_unchecked","","Retrieves a reference to the i-th element without bound-checking.",152,{"i":[{"n":"self"},{"n":"usize"},{"n":"usize"}],"o":{"n":"n"}}],[10,"is_contiguous","","Indicates whether this data buffer stores its elements contiguously.",152,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[10,"as_slice","","Retrieves the data buffer as a contiguous slice.",152,null],[10,"into_owned","","Builds a matrix data storage that does not contain any reference.",152,{"i":[{"n":"self"}],"o":{"n":"owned"}}],[10,"clone_owned","","Clones this data storage to one that does not contain any reference.",152,{"i":[{"n":"self"}],"o":{"n":"owned"}}],[8,"StorageMut","","Trait implemented by matrix data storage that can provide a mutable access to its elements.",null,null],[10,"ptr_mut","","The matrix mutable data pointer.",153,null],[11,"get_address_unchecked_linear_mut","","Gets the mutable address of the i-th matrix component without performing bound-checking.",153,null],[11,"get_address_unchecked_mut","","Gets the mutable address of the i-th matrix component without performing bound-checking.",153,null],[11,"get_unchecked_linear_mut","","Retrieves a mutable reference to the i-th element without bound-checking.",153,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"n"}}],[11,"get_unchecked_mut","","Retrieves a mutable reference to the element at `(irow, icol)` without bound-checking.",153,{"i":[{"n":"self"},{"n":"usize"},{"n":"usize"}],"o":{"n":"n"}}],[11,"swap_unchecked_linear","","Swaps two elements using their linear index without bound-checking.",153,{"i":[{"n":"self"},{"n":"usize"},{"n":"usize"}]}],[11,"swap_unchecked","","Swaps two elements without bound-checking.",153,null],[10,"as_mut_slice","","Retrieves the mutable data buffer as a contiguous slice.",153,null],[8,"ContiguousStorage","","A matrix storage that is stored contiguously in memory.",null,null],[8,"ContiguousStorageMut","","A mutable matrix storage that is stored contiguously in memory.",null,null],[0,"coordinates","nalgebra::core","Structures to which matrices and vector can be auto-dereferenced (through `Deref`) to access components using their names. For example, if `v` is a 3D vector, one can write `v.z` instead of `v[2]`.",null,null],[3,"X","nalgebra::core::coordinates","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"x","","",154,null],[3,"XY","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"x","","",155,null],[12,"y","","",155,null],[3,"XYZ","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"x","","",156,null],[12,"y","","",156,null],[12,"z","","",156,null],[3,"XYZW","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"x","","",157,null],[12,"y","","",157,null],[12,"z","","",157,null],[12,"w","","",157,null],[3,"XYZWA","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"x","","",158,null],[12,"y","","",158,null],[12,"z","","",158,null],[12,"w","","",158,null],[12,"a","","",158,null],[3,"XYZWAB","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"x","","",159,null],[12,"y","","",159,null],[12,"z","","",159,null],[12,"w","","",159,null],[12,"a","","",159,null],[12,"b","","",159,null],[3,"IJKW","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"i","","",160,null],[12,"j","","",160,null],[12,"k","","",160,null],[12,"w","","",160,null],[3,"M2x2","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"m11","","",161,null],[12,"m21","","",161,null],[12,"m12","","",161,null],[12,"m22","","",161,null],[3,"M2x3","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"m11","","",162,null],[12,"m21","","",162,null],[12,"m12","","",162,null],[12,"m22","","",162,null],[12,"m13","","",162,null],[12,"m23","","",162,null],[3,"M2x4","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"m11","","",163,null],[12,"m21","","",163,null],[12,"m12","","",163,null],[12,"m22","","",163,null],[12,"m13","","",163,null],[12,"m23","","",163,null],[12,"m14","","",163,null],[12,"m24","","",163,null],[3,"M2x5","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"m11","","",164,null],[12,"m21","","",164,null],[12,"m12","","",164,null],[12,"m22","","",164,null],[12,"m13","","",164,null],[12,"m23","","",164,null],[12,"m14","","",164,null],[12,"m24","","",164,null],[12,"m15","","",164,null],[12,"m25","","",164,null],[3,"M2x6","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"m11","","",165,null],[12,"m21","","",165,null],[12,"m12","","",165,null],[12,"m22","","",165,null],[12,"m13","","",165,null],[12,"m23","","",165,null],[12,"m14","","",165,null],[12,"m24","","",165,null],[12,"m15","","",165,null],[12,"m25","","",165,null],[12,"m16","","",165,null],[12,"m26","","",165,null],[3,"M3x2","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"m11","","",166,null],[12,"m21","","",166,null],[12,"m31","","",166,null],[12,"m12","","",166,null],[12,"m22","","",166,null],[12,"m32","","",166,null],[3,"M3x3","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"m11","","",167,null],[12,"m21","","",167,null],[12,"m31","","",167,null],[12,"m12","","",167,null],[12,"m22","","",167,null],[12,"m32","","",167,null],[12,"m13","","",167,null],[12,"m23","","",167,null],[12,"m33","","",167,null],[3,"M3x4","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"m11","","",168,null],[12,"m21","","",168,null],[12,"m31","","",168,null],[12,"m12","","",168,null],[12,"m22","","",168,null],[12,"m32","","",168,null],[12,"m13","","",168,null],[12,"m23","","",168,null],[12,"m33","","",168,null],[12,"m14","","",168,null],[12,"m24","","",168,null],[12,"m34","","",168,null],[3,"M3x5","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"m11","","",169,null],[12,"m21","","",169,null],[12,"m31","","",169,null],[12,"m12","","",169,null],[12,"m22","","",169,null],[12,"m32","","",169,null],[12,"m13","","",169,null],[12,"m23","","",169,null],[12,"m33","","",169,null],[12,"m14","","",169,null],[12,"m24","","",169,null],[12,"m34","","",169,null],[12,"m15","","",169,null],[12,"m25","","",169,null],[12,"m35","","",169,null],[3,"M3x6","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"m11","","",170,null],[12,"m21","","",170,null],[12,"m31","","",170,null],[12,"m12","","",170,null],[12,"m22","","",170,null],[12,"m32","","",170,null],[12,"m13","","",170,null],[12,"m23","","",170,null],[12,"m33","","",170,null],[12,"m14","","",170,null],[12,"m24","","",170,null],[12,"m34","","",170,null],[12,"m15","","",170,null],[12,"m25","","",170,null],[12,"m35","","",170,null],[12,"m16","","",170,null],[12,"m26","","",170,null],[12,"m36","","",170,null],[3,"M4x2","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"m11","","",171,null],[12,"m21","","",171,null],[12,"m31","","",171,null],[12,"m41","","",171,null],[12,"m12","","",171,null],[12,"m22","","",171,null],[12,"m32","","",171,null],[12,"m42","","",171,null],[3,"M4x3","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"m11","","",172,null],[12,"m21","","",172,null],[12,"m31","","",172,null],[12,"m41","","",172,null],[12,"m12","","",172,null],[12,"m22","","",172,null],[12,"m32","","",172,null],[12,"m42","","",172,null],[12,"m13","","",172,null],[12,"m23","","",172,null],[12,"m33","","",172,null],[12,"m43","","",172,null],[3,"M4x4","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"m11","","",173,null],[12,"m21","","",173,null],[12,"m31","","",173,null],[12,"m41","","",173,null],[12,"m12","","",173,null],[12,"m22","","",173,null],[12,"m32","","",173,null],[12,"m42","","",173,null],[12,"m13","","",173,null],[12,"m23","","",173,null],[12,"m33","","",173,null],[12,"m43","","",173,null],[12,"m14","","",173,null],[12,"m24","","",173,null],[12,"m34","","",173,null],[12,"m44","","",173,null],[3,"M4x5","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"m11","","",174,null],[12,"m21","","",174,null],[12,"m31","","",174,null],[12,"m41","","",174,null],[12,"m12","","",174,null],[12,"m22","","",174,null],[12,"m32","","",174,null],[12,"m42","","",174,null],[12,"m13","","",174,null],[12,"m23","","",174,null],[12,"m33","","",174,null],[12,"m43","","",174,null],[12,"m14","","",174,null],[12,"m24","","",174,null],[12,"m34","","",174,null],[12,"m44","","",174,null],[12,"m15","","",174,null],[12,"m25","","",174,null],[12,"m35","","",174,null],[12,"m45","","",174,null],[3,"M4x6","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"m11","","",175,null],[12,"m21","","",175,null],[12,"m31","","",175,null],[12,"m41","","",175,null],[12,"m12","","",175,null],[12,"m22","","",175,null],[12,"m32","","",175,null],[12,"m42","","",175,null],[12,"m13","","",175,null],[12,"m23","","",175,null],[12,"m33","","",175,null],[12,"m43","","",175,null],[12,"m14","","",175,null],[12,"m24","","",175,null],[12,"m34","","",175,null],[12,"m44","","",175,null],[12,"m15","","",175,null],[12,"m25","","",175,null],[12,"m35","","",175,null],[12,"m45","","",175,null],[12,"m16","","",175,null],[12,"m26","","",175,null],[12,"m36","","",175,null],[12,"m46","","",175,null],[3,"M5x2","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"m11","","",176,null],[12,"m21","","",176,null],[12,"m31","","",176,null],[12,"m41","","",176,null],[12,"m51","","",176,null],[12,"m12","","",176,null],[12,"m22","","",176,null],[12,"m32","","",176,null],[12,"m42","","",176,null],[12,"m52","","",176,null],[3,"M5x3","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"m11","","",177,null],[12,"m21","","",177,null],[12,"m31","","",177,null],[12,"m41","","",177,null],[12,"m51","","",177,null],[12,"m12","","",177,null],[12,"m22","","",177,null],[12,"m32","","",177,null],[12,"m42","","",177,null],[12,"m52","","",177,null],[12,"m13","","",177,null],[12,"m23","","",177,null],[12,"m33","","",177,null],[12,"m43","","",177,null],[12,"m53","","",177,null],[3,"M5x4","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"m11","","",178,null],[12,"m21","","",178,null],[12,"m31","","",178,null],[12,"m41","","",178,null],[12,"m51","","",178,null],[12,"m12","","",178,null],[12,"m22","","",178,null],[12,"m32","","",178,null],[12,"m42","","",178,null],[12,"m52","","",178,null],[12,"m13","","",178,null],[12,"m23","","",178,null],[12,"m33","","",178,null],[12,"m43","","",178,null],[12,"m53","","",178,null],[12,"m14","","",178,null],[12,"m24","","",178,null],[12,"m34","","",178,null],[12,"m44","","",178,null],[12,"m54","","",178,null],[3,"M5x5","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"m11","","",179,null],[12,"m21","","",179,null],[12,"m31","","",179,null],[12,"m41","","",179,null],[12,"m51","","",179,null],[12,"m12","","",179,null],[12,"m22","","",179,null],[12,"m32","","",179,null],[12,"m42","","",179,null],[12,"m52","","",179,null],[12,"m13","","",179,null],[12,"m23","","",179,null],[12,"m33","","",179,null],[12,"m43","","",179,null],[12,"m53","","",179,null],[12,"m14","","",179,null],[12,"m24","","",179,null],[12,"m34","","",179,null],[12,"m44","","",179,null],[12,"m54","","",179,null],[12,"m15","","",179,null],[12,"m25","","",179,null],[12,"m35","","",179,null],[12,"m45","","",179,null],[12,"m55","","",179,null],[3,"M5x6","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"m11","","",180,null],[12,"m21","","",180,null],[12,"m31","","",180,null],[12,"m41","","",180,null],[12,"m51","","",180,null],[12,"m12","","",180,null],[12,"m22","","",180,null],[12,"m32","","",180,null],[12,"m42","","",180,null],[12,"m52","","",180,null],[12,"m13","","",180,null],[12,"m23","","",180,null],[12,"m33","","",180,null],[12,"m43","","",180,null],[12,"m53","","",180,null],[12,"m14","","",180,null],[12,"m24","","",180,null],[12,"m34","","",180,null],[12,"m44","","",180,null],[12,"m54","","",180,null],[12,"m15","","",180,null],[12,"m25","","",180,null],[12,"m35","","",180,null],[12,"m45","","",180,null],[12,"m55","","",180,null],[12,"m16","","",180,null],[12,"m26","","",180,null],[12,"m36","","",180,null],[12,"m46","","",180,null],[12,"m56","","",180,null],[3,"M6x2","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"m11","","",181,null],[12,"m21","","",181,null],[12,"m31","","",181,null],[12,"m41","","",181,null],[12,"m51","","",181,null],[12,"m61","","",181,null],[12,"m12","","",181,null],[12,"m22","","",181,null],[12,"m32","","",181,null],[12,"m42","","",181,null],[12,"m52","","",181,null],[12,"m62","","",181,null],[3,"M6x3","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"m11","","",182,null],[12,"m21","","",182,null],[12,"m31","","",182,null],[12,"m41","","",182,null],[12,"m51","","",182,null],[12,"m61","","",182,null],[12,"m12","","",182,null],[12,"m22","","",182,null],[12,"m32","","",182,null],[12,"m42","","",182,null],[12,"m52","","",182,null],[12,"m62","","",182,null],[12,"m13","","",182,null],[12,"m23","","",182,null],[12,"m33","","",182,null],[12,"m43","","",182,null],[12,"m53","","",182,null],[12,"m63","","",182,null],[3,"M6x4","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"m11","","",183,null],[12,"m21","","",183,null],[12,"m31","","",183,null],[12,"m41","","",183,null],[12,"m51","","",183,null],[12,"m61","","",183,null],[12,"m12","","",183,null],[12,"m22","","",183,null],[12,"m32","","",183,null],[12,"m42","","",183,null],[12,"m52","","",183,null],[12,"m62","","",183,null],[12,"m13","","",183,null],[12,"m23","","",183,null],[12,"m33","","",183,null],[12,"m43","","",183,null],[12,"m53","","",183,null],[12,"m63","","",183,null],[12,"m14","","",183,null],[12,"m24","","",183,null],[12,"m34","","",183,null],[12,"m44","","",183,null],[12,"m54","","",183,null],[12,"m64","","",183,null],[3,"M6x5","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"m11","","",184,null],[12,"m21","","",184,null],[12,"m31","","",184,null],[12,"m41","","",184,null],[12,"m51","","",184,null],[12,"m61","","",184,null],[12,"m12","","",184,null],[12,"m22","","",184,null],[12,"m32","","",184,null],[12,"m42","","",184,null],[12,"m52","","",184,null],[12,"m62","","",184,null],[12,"m13","","",184,null],[12,"m23","","",184,null],[12,"m33","","",184,null],[12,"m43","","",184,null],[12,"m53","","",184,null],[12,"m63","","",184,null],[12,"m14","","",184,null],[12,"m24","","",184,null],[12,"m34","","",184,null],[12,"m44","","",184,null],[12,"m54","","",184,null],[12,"m64","","",184,null],[12,"m15","","",184,null],[12,"m25","","",184,null],[12,"m35","","",184,null],[12,"m45","","",184,null],[12,"m55","","",184,null],[12,"m65","","",184,null],[3,"M6x6","","Data structure used to provide access to matrix and vector coordinates with the dot notation, e.g., `v.x` is the same as `v[0]` for a vector.",null,null],[12,"m11","","",185,null],[12,"m21","","",185,null],[12,"m31","","",185,null],[12,"m41","","",185,null],[12,"m51","","",185,null],[12,"m61","","",185,null],[12,"m12","","",185,null],[12,"m22","","",185,null],[12,"m32","","",185,null],[12,"m42","","",185,null],[12,"m52","","",185,null],[12,"m62","","",185,null],[12,"m13","","",185,null],[12,"m23","","",185,null],[12,"m33","","",185,null],[12,"m43","","",185,null],[12,"m53","","",185,null],[12,"m63","","",185,null],[12,"m14","","",185,null],[12,"m24","","",185,null],[12,"m34","","",185,null],[12,"m44","","",185,null],[12,"m54","","",185,null],[12,"m64","","",185,null],[12,"m15","","",185,null],[12,"m25","","",185,null],[12,"m35","","",185,null],[12,"m45","","",185,null],[12,"m55","","",185,null],[12,"m65","","",185,null],[12,"m16","","",185,null],[12,"m26","","",185,null],[12,"m36","","",185,null],[12,"m46","","",185,null],[12,"m56","","",185,null],[12,"m66","","",185,null],[11,"eq","","",154,{"i":[{"n":"self"},{"n":"x"}],"o":{"n":"bool"}}],[11,"ne","","",154,{"i":[{"n":"self"},{"n":"x"}],"o":{"n":"bool"}}],[11,"clone","","",154,{"i":[{"n":"self"}],"o":{"n":"x"}}],[11,"hash","","",154,null],[11,"fmt","","",154,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",155,{"i":[{"n":"self"},{"n":"xy"}],"o":{"n":"bool"}}],[11,"ne","","",155,{"i":[{"n":"self"},{"n":"xy"}],"o":{"n":"bool"}}],[11,"clone","","",155,{"i":[{"n":"self"}],"o":{"n":"xy"}}],[11,"hash","","",155,null],[11,"fmt","","",155,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",156,{"i":[{"n":"self"},{"n":"xyz"}],"o":{"n":"bool"}}],[11,"ne","","",156,{"i":[{"n":"self"},{"n":"xyz"}],"o":{"n":"bool"}}],[11,"clone","","",156,{"i":[{"n":"self"}],"o":{"n":"xyz"}}],[11,"hash","","",156,null],[11,"fmt","","",156,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",157,{"i":[{"n":"self"},{"n":"xyzw"}],"o":{"n":"bool"}}],[11,"ne","","",157,{"i":[{"n":"self"},{"n":"xyzw"}],"o":{"n":"bool"}}],[11,"clone","","",157,{"i":[{"n":"self"}],"o":{"n":"xyzw"}}],[11,"hash","","",157,null],[11,"fmt","","",157,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",158,{"i":[{"n":"self"},{"n":"xyzwa"}],"o":{"n":"bool"}}],[11,"ne","","",158,{"i":[{"n":"self"},{"n":"xyzwa"}],"o":{"n":"bool"}}],[11,"clone","","",158,{"i":[{"n":"self"}],"o":{"n":"xyzwa"}}],[11,"hash","","",158,null],[11,"fmt","","",158,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",159,{"i":[{"n":"self"},{"n":"xyzwab"}],"o":{"n":"bool"}}],[11,"ne","","",159,{"i":[{"n":"self"},{"n":"xyzwab"}],"o":{"n":"bool"}}],[11,"clone","","",159,{"i":[{"n":"self"}],"o":{"n":"xyzwab"}}],[11,"hash","","",159,null],[11,"fmt","","",159,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",160,{"i":[{"n":"self"},{"n":"ijkw"}],"o":{"n":"bool"}}],[11,"ne","","",160,{"i":[{"n":"self"},{"n":"ijkw"}],"o":{"n":"bool"}}],[11,"clone","","",160,{"i":[{"n":"self"}],"o":{"n":"ijkw"}}],[11,"hash","","",160,null],[11,"fmt","","",160,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",161,{"i":[{"n":"self"},{"n":"m2x2"}],"o":{"n":"bool"}}],[11,"ne","","",161,{"i":[{"n":"self"},{"n":"m2x2"}],"o":{"n":"bool"}}],[11,"clone","","",161,{"i":[{"n":"self"}],"o":{"n":"m2x2"}}],[11,"hash","","",161,null],[11,"fmt","","",161,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",162,{"i":[{"n":"self"},{"n":"m2x3"}],"o":{"n":"bool"}}],[11,"ne","","",162,{"i":[{"n":"self"},{"n":"m2x3"}],"o":{"n":"bool"}}],[11,"clone","","",162,{"i":[{"n":"self"}],"o":{"n":"m2x3"}}],[11,"hash","","",162,null],[11,"fmt","","",162,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",163,{"i":[{"n":"self"},{"n":"m2x4"}],"o":{"n":"bool"}}],[11,"ne","","",163,{"i":[{"n":"self"},{"n":"m2x4"}],"o":{"n":"bool"}}],[11,"clone","","",163,{"i":[{"n":"self"}],"o":{"n":"m2x4"}}],[11,"hash","","",163,null],[11,"fmt","","",163,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",164,{"i":[{"n":"self"},{"n":"m2x5"}],"o":{"n":"bool"}}],[11,"ne","","",164,{"i":[{"n":"self"},{"n":"m2x5"}],"o":{"n":"bool"}}],[11,"clone","","",164,{"i":[{"n":"self"}],"o":{"n":"m2x5"}}],[11,"hash","","",164,null],[11,"fmt","","",164,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",165,{"i":[{"n":"self"},{"n":"m2x6"}],"o":{"n":"bool"}}],[11,"ne","","",165,{"i":[{"n":"self"},{"n":"m2x6"}],"o":{"n":"bool"}}],[11,"clone","","",165,{"i":[{"n":"self"}],"o":{"n":"m2x6"}}],[11,"hash","","",165,null],[11,"fmt","","",165,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",166,{"i":[{"n":"self"},{"n":"m3x2"}],"o":{"n":"bool"}}],[11,"ne","","",166,{"i":[{"n":"self"},{"n":"m3x2"}],"o":{"n":"bool"}}],[11,"clone","","",166,{"i":[{"n":"self"}],"o":{"n":"m3x2"}}],[11,"hash","","",166,null],[11,"fmt","","",166,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",167,{"i":[{"n":"self"},{"n":"m3x3"}],"o":{"n":"bool"}}],[11,"ne","","",167,{"i":[{"n":"self"},{"n":"m3x3"}],"o":{"n":"bool"}}],[11,"clone","","",167,{"i":[{"n":"self"}],"o":{"n":"m3x3"}}],[11,"hash","","",167,null],[11,"fmt","","",167,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",168,{"i":[{"n":"self"},{"n":"m3x4"}],"o":{"n":"bool"}}],[11,"ne","","",168,{"i":[{"n":"self"},{"n":"m3x4"}],"o":{"n":"bool"}}],[11,"clone","","",168,{"i":[{"n":"self"}],"o":{"n":"m3x4"}}],[11,"hash","","",168,null],[11,"fmt","","",168,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",169,{"i":[{"n":"self"},{"n":"m3x5"}],"o":{"n":"bool"}}],[11,"ne","","",169,{"i":[{"n":"self"},{"n":"m3x5"}],"o":{"n":"bool"}}],[11,"clone","","",169,{"i":[{"n":"self"}],"o":{"n":"m3x5"}}],[11,"hash","","",169,null],[11,"fmt","","",169,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",170,{"i":[{"n":"self"},{"n":"m3x6"}],"o":{"n":"bool"}}],[11,"ne","","",170,{"i":[{"n":"self"},{"n":"m3x6"}],"o":{"n":"bool"}}],[11,"clone","","",170,{"i":[{"n":"self"}],"o":{"n":"m3x6"}}],[11,"hash","","",170,null],[11,"fmt","","",170,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",171,{"i":[{"n":"self"},{"n":"m4x2"}],"o":{"n":"bool"}}],[11,"ne","","",171,{"i":[{"n":"self"},{"n":"m4x2"}],"o":{"n":"bool"}}],[11,"clone","","",171,{"i":[{"n":"self"}],"o":{"n":"m4x2"}}],[11,"hash","","",171,null],[11,"fmt","","",171,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",172,{"i":[{"n":"self"},{"n":"m4x3"}],"o":{"n":"bool"}}],[11,"ne","","",172,{"i":[{"n":"self"},{"n":"m4x3"}],"o":{"n":"bool"}}],[11,"clone","","",172,{"i":[{"n":"self"}],"o":{"n":"m4x3"}}],[11,"hash","","",172,null],[11,"fmt","","",172,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",173,{"i":[{"n":"self"},{"n":"m4x4"}],"o":{"n":"bool"}}],[11,"ne","","",173,{"i":[{"n":"self"},{"n":"m4x4"}],"o":{"n":"bool"}}],[11,"clone","","",173,{"i":[{"n":"self"}],"o":{"n":"m4x4"}}],[11,"hash","","",173,null],[11,"fmt","","",173,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",174,{"i":[{"n":"self"},{"n":"m4x5"}],"o":{"n":"bool"}}],[11,"ne","","",174,{"i":[{"n":"self"},{"n":"m4x5"}],"o":{"n":"bool"}}],[11,"clone","","",174,{"i":[{"n":"self"}],"o":{"n":"m4x5"}}],[11,"hash","","",174,null],[11,"fmt","","",174,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",175,{"i":[{"n":"self"},{"n":"m4x6"}],"o":{"n":"bool"}}],[11,"ne","","",175,{"i":[{"n":"self"},{"n":"m4x6"}],"o":{"n":"bool"}}],[11,"clone","","",175,{"i":[{"n":"self"}],"o":{"n":"m4x6"}}],[11,"hash","","",175,null],[11,"fmt","","",175,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",176,{"i":[{"n":"self"},{"n":"m5x2"}],"o":{"n":"bool"}}],[11,"ne","","",176,{"i":[{"n":"self"},{"n":"m5x2"}],"o":{"n":"bool"}}],[11,"clone","","",176,{"i":[{"n":"self"}],"o":{"n":"m5x2"}}],[11,"hash","","",176,null],[11,"fmt","","",176,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",177,{"i":[{"n":"self"},{"n":"m5x3"}],"o":{"n":"bool"}}],[11,"ne","","",177,{"i":[{"n":"self"},{"n":"m5x3"}],"o":{"n":"bool"}}],[11,"clone","","",177,{"i":[{"n":"self"}],"o":{"n":"m5x3"}}],[11,"hash","","",177,null],[11,"fmt","","",177,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",178,{"i":[{"n":"self"},{"n":"m5x4"}],"o":{"n":"bool"}}],[11,"ne","","",178,{"i":[{"n":"self"},{"n":"m5x4"}],"o":{"n":"bool"}}],[11,"clone","","",178,{"i":[{"n":"self"}],"o":{"n":"m5x4"}}],[11,"hash","","",178,null],[11,"fmt","","",178,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",179,{"i":[{"n":"self"},{"n":"m5x5"}],"o":{"n":"bool"}}],[11,"ne","","",179,{"i":[{"n":"self"},{"n":"m5x5"}],"o":{"n":"bool"}}],[11,"clone","","",179,{"i":[{"n":"self"}],"o":{"n":"m5x5"}}],[11,"hash","","",179,null],[11,"fmt","","",179,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",180,{"i":[{"n":"self"},{"n":"m5x6"}],"o":{"n":"bool"}}],[11,"ne","","",180,{"i":[{"n":"self"},{"n":"m5x6"}],"o":{"n":"bool"}}],[11,"clone","","",180,{"i":[{"n":"self"}],"o":{"n":"m5x6"}}],[11,"hash","","",180,null],[11,"fmt","","",180,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",181,{"i":[{"n":"self"},{"n":"m6x2"}],"o":{"n":"bool"}}],[11,"ne","","",181,{"i":[{"n":"self"},{"n":"m6x2"}],"o":{"n":"bool"}}],[11,"clone","","",181,{"i":[{"n":"self"}],"o":{"n":"m6x2"}}],[11,"hash","","",181,null],[11,"fmt","","",181,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",182,{"i":[{"n":"self"},{"n":"m6x3"}],"o":{"n":"bool"}}],[11,"ne","","",182,{"i":[{"n":"self"},{"n":"m6x3"}],"o":{"n":"bool"}}],[11,"clone","","",182,{"i":[{"n":"self"}],"o":{"n":"m6x3"}}],[11,"hash","","",182,null],[11,"fmt","","",182,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",183,{"i":[{"n":"self"},{"n":"m6x4"}],"o":{"n":"bool"}}],[11,"ne","","",183,{"i":[{"n":"self"},{"n":"m6x4"}],"o":{"n":"bool"}}],[11,"clone","","",183,{"i":[{"n":"self"}],"o":{"n":"m6x4"}}],[11,"hash","","",183,null],[11,"fmt","","",183,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",184,{"i":[{"n":"self"},{"n":"m6x5"}],"o":{"n":"bool"}}],[11,"ne","","",184,{"i":[{"n":"self"},{"n":"m6x5"}],"o":{"n":"bool"}}],[11,"clone","","",184,{"i":[{"n":"self"}],"o":{"n":"m6x5"}}],[11,"hash","","",184,null],[11,"fmt","","",184,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",185,{"i":[{"n":"self"},{"n":"m6x6"}],"o":{"n":"bool"}}],[11,"ne","","",185,{"i":[{"n":"self"},{"n":"m6x6"}],"o":{"n":"bool"}}],[11,"clone","","",185,{"i":[{"n":"self"}],"o":{"n":"m6x6"}}],[11,"hash","","",185,null],[11,"fmt","","",185,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"deref","nalgebra::core","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"index","","",1,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"n"}}],[11,"index","","",1,null],[11,"index_mut","","",1,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"n"}}],[11,"index_mut","","",1,null],[11,"neg","","",1,null],[11,"neg_mut","","Negates `self` in-place.",1,{"i":[{"n":"self"}]}],[11,"add_to","","Equivalent to `self + rhs` but stores the result into `out` to avoid allocations.",1,{"i":[{"n":"self"},{"n":"matrix"},{"n":"matrix"}]}],[11,"add","","",1,null],[11,"add","","",1,null],[11,"add_assign","","",1,{"i":[{"n":"self"},{"n":"matrix"}]}],[11,"add_assign","","",1,{"i":[{"n":"self"},{"n":"matrix"}]}],[11,"sub_to","","Equivalent to `self + rhs` but stores the result into `out` to avoid allocations.",1,{"i":[{"n":"self"},{"n":"matrix"},{"n":"matrix"}]}],[11,"sub","","",1,null],[11,"sub","","",1,null],[11,"sub_assign","","",1,{"i":[{"n":"self"},{"n":"matrix"}]}],[11,"sub_assign","","",1,{"i":[{"n":"self"},{"n":"matrix"}]}],[11,"mul","","",1,null],[11,"mul_assign","","",1,{"i":[{"n":"self"},{"n":"n"}]}],[11,"div","","",1,null],[11,"div_assign","","",1,{"i":[{"n":"self"},{"n":"n"}]}],[11,"mul","","",1,null],[11,"mul","","",1,null],[11,"mul_assign","","",1,{"i":[{"n":"self"},{"n":"matrix"}]}],[11,"mul_assign","","",1,{"i":[{"n":"self"},{"n":"matrix"}]}],[11,"tr_mul","","Equivalent to `self.transpose() * rhs`.",1,{"i":[{"n":"self"},{"n":"matrix"}],"o":{"n":"matrixmn"}}],[11,"tr_mul_to","","Equivalent to `self.transpose() * rhs` but stores the result into `out` to avoid allocations.",1,{"i":[{"n":"self"},{"n":"matrix"},{"n":"matrix"}]}],[11,"mul_to","","Equivalent to `self * rhs` but stores the result into `out` to avoid allocations.",1,{"i":[{"n":"self"},{"n":"matrix"},{"n":"matrix"}]}],[11,"kronecker","","The kronecker product of two matrices (aka. tensor product of the corresponding linear maps).",1,{"i":[{"n":"self"},{"n":"matrix"}],"o":{"g":["dimprod","dimprod"],"n":"matrixmn"}}],[11,"add_scalar","","Adds a scalar to `self`.",1,{"i":[{"n":"self"},{"n":"n"}],"o":{"n":"matrixmn"}}],[11,"add_scalar_mut","","Adds a scalar to `self` in-place.",1,{"i":[{"n":"self"},{"n":"n"}]}],[11,"amax","","Returns the absolute value of the coefficient with the largest absolute value.",1,{"i":[{"n":"self"}],"o":{"n":"n"}}],[11,"amin","","Returns the absolute value of the coefficient with the smallest absolute value.",1,{"i":[{"n":"self"}],"o":{"n":"n"}}],[11,"iamax_full","","Computes the index of the matrix component with the largest absolute value.",1,null],[11,"dot","","The dot product between two matrices (seen as vectors).",1,{"i":[{"n":"self"},{"n":"matrix"}],"o":{"n":"n"}}],[11,"tr_dot","","The dot product between the transpose of `self` and `rhs`.",1,{"i":[{"n":"self"},{"n":"matrix"}],"o":{"n":"n"}}],[11,"ger","","Computes `self = alpha * x * y.transpose() + beta * self`.",1,{"i":[{"n":"self"},{"n":"n"},{"n":"vector"},{"n":"vector"},{"n":"n"}]}],[11,"gemm","","Computes `self = alpha * a * b + beta * self`, where `a, b, self` are matrices. `alpha` and `beta` are scalar.",1,{"i":[{"n":"self"},{"n":"n"},{"n":"matrix"},{"n":"matrix"},{"n":"n"}]}],[11,"gemm_tr","","Computes `self = alpha * a.transpose() * b + beta * self`, where `a, b, self` are matrices. `alpha` and `beta` are scalar.",1,{"i":[{"n":"self"},{"n":"n"},{"n":"matrix"},{"n":"matrix"},{"n":"n"}]}],[11,"ger_symm","","Computes `self = alpha * x * y.transpose() + beta * self`, where `self` is a symmetric matrix.",1,{"i":[{"n":"self"},{"n":"n"},{"n":"vector"},{"n":"vector"},{"n":"n"}]}],[0,"iter","","Matrix iterators.",null,null],[3,"MatrixIter","nalgebra::core::iter","An iterator through a dense matrix with arbitrary strides matrix.",null,null],[3,"MatrixIterMut","","An iterator through a dense matrix with arbitrary strides matrix.",null,null],[11,"new","","Creates a new iterator for the given matrix storage.",186,{"i":[{"n":"s"}],"o":{"n":"matrixiter"}}],[11,"next","","",186,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",186,null],[11,"count","","",186,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"len","","",186,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"new","","Creates a new iterator for the given matrix storage.",187,{"i":[{"n":"s"}],"o":{"n":"matrixitermut"}}],[11,"next","","",187,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",187,null],[11,"count","","",187,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"len","","",187,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[0,"default_allocator","nalgebra::core","The default matrix data storage allocator.",null,null],[3,"DefaultAllocator","nalgebra::core::default_allocator","An allocator based on `GenericArray` and `MatrixVec` for statically-sized and dynamically-sized matrices respectively.",null,null],[11,"allocate_uninitialized","","",188,null],[11,"allocate_from_iterator","","",188,null],[11,"allocate_uninitialized","","",188,null],[11,"allocate_from_iterator","","",188,null],[11,"allocate_uninitialized","","",188,null],[11,"allocate_from_iterator","","",188,null],[11,"reallocate_copy","","",188,null],[11,"reallocate_copy","","",188,{"i":[{"n":"dynamic"},{"n":"cto"},{"n":"matrixarray"}],"o":{"g":["dynamic"],"n":"matrixvec"}}],[11,"reallocate_copy","","",188,{"i":[{"n":"rto"},{"n":"dynamic"},{"n":"matrixarray"}],"o":{"g":["dynamic"],"n":"matrixvec"}}],[11,"reallocate_copy","","",188,{"i":[{"n":"dynamic"},{"n":"cto"},{"g":["dynamic"],"n":"matrixvec"}],"o":{"g":["dynamic"],"n":"matrixvec"}}],[11,"reallocate_copy","","",188,{"i":[{"n":"rto"},{"n":"dynamic"},{"g":["dynamic"],"n":"matrixvec"}],"o":{"g":["dynamic"],"n":"matrixvec"}}],[11,"reallocate_copy","","",188,{"i":[{"n":"dynamic"},{"n":"cto"},{"g":["dynamic"],"n":"matrixvec"}],"o":{"g":["dynamic"],"n":"matrixvec"}}],[11,"reallocate_copy","","",188,{"i":[{"n":"rto"},{"n":"dynamic"},{"g":["dynamic"],"n":"matrixvec"}],"o":{"g":["dynamic"],"n":"matrixvec"}}],[11,"hash","nalgebra::core","",1,null],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"matrix"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"from_data_statically_unchecked","","Creates a new matrix with the given data without statically checking that the matrix dimension matches the storage dimension.",1,{"i":[{"n":"s"}],"o":{"n":"matrix"}}],[11,"from_data","","Creates a new matrix with the given data.",1,{"i":[{"n":"s"}],"o":{"n":"matrix"}}],[11,"len","","The total number of elements of this matrix.",1,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"shape","","The shape of this matrix returned as the tuple (number of rows, number of columns).",1,null],[11,"nrows","","The number of rows of this matrix.",1,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"ncols","","The number of columns of this matrix.",1,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"strides","","The strides (row stride, column stride) of this matrix.",1,null],[11,"iter","","Iterates through this matrix coordinates.",1,{"i":[{"n":"self"}],"o":{"n":"matrixiter"}}],[11,"vector_to_matrix_index","","Computes the row and column coordinates of the i-th element of this matrix seen as a vector.",1,null],[11,"get_unchecked","","Gets a reference to the element of this matrix at row `irow` and column `icol` without bound-checking.",1,{"i":[{"n":"self"},{"n":"usize"},{"n":"usize"}],"o":{"n":"n"}}],[11,"relative_eq","","Tests whether `self` and `rhs` are equal up to a given epsilon.",1,null],[11,"eq","","Tests whether `self` and `rhs` are exactly equal.",1,{"i":[{"n":"self"},{"n":"matrix"}],"o":{"n":"bool"}}],[11,"into_owned","","Moves this matrix into one that owns its data.",1,{"i":[{"n":"self"}],"o":{"n":"matrixmn"}}],[11,"into_owned_sum","","Moves this matrix into one that owns its data. The actual type of the result depends on matrix storage combination rules for addition.",1,{"i":[{"n":"self"}],"o":{"n":"matrixsum"}}],[11,"clone_owned","","Clones this matrix to one that owns its data.",1,{"i":[{"n":"self"}],"o":{"n":"matrixmn"}}],[11,"clone_owned_sum","","Clones this matrix into one that owns its data. The actual type of the result depends on matrix storage combination rules for addition.",1,{"i":[{"n":"self"}],"o":{"n":"matrixsum"}}],[11,"map","","Returns a matrix containing the result of `f` applied to each of its entries.",1,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"matrixmn"}}],[11,"zip_map","","Returns a matrix containing the result of `f` applied to each entries of `self` and `rhs`.",1,{"i":[{"n":"self"},{"n":"matrix"},{"n":"f"}],"o":{"n":"matrixmn"}}],[11,"transpose_to","","Transposes `self` and store the result into `out`.",1,{"i":[{"n":"self"},{"n":"matrix"}]}],[11,"transpose","","Transposes `self`.",1,{"i":[{"n":"self"}],"o":{"n":"matrixmn"}}],[11,"iter_mut","","Mutably iterates through this matrix coordinates.",1,{"i":[{"n":"self"}],"o":{"n":"matrixitermut"}}],[11,"get_unchecked_mut","","Gets a mutable reference to the i-th element of this matrix.",1,{"i":[{"n":"self"},{"n":"usize"},{"n":"usize"}],"o":{"n":"n"}}],[11,"swap_unchecked","","Swaps two entries without bound-checking.",1,null],[11,"swap","","Swaps two entries.",1,null],[11,"copy_from","","Fills this matrix with the content of another one. Both must have the same shape.",1,{"i":[{"n":"self"},{"n":"matrix"}]}],[11,"tr_copy_from","","Fills this matrix with the content of the transpose another one.",1,{"i":[{"n":"self"},{"n":"matrix"}]}],[11,"apply","","Replaces each component of `self` by the result of a closure `f` applied on it.",1,{"i":[{"n":"self"},{"n":"f"}]}],[11,"as_slice","","Extracts a slice containing the entire matrix entries ordered column-by-columns.",1,null],[11,"as_mut_slice","","Extracts a mutable slice containing the entire matrix entries ordered column-by-columns.",1,null],[11,"transpose_mut","","Transposes the square matrix `self` in-place.",1,{"i":[{"n":"self"}]}],[11,"conjugate_transpose_to","","Takes the conjugate and transposes `self` and store the result into `out`.",1,{"i":[{"n":"self"},{"n":"matrix"}]}],[11,"conjugate_transpose","","The conjugate transposition of `self`.",1,{"i":[{"n":"self"}],"o":{"g":["complex"],"n":"matrixmn"}}],[11,"conjugate_transpose_mut","","Sets `self` to its conjugate transpose.",1,{"i":[{"n":"self"}]}],[11,"default_epsilon","","",1,null],[11,"default_max_relative","","",1,null],[11,"default_max_ulps","","",1,{"o":{"n":"u32"}}],[11,"relative_eq","","",1,null],[11,"ulps_eq","","",1,null],[11,"partial_cmp","","",1,{"i":[{"n":"self"},{"n":"self"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",1,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[11,"le","","",1,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[11,"gt","","",1,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[11,"ge","","",1,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"matrix"}],"o":{"n":"bool"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"perp","","The perpendicular product between two 2D column vectors, i.e. `a.x * b.y - a.y * b.x`.",1,{"i":[{"n":"self"},{"n":"matrix"}],"o":{"n":"n"}}],[11,"cross","","The 3D cross product between two vectors.",1,{"i":[{"n":"self"},{"n":"matrix"}],"o":{"n":"matrixcross"}}],[11,"angle","","The smallest angle between two vectors.",1,{"i":[{"n":"self"},{"n":"matrix"}],"o":{"n":"n"}}],[11,"norm_squared","","The squared L2 norm of this vector.",1,{"i":[{"n":"self"}],"o":{"n":"n"}}],[11,"norm","","The L2 norm of this matrix.",1,{"i":[{"n":"self"}],"o":{"n":"n"}}],[11,"normalize","","Returns a normalized version of this matrix.",1,{"i":[{"n":"self"}],"o":{"n":"matrixmn"}}],[11,"try_normalize","","Returns a normalized version of this matrix unless its norm as smaller or equal to `eps`.",1,{"i":[{"n":"self"},{"n":"n"}],"o":{"g":["matrixmn"],"n":"option"}}],[11,"normalize_mut","","Normalizes this matrix in-place and returns its norm.",1,{"i":[{"n":"self"}],"o":{"n":"n"}}],[11,"try_normalize_mut","","Normalizes this matrix in-place or does nothing if its norm is smaller or equal to `eps`.",1,{"i":[{"n":"self"},{"n":"n"}],"o":{"n":"option"}}],[11,"default_epsilon","","",189,null],[11,"default_max_relative","","",189,null],[11,"default_max_ulps","","",189,{"o":{"n":"u32"}}],[11,"relative_eq","","",189,null],[11,"ulps_eq","","",189,null],[11,"is_empty","","Indicates if this is a square matrix.",1,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_square","","Indicates if this is a square matrix.",1,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_identity","","Indicated if this is the identity matrix within a relative error of `eps`.",1,null],[11,"is_orthogonal","","Checks that `Máµ€ Ã— M = Id`.",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"into","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"fmt","","",190,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from_raw_parts","","Create a new matrix slice without bound checking and from a raw pointer.",190,null],[11,"new_unchecked","","Create a new matrix slice without bound checking.",190,null],[11,"new_with_strides_unchecked","","Create a new matrix slice without bound checking.",190,null],[11,"fmt","","",191,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from_raw_parts","","Create a new matrix slice without bound checking and from a raw pointer.",191,null],[11,"new_unchecked","","Create a new matrix slice without bound checking.",191,null],[11,"new_with_strides_unchecked","","Create a new matrix slice without bound checking.",191,null],[11,"clone","","",190,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"ptr","","",190,null],[11,"shape","","",190,null],[11,"strides","","",190,null],[11,"is_contiguous","","",190,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"into_owned","","",190,{"i":[{"n":"self"}],"o":{"n":"owned"}}],[11,"clone_owned","","",190,{"i":[{"n":"self"}],"o":{"n":"owned"}}],[11,"as_slice","","",190,null],[11,"ptr","","",191,null],[11,"shape","","",191,null],[11,"strides","","",191,null],[11,"is_contiguous","","",191,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"into_owned","","",191,{"i":[{"n":"self"}],"o":{"n":"owned"}}],[11,"clone_owned","","",191,{"i":[{"n":"self"}],"o":{"n":"owned"}}],[11,"as_slice","","",191,null],[11,"ptr_mut","","",191,null],[11,"as_mut_slice","","",191,null],[11,"row","","Returns a slice containing the i-th row of this matrix.",1,{"i":[{"n":"self"},{"n":"usize"}],"o":{"g":["u1"],"n":"matrixslice"}}],[11,"row_part","","Returns a slice containing the `n` first elements of the i-th row of this matrix.",1,{"i":[{"n":"self"},{"n":"usize"},{"n":"usize"}],"o":{"g":["u1","dynamic"],"n":"matrixslice"}}],[11,"rows","","Extracts from this matrix a set of consecutive rows.",1,{"i":[{"n":"self"},{"n":"usize"},{"n":"usize"}],"o":{"g":["dynamic"],"n":"matrixslice"}}],[11,"rows_with_step","","Extracts from this matrix a set of consecutive rows regularly skipping `step` rows.",1,{"i":[{"n":"self"},{"n":"usize"},{"n":"usize"},{"n":"usize"}],"o":{"g":["dynamic","dynamic"],"n":"matrixslice"}}],[11,"fixed_rows","","Extracts a compile-time number of consecutive rows from this matrix.",1,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"matrixslice"}}],[11,"fixed_rows_with_step","","Extracts from this matrix a compile-time number of rows regularly skipping `step` rows.",1,{"i":[{"n":"self"},{"n":"usize"},{"n":"usize"}],"o":{"g":["dynamic"],"n":"matrixslice"}}],[11,"rows_generic","","Extracts from this matrix `nrows` rows regularly skipping `step` rows. Both argument may or may not be values known at compile-time.",1,{"i":[{"n":"self"},{"n":"usize"},{"n":"rslice"}],"o":{"n":"matrixslice"}}],[11,"rows_generic_with_step","","Extracts from this matrix `nrows` rows regularly skipping `step` rows. Both argument may or may not be values known at compile-time.",1,{"i":[{"n":"self"},{"n":"usize"},{"n":"rslice"},{"n":"usize"}],"o":{"g":["dynamic"],"n":"matrixslice"}}],[11,"column","","Returns a slice containing the i-th column of this matrix.",1,{"i":[{"n":"self"},{"n":"usize"}],"o":{"g":["u1"],"n":"matrixslice"}}],[11,"column_part","","Returns a slice containing the `n` first elements of the i-th column of this matrix.",1,{"i":[{"n":"self"},{"n":"usize"},{"n":"usize"}],"o":{"g":["dynamic","u1"],"n":"matrixslice"}}],[11,"columns","","Extracts from this matrix a set of consecutive columns.",1,{"i":[{"n":"self"},{"n":"usize"},{"n":"usize"}],"o":{"g":["dynamic"],"n":"matrixslice"}}],[11,"columns_with_step","","Extracts from this matrix a set of consecutive columns regularly skipping `step` columns.",1,{"i":[{"n":"self"},{"n":"usize"},{"n":"usize"},{"n":"usize"}],"o":{"g":["dynamic","dynamic"],"n":"matrixslice"}}],[11,"fixed_columns","","Extracts a compile-time number of consecutive columns from this matrix.",1,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"matrixslice"}}],[11,"fixed_columns_with_step","","Extracts from this matrix a compile-time number of columns regularly skipping `step` columns.",1,{"i":[{"n":"self"},{"n":"usize"},{"n":"usize"}],"o":{"g":["dynamic"],"n":"matrixslice"}}],[11,"columns_generic","","Extracts from this matrix `ncols` columns. The number of columns may or may not be known at compile-time.",1,{"i":[{"n":"self"},{"n":"usize"},{"n":"cslice"}],"o":{"n":"matrixslice"}}],[11,"columns_generic_with_step","","Extracts from this matrix `ncols` columns skipping `step` columns. Both argument may or may not be values known at compile-time.",1,{"i":[{"n":"self"},{"n":"usize"},{"n":"cslice"},{"n":"usize"}],"o":{"g":["dynamic"],"n":"matrixslice"}}],[11,"slice","","Slices this matrix starting at its component `(irow, icol)` and with `(nrows, ncols)` consecutive elements.",1,null],[11,"slice_with_steps","","Slices this matrix starting at its component `(start.0, start.1)` and with `(shape.0, shape.1)` components. Each row (resp. column) of the sliced matrix is separated by `steps.0` (resp. `steps.1`) ignored rows (resp. columns) of the original matrix.",1,null],[11,"fixed_slice","","Slices this matrix starting at its component `(irow, icol)` and with `(R::dim(), CSlice::dim())` consecutive components.",1,{"i":[{"n":"self"},{"n":"usize"},{"n":"usize"}],"o":{"n":"matrixslice"}}],[11,"fixed_slice_with_steps","","Slices this matrix starting at its component `(start.0, start.1)` and with `(R::dim(), CSlice::dim())` components. Each row (resp. column) of the sliced matrix is separated by `steps.0` (resp. `steps.1`) ignored rows (resp. columns) of the original matrix.",1,null],[11,"generic_slice","","Creates a slice that may or may not have a fixed size and stride.",1,null],[11,"generic_slice_with_steps","","Creates a slice that may or may not have a fixed size and stride.",1,null],[11,"rows_range_pair","","Splits this NxM matrix into two parts delimited by two ranges.",1,null],[11,"columns_range_pair","","Splits this NxM matrix into two parts delimited by two ranges.",1,null],[11,"row_mut","","Returns a slice containing the i-th row of this matrix.",1,{"i":[{"n":"self"},{"n":"usize"}],"o":{"g":["u1"],"n":"matrixslicemut"}}],[11,"row_part_mut","","Returns a slice containing the `n` first elements of the i-th row of this matrix.",1,{"i":[{"n":"self"},{"n":"usize"},{"n":"usize"}],"o":{"g":["u1","dynamic"],"n":"matrixslicemut"}}],[11,"rows_mut","","Extracts from this matrix a set of consecutive rows.",1,{"i":[{"n":"self"},{"n":"usize"},{"n":"usize"}],"o":{"g":["dynamic"],"n":"matrixslicemut"}}],[11,"rows_with_step_mut","","Extracts from this matrix a set of consecutive rows regularly skipping `step` rows.",1,{"i":[{"n":"self"},{"n":"usize"},{"n":"usize"},{"n":"usize"}],"o":{"g":["dynamic","dynamic"],"n":"matrixslicemut"}}],[11,"fixed_rows_mut","","Extracts a compile-time number of consecutive rows from this matrix.",1,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"matrixslicemut"}}],[11,"fixed_rows_with_step_mut","","Extracts from this matrix a compile-time number of rows regularly skipping `step` rows.",1,{"i":[{"n":"self"},{"n":"usize"},{"n":"usize"}],"o":{"g":["dynamic"],"n":"matrixslicemut"}}],[11,"rows_generic_mut","","Extracts from this matrix `nrows` rows regularly skipping `step` rows. Both argument may or may not be values known at compile-time.",1,{"i":[{"n":"self"},{"n":"usize"},{"n":"rslice"}],"o":{"n":"matrixslicemut"}}],[11,"rows_generic_with_step_mut","","Extracts from this matrix `nrows` rows regularly skipping `step` rows. Both argument may or may not be values known at compile-time.",1,{"i":[{"n":"self"},{"n":"usize"},{"n":"rslice"},{"n":"usize"}],"o":{"g":["dynamic"],"n":"matrixslicemut"}}],[11,"column_mut","","Returns a slice containing the i-th column of this matrix.",1,{"i":[{"n":"self"},{"n":"usize"}],"o":{"g":["u1"],"n":"matrixslicemut"}}],[11,"column_part_mut","","Returns a slice containing the `n` first elements of the i-th column of this matrix.",1,{"i":[{"n":"self"},{"n":"usize"},{"n":"usize"}],"o":{"g":["dynamic","u1"],"n":"matrixslicemut"}}],[11,"columns_mut","","Extracts from this matrix a set of consecutive columns.",1,{"i":[{"n":"self"},{"n":"usize"},{"n":"usize"}],"o":{"g":["dynamic"],"n":"matrixslicemut"}}],[11,"columns_with_step_mut","","Extracts from this matrix a set of consecutive columns regularly skipping `step` columns.",1,{"i":[{"n":"self"},{"n":"usize"},{"n":"usize"},{"n":"usize"}],"o":{"g":["dynamic","dynamic"],"n":"matrixslicemut"}}],[11,"fixed_columns_mut","","Extracts a compile-time number of consecutive columns from this matrix.",1,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"matrixslicemut"}}],[11,"fixed_columns_with_step_mut","","Extracts from this matrix a compile-time number of columns regularly skipping `step` columns.",1,{"i":[{"n":"self"},{"n":"usize"},{"n":"usize"}],"o":{"g":["dynamic"],"n":"matrixslicemut"}}],[11,"columns_generic_mut","","Extracts from this matrix `ncols` columns. The number of columns may or may not be known at compile-time.",1,{"i":[{"n":"self"},{"n":"usize"},{"n":"cslice"}],"o":{"n":"matrixslicemut"}}],[11,"columns_generic_with_step_mut","","Extracts from this matrix `ncols` columns skipping `step` columns. Both argument may or may not be values known at compile-time.",1,{"i":[{"n":"self"},{"n":"usize"},{"n":"cslice"},{"n":"usize"}],"o":{"g":["dynamic"],"n":"matrixslicemut"}}],[11,"slice_mut","","Slices this matrix starting at its component `(irow, icol)` and with `(nrows, ncols)` consecutive elements.",1,null],[11,"slice_with_steps_mut","","Slices this matrix starting at its component `(start.0, start.1)` and with `(shape.0, shape.1)` components. Each row (resp. column) of the sliced matrix is separated by `steps.0` (resp. `steps.1`) ignored rows (resp. columns) of the original matrix.",1,null],[11,"fixed_slice_mut","","Slices this matrix starting at its component `(irow, icol)` and with `(R::dim(), CSlice::dim())` consecutive components.",1,{"i":[{"n":"self"},{"n":"usize"},{"n":"usize"}],"o":{"n":"matrixslicemut"}}],[11,"fixed_slice_with_steps_mut","","Slices this matrix starting at its component `(start.0, start.1)` and with `(R::dim(), CSlice::dim())` components. Each row (resp. column) of the sliced matrix is separated by `steps.0` (resp. `steps.1`) ignored rows (resp. columns) of the original matrix.",1,null],[11,"generic_slice_mut","","Creates a slice that may or may not have a fixed size and stride.",1,null],[11,"generic_slice_with_steps_mut","","Creates a slice that may or may not have a fixed size and stride.",1,null],[11,"rows_range_pair_mut","","Splits this NxM matrix into two parts delimited by two ranges.",1,null],[11,"columns_range_pair_mut","","Splits this NxM matrix into two parts delimited by two ranges.",1,null],[11,"slice_range","","Slices a sub-matrix containing the rows indexed by the range `rows` and the columns indexed by the range `cols`.",1,{"i":[{"n":"self"},{"n":"rowrange"},{"n":"colrange"}],"o":{"n":"matrixslice"}}],[11,"rows_range","","Slice containing all the rows indexed by the range `rows`.",1,{"i":[{"n":"self"},{"n":"rowrange"}],"o":{"n":"matrixslice"}}],[11,"columns_range","","Slice containing all the columns indexed by the range `rows`.",1,{"i":[{"n":"self"},{"n":"colrange"}],"o":{"n":"matrixslice"}}],[11,"slice_range_mut","","Slices a mutable sub-matrix containing the rows indexed by the range `rows` and the columns indexed by the range `cols`.",1,{"i":[{"n":"self"},{"n":"rowrange"},{"n":"colrange"}],"o":{"n":"matrixslicemut"}}],[11,"rows_range_mut","","Slice containing all the rows indexed by the range `rows`.",1,{"i":[{"n":"self"},{"n":"rowrange"}],"o":{"n":"matrixslicemut"}}],[11,"columns_range_mut","","Slice containing all the columns indexed by the range `cols`.",1,{"i":[{"n":"self"},{"n":"colrange"}],"o":{"n":"matrixslicemut"}}],[11,"hash","","",192,{"i":[{"n":"self"},{"n":"h"}]}],[11,"deref","","",192,null],[11,"deref_mut","","",192,null],[11,"fmt","","",192,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",192,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"eq","","",192,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[11,"ptr","","",192,null],[11,"shape","","",192,null],[11,"strides","","",192,null],[11,"is_contiguous","","",192,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"into_owned","","",192,{"i":[{"n":"self"}],"o":{"n":"owned"}}],[11,"clone_owned","","",192,{"i":[{"n":"self"}],"o":{"n":"owned"}}],[11,"as_slice","","",192,null],[11,"ptr_mut","","",192,null],[11,"as_mut_slice","","",192,null],[11,"fmt","","",193,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",193,{"i":[{"n":"self"}],"o":{"n":"matrixvec"}}],[11,"eq","","",193,{"i":[{"n":"self"},{"n":"matrixvec"}],"o":{"n":"bool"}}],[11,"ne","","",193,{"i":[{"n":"self"},{"n":"matrixvec"}],"o":{"n":"bool"}}],[11,"new","","Creates a new dynamic matrix data storage from the given vector and shape.",193,{"i":[{"n":"r"},{"n":"c"},{"n":"vec"}],"o":{"n":"matrixvec"}}],[11,"data","","The underlying data storage.",193,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"data_mut","","The underlying mutable data storage.",193,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"resize","","Resizes the undelying mutable data storage and unrwaps it.",193,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"vec"}}],[11,"deref","","",193,null],[11,"ptr","","",193,null],[11,"shape","","",193,null],[11,"strides","","",193,null],[11,"is_contiguous","","",193,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"into_owned","","",193,{"i":[{"n":"self"}],"o":{"g":["dynamic"],"n":"owned"}}],[11,"clone_owned","","",193,{"i":[{"n":"self"}],"o":{"g":["dynamic"],"n":"owned"}}],[11,"as_slice","","",193,null],[11,"ptr","","",193,null],[11,"shape","","",193,null],[11,"strides","","",193,null],[11,"is_contiguous","","",193,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"into_owned","","",193,{"i":[{"n":"self"}],"o":{"g":["dynamic"],"n":"owned"}}],[11,"clone_owned","","",193,{"i":[{"n":"self"}],"o":{"g":["dynamic"],"n":"owned"}}],[11,"as_slice","","",193,null],[11,"ptr_mut","","",193,null],[11,"as_mut_slice","","",193,null],[11,"ptr_mut","","",193,null],[11,"as_mut_slice","","",193,null],[11,"eq","","",189,{"i":[{"n":"self"},{"n":"unit"}],"o":{"n":"bool"}}],[11,"ne","","",189,{"i":[{"n":"self"},{"n":"unit"}],"o":{"n":"bool"}}],[11,"clone","","",189,{"i":[{"n":"self"}],"o":{"n":"unit"}}],[11,"hash","","",189,null],[11,"fmt","","",189,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new_normalize","","Normalize the given value and return it wrapped on a `Unit` structure.",189,{"i":[{"n":"t"}],"o":{"n":"self"}}],[11,"try_new","","Attempts to normalize the given value and return it wrapped on a `Unit` structure.",189,null],[11,"new_and_get","","Normalize the given value and return it wrapped on a `Unit` structure and its norm.",189,null],[11,"try_new_and_get","","Normalize the given value and return it wrapped on a `Unit` structure and its norm.",189,null],[11,"renormalize","","Normalizes this value again. This is useful when repeated computations might cause a drift in the norm because of float inaccuracies.",189,null],[11,"new_unchecked","","Wraps the given value, assuming it is already normalized.",189,{"i":[{"n":"t"}],"o":{"n":"self"}}],[11,"unwrap","","Retrieves the underlying value.",189,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"as_mut_unchecked","","Returns a mutable reference to the underlying value. This is `_unchecked` because modifying the underlying value in such a way that it no longer has unit length may lead to unexpected results.",189,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"as_ref","","",189,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"to_superset","","",189,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"is_in_subset","","",189,{"i":[{"n":"t"}],"o":{"n":"bool"}}],[11,"from_superset_unchecked","","",189,{"i":[{"n":"t"}],"o":{"n":"self"}}],[11,"neg","","",189,null],[11,"deref","","",189,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"abs","","Computes the componentwise absolute value.",1,{"i":[{"n":"self"}],"o":{"n":"matrixmn"}}],[11,"component_mul","","Componentwise matrix multiplication.",1,{"i":[{"n":"self"},{"n":"matrix"}],"o":{"n":"matrixsum"}}],[11,"cmpy","","Computes componentwise `self[i] = alpha * a[i] * b[i] + beta * self[i]`.",1,{"i":[{"n":"self"},{"n":"n"},{"n":"matrix"},{"n":"matrix"},{"n":"n"}]}],[11,"component_mul_assign","","Inplace componentwise matrix multiplication.",1,{"i":[{"n":"self"},{"n":"matrix"}]}],[11,"component_mul_mut","","Inplace componentwise matrix multiplication.",1,{"i":[{"n":"self"},{"n":"matrix"}]}],[11,"component_div","","Componentwise matrix division.",1,{"i":[{"n":"self"},{"n":"matrix"}],"o":{"n":"matrixsum"}}],[11,"cdpy","","Computes componentwise `self[i] = alpha * a[i] / b[i] + beta * self[i]`.",1,{"i":[{"n":"self"},{"n":"n"},{"n":"matrix"},{"n":"matrix"},{"n":"n"}]}],[11,"component_div_assign","","Inplace componentwise matrix division.",1,{"i":[{"n":"self"},{"n":"matrix"}]}],[11,"component_div_mut","","Inplace componentwise matrix division.",1,{"i":[{"n":"self"},{"n":"matrix"}]}],[11,"upper_triangle","","Extracts the upper triangular part of this matrix (including the diagonal).",1,{"i":[{"n":"self"}],"o":{"n":"matrixmn"}}],[11,"lower_triangle","","Extracts the upper triangular part of this matrix (including the diagonal).",1,{"i":[{"n":"self"}],"o":{"n":"matrixmn"}}],[11,"fill","","Sets all the elements of this matrix to `val`.",1,{"i":[{"n":"self"},{"n":"n"}]}],[11,"fill_with_identity","","Fills `self` with the identity matrix.",1,{"i":[{"n":"self"}]}],[11,"fill_diagonal","","Sets all the diagonal elements of this matrix to `val`.",1,{"i":[{"n":"self"},{"n":"n"}]}],[11,"fill_row","","Sets all the elements of the selected row to `val`.",1,{"i":[{"n":"self"},{"n":"usize"},{"n":"n"}]}],[11,"fill_column","","Sets all the elements of the selected column to `val`.",1,{"i":[{"n":"self"},{"n":"usize"},{"n":"n"}]}],[11,"set_diagonal","","Fills the diagonal of this matrix with the content of the given vector.",1,{"i":[{"n":"self"},{"n":"vector"}]}],[11,"set_row","","Fills the selected row of this matrix with the content of the given vector.",1,{"i":[{"n":"self"},{"n":"usize"},{"n":"rowvector"}]}],[11,"set_column","","Fills the selected column of this matrix with the content of the given vector.",1,{"i":[{"n":"self"},{"n":"usize"},{"n":"vector"}]}],[11,"fill_lower_triangle","","Sets all the elements of the lower-triangular part of this matrix to `val`.",1,{"i":[{"n":"self"},{"n":"n"},{"n":"usize"}]}],[11,"fill_upper_triangle","","Sets all the elements of the lower-triangular part of this matrix to `val`.",1,{"i":[{"n":"self"},{"n":"n"},{"n":"usize"}]}],[11,"swap_rows","","Swaps two rows in-place.",1,{"i":[{"n":"self"},{"n":"usize"},{"n":"usize"}]}],[11,"swap_columns","","Swaps two columns in-place.",1,{"i":[{"n":"self"},{"n":"usize"},{"n":"usize"}]}],[11,"fill_lower_triangle_with_upper_triangle","","Copies the upper-triangle of this matrix to its lower-triangular part.",1,{"i":[{"n":"self"}]}],[11,"fill_upper_triangle_with_lower_triangle","","Copies the upper-triangle of this matrix to its upper-triangular part.",1,{"i":[{"n":"self"}]}],[11,"remove_column","","Removes the `i`-th column from this matrix.",1,{"i":[{"n":"self"},{"n":"usize"}],"o":{"g":["dimdiff"],"n":"matrixmn"}}],[11,"remove_fixed_columns","","Removes `D::dim()` consecutive columns from this matrix, starting with the `i`-th (included).",1,{"i":[{"n":"self"},{"n":"usize"}],"o":{"g":["dimdiff"],"n":"matrixmn"}}],[11,"remove_columns","","Removes `n` consecutive columns from this matrix, starting with the `i`-th (included).",1,{"i":[{"n":"self"},{"n":"usize"},{"n":"usize"}],"o":{"g":["dynamic"],"n":"matrixmn"}}],[11,"remove_columns_generic","","Removes `nremove.value()` columns from this matrix, starting with the `i`-th (included).",1,{"i":[{"n":"self"},{"n":"usize"},{"n":"d"}],"o":{"g":["dimdiff"],"n":"matrixmn"}}],[11,"remove_row","","Removes the `i`-th row from this matrix.",1,{"i":[{"n":"self"},{"n":"usize"}],"o":{"g":["dimdiff"],"n":"matrixmn"}}],[11,"remove_fixed_rows","","Removes `D::dim()` consecutive rows from this matrix, starting with the `i`-th (included).",1,{"i":[{"n":"self"},{"n":"usize"}],"o":{"g":["dimdiff"],"n":"matrixmn"}}],[11,"remove_rows","","Removes `n` consecutive rows from this matrix, starting with the `i`-th (included).",1,{"i":[{"n":"self"},{"n":"usize"},{"n":"usize"}],"o":{"g":["dynamic"],"n":"matrixmn"}}],[11,"remove_rows_generic","","Removes `nremove.value()` rows from this matrix, starting with the `i`-th (included).",1,{"i":[{"n":"self"},{"n":"usize"},{"n":"d"}],"o":{"g":["dimdiff"],"n":"matrixmn"}}],[11,"insert_column","","Inserts a column filled with `val` at the `i-th` position.",1,{"i":[{"n":"self"},{"n":"usize"},{"n":"n"}],"o":{"g":["dimsum"],"n":"matrixmn"}}],[11,"insert_fixed_columns","","Inserts `D::dim()` columns filled with `val` starting at the `i-th` position.",1,{"i":[{"n":"self"},{"n":"usize"},{"n":"n"}],"o":{"g":["dimsum"],"n":"matrixmn"}}],[11,"insert_columns","","Inserts `n` columns filled with `val` starting at the `i-th` position.",1,{"i":[{"n":"self"},{"n":"usize"},{"n":"usize"},{"n":"n"}],"o":{"g":["dynamic"],"n":"matrixmn"}}],[11,"insert_columns_generic_uninitialized","","Inserts `ninsert.value()` columns starting at the `i-th` place of this matrix.",1,{"i":[{"n":"self"},{"n":"usize"},{"n":"d"}],"o":{"g":["dimsum"],"n":"matrixmn"}}],[11,"insert_row","","Inserts a row filled with `val` at the `i-th` position.",1,{"i":[{"n":"self"},{"n":"usize"},{"n":"n"}],"o":{"g":["dimsum"],"n":"matrixmn"}}],[11,"insert_fixed_rows","","Inserts `D::dim()` rows filled with `val` starting at the `i-th` position.",1,{"i":[{"n":"self"},{"n":"usize"},{"n":"n"}],"o":{"g":["dimsum"],"n":"matrixmn"}}],[11,"insert_rows","","Inserts `n` rows filled with `val` starting at the `i-th` position.",1,{"i":[{"n":"self"},{"n":"usize"},{"n":"usize"},{"n":"n"}],"o":{"g":["dynamic"],"n":"matrixmn"}}],[11,"insert_rows_generic_uninitialized","","Inserts `ninsert.value()` rows at the `i-th` place of this matrix.",1,{"i":[{"n":"self"},{"n":"usize"},{"n":"d"}],"o":{"g":["dimsum"],"n":"matrixmn"}}],[11,"resize","","Resizes this matrix so that it contains `new_nrows` rows and `new_ncols` columns.",1,{"i":[{"n":"self"},{"n":"usize"},{"n":"usize"},{"n":"n"}],"o":{"n":"dmatrix"}}],[11,"fixed_resize","","Resizes this matrix so that it contains `R2::value()` rows and `C2::value()` columns.",1,{"i":[{"n":"self"},{"n":"n"}],"o":{"n":"matrixmn"}}],[11,"resize_generic","","Resizes `self` such that it has dimensions `new_nrows Ã— now_ncols`.",1,{"i":[{"n":"self"},{"n":"r2"},{"n":"c2"},{"n":"n"}],"o":{"n":"matrixmn"}}],[6,"SquareMatrix","","A square matrix.",null,null],[6,"Vector","","A matrix with one column and `D` rows.",null,null],[6,"RowVector","","A matrix with one row and `D` columns .",null,null],[6,"MatrixSum","","The type of the result of a matrix sum.",null,null],[6,"VectorSum","","The type of the result of a matrix sum.",null,null],[6,"MatrixCross","","The type of the result of a matrix cross product.",null,null],[6,"MatrixNM","","A staticaly sized column-major matrix with `R` rows and `C` columns.",null,null],[6,"MatrixMN","","A staticaly sized column-major matrix with `R` rows and `C` columns.",null,null],[6,"MatrixN","","A staticaly sized column-major square matrix with `D` rows and columns.",null,null],[6,"DMatrix","","A dynamically sized column-major matrix.",null,null],[6,"Matrix1","","A stack-allocated, column-major, 1x1 square matrix.",null,null],[6,"Matrix2","","A stack-allocated, column-major, 2x2 square matrix.",null,null],[6,"Matrix3","","A stack-allocated, column-major, 3x3 square matrix.",null,null],[6,"Matrix4","","A stack-allocated, column-major, 4x4 square matrix.",null,null],[6,"Matrix5","","A stack-allocated, column-major, 5x5 square matrix.",null,null],[6,"Matrix6","","A stack-allocated, column-major, 6x6 square matrix.",null,null],[6,"Matrix1x2","","A stack-allocated, column-major, 1x2 square matrix.",null,null],[6,"Matrix1x3","","A stack-allocated, column-major, 1x3 square matrix.",null,null],[6,"Matrix1x4","","A stack-allocated, column-major, 1x4 square matrix.",null,null],[6,"Matrix1x5","","A stack-allocated, column-major, 1x5 square matrix.",null,null],[6,"Matrix1x6","","A stack-allocated, column-major, 1x6 square matrix.",null,null],[6,"Matrix2x3","","A stack-allocated, column-major, 2x3 square matrix.",null,null],[6,"Matrix2x4","","A stack-allocated, column-major, 2x4 square matrix.",null,null],[6,"Matrix2x5","","A stack-allocated, column-major, 2x5 square matrix.",null,null],[6,"Matrix2x6","","A stack-allocated, column-major, 2x6 square matrix.",null,null],[6,"Matrix3x4","","A stack-allocated, column-major, 3x4 square matrix.",null,null],[6,"Matrix3x5","","A stack-allocated, column-major, 3x5 square matrix.",null,null],[6,"Matrix3x6","","A stack-allocated, column-major, 3x6 square matrix.",null,null],[6,"Matrix4x5","","A stack-allocated, column-major, 4x5 square matrix.",null,null],[6,"Matrix4x6","","A stack-allocated, column-major, 4x6 square matrix.",null,null],[6,"Matrix5x6","","A stack-allocated, column-major, 5x6 square matrix.",null,null],[6,"Matrix2x1","","A stack-allocated, column-major, 2x1 square matrix.",null,null],[6,"Matrix3x1","","A stack-allocated, column-major, 3x1 square matrix.",null,null],[6,"Matrix4x1","","A stack-allocated, column-major, 4x1 square matrix.",null,null],[6,"Matrix5x1","","A stack-allocated, column-major, 5x1 square matrix.",null,null],[6,"Matrix6x1","","A stack-allocated, column-major, 6x1 square matrix.",null,null],[6,"Matrix3x2","","A stack-allocated, column-major, 3x2 square matrix.",null,null],[6,"Matrix4x2","","A stack-allocated, column-major, 4x2 square matrix.",null,null],[6,"Matrix5x2","","A stack-allocated, column-major, 5x2 square matrix.",null,null],[6,"Matrix6x2","","A stack-allocated, column-major, 6x2 square matrix.",null,null],[6,"Matrix4x3","","A stack-allocated, column-major, 4x3 square matrix.",null,null],[6,"Matrix5x3","","A stack-allocated, column-major, 5x3 square matrix.",null,null],[6,"Matrix6x3","","A stack-allocated, column-major, 6x3 square matrix.",null,null],[6,"Matrix5x4","","A stack-allocated, column-major, 5x4 square matrix.",null,null],[6,"Matrix6x4","","A stack-allocated, column-major, 6x4 square matrix.",null,null],[6,"Matrix6x5","","A stack-allocated, column-major, 6x5 square matrix.",null,null],[6,"DVector","","A dynamically sized column vector.",null,null],[6,"VectorN","","A statically sized D-dimensional column vector.",null,null],[6,"Vector1","","A stack-allocated, 1-dimensional column vector.",null,null],[6,"Vector2","","A stack-allocated, 2-dimensional column vector.",null,null],[6,"Vector3","","A stack-allocated, 3-dimensional column vector.",null,null],[6,"Vector4","","A stack-allocated, 4-dimensional column vector.",null,null],[6,"Vector5","","A stack-allocated, 5-dimensional column vector.",null,null],[6,"Vector6","","A stack-allocated, 6-dimensional column vector.",null,null],[6,"RowDVector","","A dynamically sized row vector.",null,null],[6,"RowVectorN","","A statically sized D-dimensional row vector.",null,null],[6,"RowVector1","","A stack-allocated, 1-dimensional row vector.",null,null],[6,"RowVector2","","A stack-allocated, 2-dimensional row vector.",null,null],[6,"RowVector3","","A stack-allocated, 3-dimensional row vector.",null,null],[6,"RowVector4","","A stack-allocated, 4-dimensional row vector.",null,null],[6,"RowVector5","","A stack-allocated, 5-dimensional row vector.",null,null],[6,"RowVector6","","A stack-allocated, 6-dimensional row vector.",null,null],[6,"MatrixSliceMN","","A column-major matrix slice with `R` rows and `C` columns.",null,null],[6,"MatrixSliceN","","A column-major matrix slice with `D` rows and columns.",null,null],[6,"DMatrixSlice","","A column-major matrix slice dynamic numbers of rows and columns.",null,null],[6,"MatrixSlice1","","A column-major 1x1 matrix slice.",null,null],[6,"MatrixSlice2","","A column-major 2x2 matrix slice.",null,null],[6,"MatrixSlice3","","A column-major 3x3 matrix slice.",null,null],[6,"MatrixSlice4","","A column-major 4x4 matrix slice.",null,null],[6,"MatrixSlice5","","A column-major 5x5 matrix slice.",null,null],[6,"MatrixSlice6","","A column-major 6x6 matrix slice.",null,null],[6,"MatrixSlice1x2","","A column-major 1x2 matrix slice.",null,null],[6,"MatrixSlice1x3","","A column-major 1x3 matrix slice.",null,null],[6,"MatrixSlice1x4","","A column-major 1x4 matrix slice.",null,null],[6,"MatrixSlice1x5","","A column-major 1x5 matrix slice.",null,null],[6,"MatrixSlice1x6","","A column-major 1x6 matrix slice.",null,null],[6,"MatrixSlice2x1","","A column-major 2x1 matrix slice.",null,null],[6,"MatrixSlice2x3","","A column-major 2x3 matrix slice.",null,null],[6,"MatrixSlice2x4","","A column-major 2x4 matrix slice.",null,null],[6,"MatrixSlice2x5","","A column-major 2x5 matrix slice.",null,null],[6,"MatrixSlice2x6","","A column-major 2x6 matrix slice.",null,null],[6,"MatrixSlice3x1","","A column-major 3x1 matrix slice.",null,null],[6,"MatrixSlice3x2","","A column-major 3x2 matrix slice.",null,null],[6,"MatrixSlice3x4","","A column-major 3x4 matrix slice.",null,null],[6,"MatrixSlice3x5","","A column-major 3x5 matrix slice.",null,null],[6,"MatrixSlice3x6","","A column-major 3x6 matrix slice.",null,null],[6,"MatrixSlice4x1","","A column-major 4x1 matrix slice.",null,null],[6,"MatrixSlice4x2","","A column-major 4x2 matrix slice.",null,null],[6,"MatrixSlice4x3","","A column-major 4x3 matrix slice.",null,null],[6,"MatrixSlice4x5","","A column-major 4x5 matrix slice.",null,null],[6,"MatrixSlice4x6","","A column-major 4x6 matrix slice.",null,null],[6,"MatrixSlice5x1","","A column-major 5x1 matrix slice.",null,null],[6,"MatrixSlice5x2","","A column-major 5x2 matrix slice.",null,null],[6,"MatrixSlice5x3","","A column-major 5x3 matrix slice.",null,null],[6,"MatrixSlice5x4","","A column-major 5x4 matrix slice.",null,null],[6,"MatrixSlice5x6","","A column-major 5x6 matrix slice.",null,null],[6,"MatrixSlice6x1","","A column-major 6x1 matrix slice.",null,null],[6,"MatrixSlice6x2","","A column-major 6x2 matrix slice.",null,null],[6,"MatrixSlice6x3","","A column-major 6x3 matrix slice.",null,null],[6,"MatrixSlice6x4","","A column-major 6x4 matrix slice.",null,null],[6,"MatrixSlice6x5","","A column-major 6x5 matrix slice.",null,null],[6,"MatrixSlice1xX","","A column-major matrix slice with 1 row and a number of columns chosen at runtime.",null,null],[6,"MatrixSlice2xX","","A column-major matrix slice with 2 rows and a number of columns chosen at runtime.",null,null],[6,"MatrixSlice3xX","","A column-major matrix slice with 3 rows and a number of columns chosen at runtime.",null,null],[6,"MatrixSlice4xX","","A column-major matrix slice with 4 rows and a number of columns chosen at runtime.",null,null],[6,"MatrixSlice5xX","","A column-major matrix slice with 5 rows and a number of columns chosen at runtime.",null,null],[6,"MatrixSlice6xX","","A column-major matrix slice with 6 rows and a number of columns chosen at runtime.",null,null],[6,"MatrixSliceXx1","","A column-major matrix slice with a number of rows chosen at runtime and 1 column.",null,null],[6,"MatrixSliceXx2","","A column-major matrix slice with a number of rows chosen at runtime and 2 columns.",null,null],[6,"MatrixSliceXx3","","A column-major matrix slice with a number of rows chosen at runtime and 3 columns.",null,null],[6,"MatrixSliceXx4","","A column-major matrix slice with a number of rows chosen at runtime and 4 columns.",null,null],[6,"MatrixSliceXx5","","A column-major matrix slice with a number of rows chosen at runtime and 5 columns.",null,null],[6,"MatrixSliceXx6","","A column-major matrix slice with a number of rows chosen at runtime and 6 columns.",null,null],[6,"VectorSliceN","","A column vector slice with `D` rows.",null,null],[6,"DVectorSlice","","A column vector slice dynamic numbers of rows and columns.",null,null],[6,"VectorSlice1","","A 1D column vector slice.",null,null],[6,"VectorSlice2","","A 2D column vector slice.",null,null],[6,"VectorSlice3","","A 3D column vector slice.",null,null],[6,"VectorSlice4","","A 4D column vector slice.",null,null],[6,"VectorSlice5","","A 5D column vector slice.",null,null],[6,"VectorSlice6","","A 6D column vector slice.",null,null],[6,"MatrixSliceMutMN","","A column-major mutable matrix slice with `R` rows and `C` columns.",null,null],[6,"MatrixSliceMutN","","A column-major mutable matrix slice with `D` rows and columns.",null,null],[6,"DMatrixSliceMut","","A column-major mutable matrix slice dynamic numbers of rows and columns.",null,null],[6,"MatrixSliceMut1","","A column-major 1x1 mutable matrix slice.",null,null],[6,"MatrixSliceMut2","","A column-major 2x2 mutable matrix slice.",null,null],[6,"MatrixSliceMut3","","A column-major 3x3 mutable matrix slice.",null,null],[6,"MatrixSliceMut4","","A column-major 4x4 mutable matrix slice.",null,null],[6,"MatrixSliceMut5","","A column-major 5x5 mutable matrix slice.",null,null],[6,"MatrixSliceMut6","","A column-major 6x6 mutable matrix slice.",null,null],[6,"MatrixSliceMut1x2","","A column-major 1x2 mutable matrix slice.",null,null],[6,"MatrixSliceMut1x3","","A column-major 1x3 mutable matrix slice.",null,null],[6,"MatrixSliceMut1x4","","A column-major 1x4 mutable matrix slice.",null,null],[6,"MatrixSliceMut1x5","","A column-major 1x5 mutable matrix slice.",null,null],[6,"MatrixSliceMut1x6","","A column-major 1x6 mutable matrix slice.",null,null],[6,"MatrixSliceMut2x1","","A column-major 2x1 mutable matrix slice.",null,null],[6,"MatrixSliceMut2x3","","A column-major 2x3 mutable matrix slice.",null,null],[6,"MatrixSliceMut2x4","","A column-major 2x4 mutable matrix slice.",null,null],[6,"MatrixSliceMut2x5","","A column-major 2x5 mutable matrix slice.",null,null],[6,"MatrixSliceMut2x6","","A column-major 2x6 mutable matrix slice.",null,null],[6,"MatrixSliceMut3x1","","A column-major 3x1 mutable matrix slice.",null,null],[6,"MatrixSliceMut3x2","","A column-major 3x2 mutable matrix slice.",null,null],[6,"MatrixSliceMut3x4","","A column-major 3x4 mutable matrix slice.",null,null],[6,"MatrixSliceMut3x5","","A column-major 3x5 mutable matrix slice.",null,null],[6,"MatrixSliceMut3x6","","A column-major 3x6 mutable matrix slice.",null,null],[6,"MatrixSliceMut4x1","","A column-major 4x1 mutable matrix slice.",null,null],[6,"MatrixSliceMut4x2","","A column-major 4x2 mutable matrix slice.",null,null],[6,"MatrixSliceMut4x3","","A column-major 4x3 mutable matrix slice.",null,null],[6,"MatrixSliceMut4x5","","A column-major 4x5 mutable matrix slice.",null,null],[6,"MatrixSliceMut4x6","","A column-major 4x6 mutable matrix slice.",null,null],[6,"MatrixSliceMut5x1","","A column-major 5x1 mutable matrix slice.",null,null],[6,"MatrixSliceMut5x2","","A column-major 5x2 mutable matrix slice.",null,null],[6,"MatrixSliceMut5x3","","A column-major 5x3 mutable matrix slice.",null,null],[6,"MatrixSliceMut5x4","","A column-major 5x4 mutable matrix slice.",null,null],[6,"MatrixSliceMut5x6","","A column-major 5x6 mutable matrix slice.",null,null],[6,"MatrixSliceMut6x1","","A column-major 6x1 mutable matrix slice.",null,null],[6,"MatrixSliceMut6x2","","A column-major 6x2 mutable matrix slice.",null,null],[6,"MatrixSliceMut6x3","","A column-major 6x3 mutable matrix slice.",null,null],[6,"MatrixSliceMut6x4","","A column-major 6x4 mutable matrix slice.",null,null],[6,"MatrixSliceMut6x5","","A column-major 6x5 mutable matrix slice.",null,null],[6,"MatrixSliceMut1xX","","A column-major mutable matrix slice with 1 row and a number of columns chosen at runtime.",null,null],[6,"MatrixSliceMut2xX","","A column-major mutable matrix slice with 2 rows and a number of columns chosen at runtime.",null,null],[6,"MatrixSliceMut3xX","","A column-major mutable matrix slice with 3 rows and a number of columns chosen at runtime.",null,null],[6,"MatrixSliceMut4xX","","A column-major mutable matrix slice with 4 rows and a number of columns chosen at runtime.",null,null],[6,"MatrixSliceMut5xX","","A column-major mutable matrix slice with 5 rows and a number of columns chosen at runtime.",null,null],[6,"MatrixSliceMut6xX","","A column-major mutable matrix slice with 6 rows and a number of columns chosen at runtime.",null,null],[6,"MatrixSliceMutXx1","","A column-major mutable matrix slice with a number of rows chosen at runtime and 1 column.",null,null],[6,"MatrixSliceMutXx2","","A column-major mutable matrix slice with a number of rows chosen at runtime and 2 columns.",null,null],[6,"MatrixSliceMutXx3","","A column-major mutable matrix slice with a number of rows chosen at runtime and 3 columns.",null,null],[6,"MatrixSliceMutXx4","","A column-major mutable matrix slice with a number of rows chosen at runtime and 4 columns.",null,null],[6,"MatrixSliceMutXx5","","A column-major mutable matrix slice with a number of rows chosen at runtime and 5 columns.",null,null],[6,"MatrixSliceMutXx6","","A column-major mutable matrix slice with a number of rows chosen at runtime and 6 columns.",null,null],[6,"VectorSliceMutN","","A mutable column vector slice with `D` rows.",null,null],[6,"DVectorSliceMut","","A mutable column vector slice dynamic numbers of rows and columns.",null,null],[6,"VectorSliceMut1","","A 1D mutable column vector slice.",null,null],[6,"VectorSliceMut2","","A 2D mutable column vector slice.",null,null],[6,"VectorSliceMut3","","A 3D mutable column vector slice.",null,null],[6,"VectorSliceMut4","","A 4D mutable column vector slice.",null,null],[6,"VectorSliceMut5","","A 5D mutable column vector slice.",null,null],[6,"VectorSliceMut6","","A 6D mutable column vector slice.",null,null],[6,"MatrixSlice","","A matrix slice.",null,null],[6,"MatrixSliceMut","","A matrix slice.",null,null],[8,"Scalar","","The basic scalar type for all structures of `nalgebra`.",null,null],[11,"is","","Tests if `Self` the the same as the type `T`",194,{"o":{"n":"bool"}}],[8,"SliceRange","","A range with a size that may be known at compile-time.",null,null],[16,"Size","","Type of the range size. May be a type-level integer.",195,null],[10,"begin","","The start index of the range.",195,{"i":[{"n":"self"},{"n":"d"}],"o":{"n":"usize"}}],[10,"end","","The index immediatly after the last index inside of the range.",195,{"i":[{"n":"self"},{"n":"d"}],"o":{"n":"usize"}}],[10,"size","","The number of elements of the range, i.e., `self.end - self.begin`.",195,null],[0,"geometry","nalgebra","[Reexported at the root of this crate.] Data structures for points and usual transformations (rotations, isometries, etc.)",null,null],[3,"Point","nalgebra::geometry","A point in a n-dimensional euclidean space.",null,null],[12,"coords","","The coordinates of this point, i.e., the shift from the origin.",196,null],[3,"Rotation","","A rotation matrix.",null,null],[3,"Quaternion","","A quaternion. See the type alias `UnitQuaternion = Unit<Quaternion>` for a quaternion that may be used as a rotation.",null,null],[12,"coords","","This quaternion as a 4D vector of coordinates in the `[ x, y, z, w ]` storage order.",197,null],[3,"Translation","","A translation.",null,null],[12,"vector","","The translation coordinates, i.e., how much is added to a point's coordinates when it is translated.",198,null],[3,"Isometry","","A direct isometry, i.e., a rotation followed by a translation.",null,null],[12,"rotation","","The pure rotational part of this isometry.",199,null],[12,"translation","","The pure translational part of this isometry.",199,null],[3,"Similarity","","A similarity, i.e., an uniform scaling, followed by a rotation, followed by a translation.",null,null],[12,"isometry","","The part of this similarity that does not include the scaling factor.",200,null],[3,"Transform","","A transformation matrix in homogeneous coordinates.",null,null],[3,"Reflection","","A reflection wrt. a plane.",null,null],[3,"Orthographic3","","A 3D orthographic projection stored as an homogeneous 4x4 matrix.",null,null],[3,"Perspective3","","A 3D perspective projection stored as an homogeneous 4x4 matrix.",null,null],[4,"TGeneral","","Tag representing the most general (not necessarily inversible) `Transform` type.",null,null],[4,"TProjective","","Tag representing the most general inversible `Transform` type.",null,null],[4,"TAffine","","Tag representing an affine `Transform`. Its bottom-row is equal to `(0, 0 ... 0, 1)`.",null,null],[11,"fmt","","",196,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"hash","","",196,{"i":[{"n":"self"},{"n":"h"}]}],[11,"clone","","",196,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"clone","","Clones this point into one that owns its data.",196,{"i":[{"n":"self"}],"o":{"n":"point"}}],[11,"to_homogeneous","","Converts this point into a vector in homogeneous coordinates, i.e., appends a `1` at the end of it.",196,{"i":[{"n":"self"}],"o":{"g":["dimnamesum"],"n":"vectorn"}}],[11,"from_coordinates","","Creates a new point with the given coordinates.",196,{"i":[{"n":"vectorn"}],"o":{"n":"point"}}],[11,"len","","The dimension of this point.",196,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"stride","","The stride of this point. This is the number of buffer element separating each component of this point.",196,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"iter","","Iterates through this point coordinates.",196,{"i":[{"n":"self"}],"o":{"g":["u1"],"n":"matrixiter"}}],[11,"get_unchecked","","Gets a reference to i-th element of this point without bound-checking.",196,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"n"}}],[11,"iter_mut","","Mutably iterates through this point coordinates.",196,{"i":[{"n":"self"}],"o":{"g":["u1"],"n":"matrixitermut"}}],[11,"get_unchecked_mut","","Gets a mutable reference to i-th element of this point without bound-checking.",196,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"n"}}],[11,"swap_unchecked","","Swaps two entries without bound-checking.",196,{"i":[{"n":"self"},{"n":"usize"},{"n":"usize"}]}],[11,"default_epsilon","","",196,null],[11,"default_max_relative","","",196,null],[11,"default_max_ulps","","",196,{"o":{"n":"u32"}}],[11,"relative_eq","","",196,null],[11,"ulps_eq","","",196,null],[11,"eq","","",196,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",196,{"i":[{"n":"self"},{"n":"self"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",196,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[11,"le","","",196,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[11,"gt","","",196,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[11,"ge","","",196,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[11,"fmt","","",196,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new_uninitialized","","Creates a new point with uninitialized coordinates.",196,{"o":{"n":"self"}}],[11,"origin","","Creates a new point with all coordinates equal to zero.",196,{"o":{"n":"self"}}],[11,"from_homogeneous","","Creates a new point from its homogeneous vector representation.",196,{"i":[{"g":["dimnamesum"],"n":"vectorn"}],"o":{"n":"option"}}],[11,"max_value","","",196,{"o":{"n":"self"}}],[11,"min_value","","",196,{"o":{"n":"self"}}],[11,"rand","","",196,{"i":[{"n":"g"}],"o":{"n":"self"}}],[11,"new","","Initializes this matrix from its components.",196,{"i":[{"n":"n"}],"o":{"g":["u1"],"n":"point"}}],[11,"new","","Initializes this matrix from its components.",196,{"i":[{"n":"n"},{"n":"n"}],"o":{"g":["u2"],"n":"point"}}],[11,"new","","Initializes this matrix from its components.",196,{"i":[{"n":"n"},{"n":"n"},{"n":"n"}],"o":{"g":["u3"],"n":"point"}}],[11,"new","","Initializes this matrix from its components.",196,{"i":[{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"}],"o":{"g":["u4"],"n":"point"}}],[11,"new","","Initializes this matrix from its components.",196,{"i":[{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"}],"o":{"g":["u5"],"n":"point"}}],[11,"new","","Initializes this matrix from its components.",196,{"i":[{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"}],"o":{"g":["u6"],"n":"point"}}],[11,"index","","",196,null],[11,"index_mut","","",196,null],[11,"neg","","",196,null],[11,"sub","","",196,null],[11,"sub","","",196,null],[11,"sub","","",196,null],[11,"sub","","",196,null],[11,"add","","",196,null],[11,"add","","",196,null],[11,"add_assign","","",196,{"i":[{"n":"self"},{"n":"vector"}]}],[11,"add_assign","","",196,{"i":[{"n":"self"},{"n":"vector"}]}],[11,"sub_assign","","",196,{"i":[{"n":"self"},{"n":"vector"}]}],[11,"sub_assign","","",196,{"i":[{"n":"self"},{"n":"vector"}]}],[11,"mul","nalgebra::core","",1,null],[11,"mul","","",1,null],[11,"mul","nalgebra::geometry","",196,null],[11,"mul_assign","","",196,{"i":[{"n":"self"},{"n":"n"}]}],[11,"div","","",196,null],[11,"div_assign","","",196,{"i":[{"n":"self"},{"n":"n"}]}],[11,"origin","","",196,{"o":{"n":"self"}}],[11,"coordinates","","",196,null],[11,"from_coordinates","","",196,null],[11,"scale_by","","",196,{"i":[{"n":"self"},{"n":"n"}],"o":{"n":"self"}}],[11,"meet","","",196,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[11,"join","","",196,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[11,"meet_join","","",196,null],[11,"to_superset","","",196,{"i":[{"n":"self"}],"o":{"n":"point"}}],[11,"is_in_subset","","",196,{"i":[{"n":"point"}],"o":{"n":"bool"}}],[11,"from_superset_unchecked","","",196,{"i":[{"n":"point"}],"o":{"n":"self"}}],[11,"to_superset","","",196,{"i":[{"n":"self"}],"o":{"g":["dimnamesum"],"n":"vectorn"}}],[11,"is_in_subset","","",196,{"i":[{"n":"vectorn"}],"o":{"n":"bool"}}],[11,"from_superset_unchecked","","",196,{"i":[{"n":"vectorn"}],"o":{"n":"self"}}],[11,"deref","","",196,null],[11,"deref_mut","","",196,null],[11,"deref","","",196,null],[11,"deref_mut","","",196,null],[11,"deref","","",196,null],[11,"deref_mut","","",196,null],[11,"deref","","",196,null],[11,"deref_mut","","",196,null],[11,"deref","","",196,null],[11,"deref_mut","","",196,null],[11,"deref","","",196,null],[11,"deref_mut","","",196,null],[11,"fmt","","",201,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"hash","","",201,{"i":[{"n":"self"},{"n":"h"}]}],[11,"clone","","",201,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"matrix","","A reference to the underlying matrix representation of this rotation.",201,{"i":[{"n":"self"}],"o":{"n":"matrixn"}}],[11,"matrix_mut","","A mutable reference to the underlying matrix representation of this rotation.",201,{"i":[{"n":"self"}],"o":{"n":"matrixn"}}],[11,"unwrap","","Unwraps the underlying matrix.",201,{"i":[{"n":"self"}],"o":{"n":"matrixn"}}],[11,"to_homogeneous","","Converts this rotation into its equivalent homogeneous transformation matrix.",201,{"i":[{"n":"self"}],"o":{"g":["dimnamesum"],"n":"matrixn"}}],[11,"from_matrix_unchecked","","Creates a new rotation from the given square matrix.",201,{"i":[{"n":"matrixn"}],"o":{"n":"rotation"}}],[11,"transpose","","Transposes `self`.",201,{"i":[{"n":"self"}],"o":{"n":"rotation"}}],[11,"inverse","","Inverts `self`.",201,{"i":[{"n":"self"}],"o":{"n":"rotation"}}],[11,"transpose_mut","","Transposes `self` in-place.",201,{"i":[{"n":"self"}]}],[11,"inverse_mut","","Inverts `self` in-place.",201,{"i":[{"n":"self"}]}],[11,"eq","","",201,{"i":[{"n":"self"},{"n":"rotation"}],"o":{"n":"bool"}}],[11,"default_epsilon","","",201,null],[11,"default_max_relative","","",201,null],[11,"default_max_ulps","","",201,{"o":{"n":"u32"}}],[11,"relative_eq","","",201,null],[11,"ulps_eq","","",201,null],[11,"fmt","","",201,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"identity","","Creates a new square identity rotation of the given `dimension`.",201,{"o":{"n":"rotation"}}],[11,"one","","",201,{"o":{"n":"self"}}],[11,"index","","",201,null],[11,"mul","","",201,null],[11,"mul","","",201,null],[11,"div","","",201,null],[11,"div","","",201,null],[11,"mul","","",201,null],[11,"mul","","",201,null],[11,"mul","nalgebra::core","",1,null],[11,"mul","","",1,null],[11,"div","","",1,null],[11,"div","","",1,null],[11,"mul","nalgebra::geometry","",201,null],[11,"mul","","",201,null],[11,"mul_assign","","",201,{"i":[{"n":"self"},{"n":"rotation"}]}],[11,"mul_assign","","",201,{"i":[{"n":"self"},{"n":"rotation"}]}],[11,"div_assign","","",201,{"i":[{"n":"self"},{"n":"rotation"}]}],[11,"div_assign","","",201,{"i":[{"n":"self"},{"n":"rotation"}]}],[11,"mul_assign","nalgebra::geometry::rotation_ops","",202,{"i":[{"n":"self"},{"n":"rotation"}]}],[11,"mul_assign","","",202,{"i":[{"n":"self"},{"n":"rotation"}]}],[11,"div_assign","","",202,{"i":[{"n":"self"},{"n":"rotation"}]}],[11,"div_assign","","",202,{"i":[{"n":"self"},{"n":"rotation"}]}],[11,"identity","nalgebra::geometry","",201,{"o":{"n":"self"}}],[11,"inverse","","",201,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"inverse_mut","","",201,{"i":[{"n":"self"}]}],[11,"operate","","",201,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[11,"transform_point","","",201,{"i":[{"n":"self"},{"n":"point"}],"o":{"n":"point"}}],[11,"transform_vector","","",201,{"i":[{"n":"self"},{"n":"vectorn"}],"o":{"n":"vectorn"}}],[11,"inverse_transform_point","","",201,{"i":[{"n":"self"},{"n":"point"}],"o":{"n":"point"}}],[11,"inverse_transform_vector","","",201,{"i":[{"n":"self"},{"n":"vectorn"}],"o":{"n":"vectorn"}}],[11,"decompose","","",201,null],[11,"append_translation","","",201,null],[11,"prepend_translation","","",201,null],[11,"append_rotation","","",201,null],[11,"prepend_rotation","","",201,null],[11,"append_scaling","","",201,null],[11,"prepend_scaling","","",201,null],[11,"translation","","",201,{"i":[{"n":"self"}],"o":{"n":"id"}}],[11,"rotation","","",201,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"scaling","","",201,{"i":[{"n":"self"}],"o":{"n":"id"}}],[11,"powf","","",201,{"i":[{"n":"self"},{"n":"n"}],"o":{"n":"option"}}],[11,"rotation_between","","",201,{"i":[{"n":"vectorn"},{"n":"vectorn"}],"o":{"n":"option"}}],[11,"scaled_rotation_between","","",201,{"i":[{"n":"vectorn"},{"n":"vectorn"},{"n":"n"}],"o":{"n":"option"}}],[11,"to_superset","","",201,{"i":[{"n":"self"}],"o":{"n":"rotation"}}],[11,"is_in_subset","","",201,{"i":[{"n":"rotation"}],"o":{"n":"bool"}}],[11,"from_superset_unchecked","","",201,{"i":[{"n":"rotation"}],"o":{"n":"self"}}],[11,"to_superset","","",201,{"i":[{"n":"self"}],"o":{"n":"isometry"}}],[11,"is_in_subset","","",201,{"i":[{"n":"isometry"}],"o":{"n":"bool"}}],[11,"from_superset_unchecked","","",201,{"i":[{"n":"isometry"}],"o":{"n":"self"}}],[11,"to_superset","","",201,{"i":[{"n":"self"}],"o":{"n":"similarity"}}],[11,"is_in_subset","","",201,{"i":[{"n":"similarity"}],"o":{"n":"bool"}}],[11,"from_superset_unchecked","","",201,{"i":[{"n":"similarity"}],"o":{"n":"self"}}],[11,"to_superset","","",201,{"i":[{"n":"self"}],"o":{"n":"transform"}}],[11,"is_in_subset","","",201,{"i":[{"n":"transform"}],"o":{"n":"bool"}}],[11,"from_superset_unchecked","","",201,{"i":[{"n":"transform"}],"o":{"n":"self"}}],[11,"to_superset","","",201,{"i":[{"n":"self"}],"o":{"g":["dimnamesum"],"n":"matrixn"}}],[11,"is_in_subset","","",201,{"i":[{"n":"matrixn"}],"o":{"n":"bool"}}],[11,"from_superset_unchecked","","",201,{"i":[{"n":"matrixn"}],"o":{"n":"self"}}],[11,"fmt","","",197,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",197,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[11,"hash","","",197,{"i":[{"n":"self"},{"n":"h"}]}],[11,"clone","","",197,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"into_owned","","Moves this unit quaternion into one that owns its data.",197,{"i":[{"n":"self"}],"o":{"n":"quaternion"}}],[11,"clone_owned","","Clones this unit quaternion into one that owns its data.",197,{"i":[{"n":"self"}],"o":{"n":"quaternion"}}],[11,"normalize","","Normalizes this quaternion.",197,{"i":[{"n":"self"}],"o":{"n":"quaternion"}}],[11,"conjugate","","Compute the conjugate of this quaternion.",197,{"i":[{"n":"self"}],"o":{"n":"quaternion"}}],[11,"try_inverse","","Inverts this quaternion if it is not zero.",197,{"i":[{"n":"self"}],"o":{"g":["quaternion"],"n":"option"}}],[11,"lerp","","Linear interpolation between two quaternion.",197,{"i":[{"n":"self"},{"n":"quaternion"},{"n":"n"}],"o":{"n":"quaternion"}}],[11,"vector","","The vector part `(i, j, k)` of this quaternion.",197,{"i":[{"n":"self"}],"o":{"g":["u3","u1","rstride","cstride"],"n":"matrixslice"}}],[11,"scalar","","The scalar part `w` of this quaternion.",197,{"i":[{"n":"self"}],"o":{"n":"n"}}],[11,"as_vector","","Reinterprets this quaternion as a 4D vector.",197,{"i":[{"n":"self"}],"o":{"n":"vector4"}}],[11,"norm","","The norm of this quaternion.",197,{"i":[{"n":"self"}],"o":{"n":"n"}}],[11,"norm_squared","","The squared norm of this quaternion.",197,{"i":[{"n":"self"}],"o":{"n":"n"}}],[11,"polar_decomposition","","The polar decomposition of this quaternion.",197,null],[11,"exp","","Compute the exponential of a quaternion.",197,{"i":[{"n":"self"}],"o":{"n":"quaternion"}}],[11,"exp_eps","","Compute the exponential of a quaternion.",197,{"i":[{"n":"self"},{"n":"n"}],"o":{"n":"quaternion"}}],[11,"ln","","Compute the natural logarithm of a quaternion.",197,{"i":[{"n":"self"}],"o":{"n":"quaternion"}}],[11,"powf","","Raise the quaternion to a given floating power.",197,{"i":[{"n":"self"},{"n":"n"}],"o":{"n":"quaternion"}}],[11,"as_vector_mut","","Transforms this quaternion into its 4D vector form (Vector part, Scalar part).",197,{"i":[{"n":"self"}],"o":{"n":"vector4"}}],[11,"vector_mut","","The mutable vector part `(i, j, k)` of this quaternion.",197,{"i":[{"n":"self"}],"o":{"g":["u3","u1","rstride","cstride"],"n":"matrixslicemut"}}],[11,"conjugate_mut","","Replaces this quaternion by its conjugate.",197,{"i":[{"n":"self"}]}],[11,"try_inverse_mut","","Inverts this quaternion in-place if it is not zero.",197,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"normalize_mut","","Normalizes this quaternion.",197,{"i":[{"n":"self"}],"o":{"n":"n"}}],[11,"default_epsilon","","",197,null],[11,"default_max_relative","","",197,null],[11,"default_max_ulps","","",197,{"o":{"n":"u32"}}],[11,"relative_eq","","",197,null],[11,"ulps_eq","","",197,null],[11,"fmt","","",197,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from_vector","","Creates a quaternion from a 4D vector. The quaternion scalar part corresponds to the `w` vector component.",197,{"i":[{"n":"vector4"}],"o":{"n":"self"}}],[11,"new","","Creates a new quaternion from its individual components. Note that the arguments order does not follow the storage order.",197,{"i":[{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"}],"o":{"n":"self"}}],[11,"from_parts","","Creates a new quaternion from its scalar and vector parts. Note that the arguments order does not follow the storage order.",197,{"i":[{"n":"n"},{"g":["u3"],"n":"vector"}],"o":{"n":"self"}}],[11,"from_polar_decomposition","","Creates a new quaternion from its polar decomposition.",197,{"i":[{"n":"n"},{"n":"n"},{"g":["vector"],"n":"unit"}],"o":{"n":"self"}}],[11,"identity","","The quaternion multiplicative identity.",197,{"o":{"n":"self"}}],[11,"one","","",197,{"o":{"n":"self"}}],[11,"zero","","",197,{"o":{"n":"self"}}],[11,"is_zero","","",197,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"rand","","",197,{"i":[{"n":"r"}],"o":{"n":"self"}}],[11,"index","","",197,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"n"}}],[11,"index_mut","","",197,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"n"}}],[11,"add","","",197,null],[11,"add","","",197,null],[11,"sub","","",197,null],[11,"sub","","",197,null],[11,"mul","","",197,null],[11,"mul","","",197,null],[11,"mul","","",201,null],[11,"mul","","",201,null],[11,"div","","",201,null],[11,"div","","",201,null],[11,"mul","","",197,null],[11,"mul_assign","","",197,{"i":[{"n":"self"},{"n":"n"}]}],[11,"div","","",197,null],[11,"div_assign","","",197,{"i":[{"n":"self"},{"n":"n"}]}],[11,"neg","","",197,null],[11,"add_assign","","",197,{"i":[{"n":"self"},{"n":"quaternion"}]}],[11,"add_assign","","",197,{"i":[{"n":"self"},{"n":"quaternion"}]}],[11,"sub_assign","","",197,{"i":[{"n":"self"},{"n":"quaternion"}]}],[11,"sub_assign","","",197,{"i":[{"n":"self"},{"n":"quaternion"}]}],[11,"mul_assign","","",197,{"i":[{"n":"self"},{"n":"quaternion"}]}],[11,"mul_assign","","",197,{"i":[{"n":"self"},{"n":"quaternion"}]}],[11,"identity","","",197,{"o":{"n":"self"}}],[11,"identity","","",197,{"o":{"n":"self"}}],[11,"operate","","",197,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[11,"operate","","",197,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[11,"inverse","","",197,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"multiply_by","","",197,{"i":[{"n":"self"},{"n":"n"}],"o":{"n":"self"}}],[11,"dimension","","",197,{"o":{"n":"usize"}}],[11,"canonical_basis_element","","",197,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"dot","","",197,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"n"}}],[11,"component_unchecked","","",197,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"n"}}],[11,"component_unchecked_mut","","",197,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"n"}}],[11,"norm_squared","","",197,{"i":[{"n":"self"}],"o":{"n":"n"}}],[11,"norm","","",197,{"i":[{"n":"self"}],"o":{"n":"n"}}],[11,"normalize","","",197,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"normalize_mut","","",197,{"i":[{"n":"self"}],"o":{"n":"n"}}],[11,"try_normalize","","",197,{"i":[{"n":"self"},{"n":"n"}],"o":{"n":"option"}}],[11,"try_normalize_mut","","",197,{"i":[{"n":"self"},{"n":"n"}],"o":{"n":"option"}}],[11,"to_superset","","",197,{"i":[{"n":"self"}],"o":{"n":"quaternion"}}],[11,"is_in_subset","","",197,{"i":[{"n":"quaternion"}],"o":{"n":"bool"}}],[11,"from_superset_unchecked","","",197,{"i":[{"n":"quaternion"}],"o":{"n":"self"}}],[11,"deref","","",197,null],[11,"deref_mut","","",197,null],[11,"mul","","",201,null],[11,"mul","","",201,null],[11,"div","","",201,null],[11,"div","","",201,null],[11,"mul","","",198,null],[11,"mul","","",198,null],[11,"mul_assign","","",201,{"i":[{"n":"self"},{"n":"unitcomplex"}]}],[11,"mul_assign","","",201,{"i":[{"n":"self"},{"n":"unitcomplex"}]}],[11,"div_assign","","",201,{"i":[{"n":"self"},{"n":"unitcomplex"}]}],[11,"div_assign","","",201,{"i":[{"n":"self"},{"n":"unitcomplex"}]}],[11,"fmt","","",198,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"hash","","",198,{"i":[{"n":"self"},{"n":"h"}]}],[11,"clone","","",198,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"from_vector","","Creates a new translation from the given vector.",198,{"i":[{"n":"vectorn"}],"o":{"n":"translation"}}],[11,"inverse","","Inverts `self`.",198,{"i":[{"n":"self"}],"o":{"n":"translation"}}],[11,"to_homogeneous","","Converts this translation into its equivalent homogeneous transformation matrix.",198,{"i":[{"n":"self"}],"o":{"g":["dimnamesum"],"n":"matrixn"}}],[11,"inverse_mut","","Inverts `self` in-place.",198,{"i":[{"n":"self"}]}],[11,"eq","","",198,{"i":[{"n":"self"},{"n":"translation"}],"o":{"n":"bool"}}],[11,"default_epsilon","","",198,null],[11,"default_max_relative","","",198,null],[11,"default_max_ulps","","",198,{"o":{"n":"u32"}}],[11,"relative_eq","","",198,null],[11,"ulps_eq","","",198,null],[11,"fmt","","",198,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"identity","","Creates a new square identity rotation of the given `dimension`.",198,{"o":{"n":"translation"}}],[11,"one","","",198,{"o":{"n":"self"}}],[11,"rand","","",198,{"i":[{"n":"g"}],"o":{"n":"self"}}],[11,"new","","Initializes this matrix from its components.",198,{"i":[{"n":"n"}],"o":{"n":"self"}}],[11,"new","","Initializes this matrix from its components.",198,{"i":[{"n":"n"},{"n":"n"}],"o":{"n":"self"}}],[11,"new","","Initializes this matrix from its components.",198,{"i":[{"n":"n"},{"n":"n"},{"n":"n"}],"o":{"n":"self"}}],[11,"new","","Initializes this matrix from its components.",198,{"i":[{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"}],"o":{"n":"self"}}],[11,"new","","Initializes this matrix from its components.",198,{"i":[{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"}],"o":{"n":"self"}}],[11,"new","","Initializes this matrix from its components.",198,{"i":[{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"}],"o":{"n":"self"}}],[11,"mul","","",198,null],[11,"mul","","",198,null],[11,"div","","",198,null],[11,"div","","",198,null],[11,"mul","","",198,null],[11,"mul","","",198,null],[11,"mul_assign","","",198,{"i":[{"n":"self"},{"n":"translation"}]}],[11,"mul_assign","","",198,{"i":[{"n":"self"},{"n":"translation"}]}],[11,"div_assign","","",198,{"i":[{"n":"self"},{"n":"translation"}]}],[11,"div_assign","","",198,{"i":[{"n":"self"},{"n":"translation"}]}],[11,"identity","","",198,{"o":{"n":"self"}}],[11,"inverse","","",198,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"inverse_mut","","",198,{"i":[{"n":"self"}]}],[11,"operate","","",198,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[11,"transform_point","","",198,{"i":[{"n":"self"},{"n":"point"}],"o":{"n":"point"}}],[11,"transform_vector","","",198,{"i":[{"n":"self"},{"n":"vectorn"}],"o":{"n":"vectorn"}}],[11,"inverse_transform_point","","",198,{"i":[{"n":"self"},{"n":"point"}],"o":{"n":"point"}}],[11,"inverse_transform_vector","","",198,{"i":[{"n":"self"},{"n":"vectorn"}],"o":{"n":"vectorn"}}],[11,"decompose","","",198,null],[11,"append_translation","","",198,null],[11,"prepend_translation","","",198,null],[11,"append_rotation","","",198,null],[11,"prepend_rotation","","",198,null],[11,"append_scaling","","",198,null],[11,"prepend_scaling","","",198,null],[11,"translation","","",198,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"rotation","","",198,{"i":[{"n":"self"}],"o":{"n":"id"}}],[11,"scaling","","",198,{"i":[{"n":"self"}],"o":{"n":"id"}}],[11,"to_vector","","",198,{"i":[{"n":"self"}],"o":{"n":"vectorn"}}],[11,"from_vector","","",198,{"i":[{"n":"vectorn"}],"o":{"n":"option"}}],[11,"powf","","",198,{"i":[{"n":"self"},{"n":"n"}],"o":{"n":"option"}}],[11,"translation_between","","",198,{"i":[{"n":"point"},{"n":"point"}],"o":{"n":"option"}}],[11,"to_superset","","",198,{"i":[{"n":"self"}],"o":{"n":"translation"}}],[11,"is_in_subset","","",198,{"i":[{"n":"translation"}],"o":{"n":"bool"}}],[11,"from_superset_unchecked","","",198,{"i":[{"n":"translation"}],"o":{"n":"self"}}],[11,"to_superset","","",198,{"i":[{"n":"self"}],"o":{"n":"isometry"}}],[11,"is_in_subset","","",198,{"i":[{"n":"isometry"}],"o":{"n":"bool"}}],[11,"from_superset_unchecked","","",198,{"i":[{"n":"isometry"}],"o":{"n":"self"}}],[11,"to_superset","","",198,{"i":[{"n":"self"}],"o":{"n":"similarity"}}],[11,"is_in_subset","","",198,{"i":[{"n":"similarity"}],"o":{"n":"bool"}}],[11,"from_superset_unchecked","","",198,{"i":[{"n":"similarity"}],"o":{"n":"self"}}],[11,"to_superset","","",198,{"i":[{"n":"self"}],"o":{"n":"transform"}}],[11,"is_in_subset","","",198,{"i":[{"n":"transform"}],"o":{"n":"bool"}}],[11,"from_superset_unchecked","","",198,{"i":[{"n":"transform"}],"o":{"n":"self"}}],[11,"to_superset","","",198,{"i":[{"n":"self"}],"o":{"g":["dimnamesum"],"n":"matrixn"}}],[11,"is_in_subset","","",198,{"i":[{"n":"matrixn"}],"o":{"n":"bool"}}],[11,"from_superset_unchecked","","",198,{"i":[{"n":"matrixn"}],"o":{"n":"self"}}],[11,"fmt","","",199,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"hash","","",199,{"i":[{"n":"self"},{"n":"h"}]}],[11,"clone","","",199,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"from_parts","","Creates a new isometry from its rotational and translational parts.",199,{"i":[{"n":"translation"},{"n":"r"}],"o":{"n":"isometry"}}],[11,"inverse","","Inverts `self`.",199,{"i":[{"n":"self"}],"o":{"n":"isometry"}}],[11,"inverse_mut","","Inverts `self`.",199,{"i":[{"n":"self"}]}],[11,"append_translation_mut","","Appends to `self` the given translation in-place.",199,{"i":[{"n":"self"},{"n":"translation"}]}],[11,"append_rotation_mut","","Appends to `self` the given rotation in-place.",199,{"i":[{"n":"self"},{"n":"r"}]}],[11,"append_rotation_wrt_point_mut","","Appends in-place to `self` a rotation centered at the point `p`, i.e., the rotation that lets `p` invariant.",199,{"i":[{"n":"self"},{"n":"r"},{"n":"point"}]}],[11,"append_rotation_wrt_center_mut","","Appends in-place to `self` a rotation centered at the point with coordinates `self.translation`.",199,{"i":[{"n":"self"},{"n":"r"}]}],[11,"to_homogeneous","","Converts this isometry into its equivalent homogeneous transformation matrix.",199,{"i":[{"n":"self"}],"o":{"g":["dimnamesum"],"n":"matrixn"}}],[11,"eq","","",199,{"i":[{"n":"self"},{"n":"isometry"}],"o":{"n":"bool"}}],[11,"default_epsilon","","",199,null],[11,"default_max_relative","","",199,null],[11,"default_max_ulps","","",199,{"o":{"n":"u32"}}],[11,"relative_eq","","",199,null],[11,"ulps_eq","","",199,null],[11,"fmt","","",199,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"identity","","Creates a new identity isometry.",199,{"o":{"n":"self"}}],[11,"rotation_wrt_point","","The isometry that applies the rotation `r` with its axis passing through the point `p`. This effectively lets `p` invariant.",199,{"i":[{"n":"r"},{"n":"point"}],"o":{"n":"self"}}],[11,"one","","Creates a new identity isometry.",199,{"o":{"n":"self"}}],[11,"rand","","",199,{"i":[{"n":"g"}],"o":{"n":"self"}}],[11,"new","","Creates a new isometry from a translation and a rotation angle.",199,{"i":[{"n":"vector2"},{"n":"n"}],"o":{"n":"self"}}],[11,"new","","Creates a new isometry from a translation and a rotation angle.",199,{"i":[{"n":"vector2"},{"n":"n"}],"o":{"n":"self"}}],[11,"new","","Creates a new isometry from a translation and a rotation axis-angle.",199,{"i":[{"n":"vector3"},{"n":"vector3"}],"o":{"n":"self"}}],[11,"new_observer_frame","","Creates an isometry that corresponds to the local frame of an observer standing at the point `eye` and looking toward `target`.",199,{"i":[{"n":"point3"},{"n":"point3"},{"n":"vector3"}],"o":{"n":"self"}}],[11,"look_at_rh","","Builds a right-handed look-at view matrix.",199,{"i":[{"n":"point3"},{"n":"point3"},{"n":"vector3"}],"o":{"n":"self"}}],[11,"look_at_lh","","Builds a left-handed look-at view matrix.",199,{"i":[{"n":"point3"},{"n":"point3"},{"n":"vector3"}],"o":{"n":"self"}}],[11,"new","","Creates a new isometry from a translation and a rotation axis-angle.",199,{"i":[{"n":"vector3"},{"n":"vector3"}],"o":{"n":"self"}}],[11,"new_observer_frame","","Creates an isometry that corresponds to the local frame of an observer standing at the point `eye` and looking toward `target`.",199,{"i":[{"n":"point3"},{"n":"point3"},{"n":"vector3"}],"o":{"n":"self"}}],[11,"look_at_rh","","Builds a right-handed look-at view matrix.",199,{"i":[{"n":"point3"},{"n":"point3"},{"n":"vector3"}],"o":{"n":"self"}}],[11,"look_at_lh","","Builds a left-handed look-at view matrix.",199,{"i":[{"n":"point3"},{"n":"point3"},{"n":"vector3"}],"o":{"n":"self"}}],[11,"mul","","",199,null],[11,"mul","","",199,null],[11,"div","","",199,null],[11,"div","","",199,null],[11,"mul_assign","","",199,{"i":[{"n":"self"},{"n":"translation"}]}],[11,"mul_assign","","",199,{"i":[{"n":"self"},{"n":"translation"}]}],[11,"mul_assign","","",199,{"i":[{"n":"self"},{"n":"isometry"}]}],[11,"mul_assign","","",199,{"i":[{"n":"self"},{"n":"isometry"}]}],[11,"div_assign","","",199,{"i":[{"n":"self"},{"n":"isometry"}]}],[11,"div_assign","","",199,{"i":[{"n":"self"},{"n":"isometry"}]}],[11,"mul_assign","","",199,{"i":[{"n":"self"},{"n":"r"}]}],[11,"mul_assign","","",199,{"i":[{"n":"self"},{"n":"r"}]}],[11,"div_assign","","",199,{"i":[{"n":"self"},{"n":"r"}]}],[11,"div_assign","","",199,{"i":[{"n":"self"},{"n":"r"}]}],[11,"mul","","",199,null],[11,"mul","","",199,null],[11,"div","","",199,null],[11,"div","","",199,null],[11,"mul","","",199,null],[11,"mul","","",199,null],[11,"mul","","",199,null],[11,"mul","","",199,null],[11,"mul","","",199,null],[11,"mul","","",199,null],[11,"mul","","",199,null],[11,"mul","","",199,null],[11,"mul","","",198,null],[11,"mul","","",198,null],[11,"mul","","",201,null],[11,"mul","","",201,null],[11,"mul","","",201,null],[11,"mul","","",201,null],[11,"div","","",201,null],[11,"div","","",201,null],[11,"mul","","",198,null],[11,"mul","","",198,null],[11,"mul","","",198,null],[11,"mul","","",198,null],[11,"identity","","",199,{"o":{"n":"self"}}],[11,"inverse","","",199,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"inverse_mut","","",199,{"i":[{"n":"self"}]}],[11,"operate","","",199,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[11,"transform_point","","",199,{"i":[{"n":"self"},{"n":"point"}],"o":{"n":"point"}}],[11,"transform_vector","","",199,{"i":[{"n":"self"},{"n":"vectorn"}],"o":{"n":"vectorn"}}],[11,"inverse_transform_point","","",199,{"i":[{"n":"self"},{"n":"point"}],"o":{"n":"point"}}],[11,"inverse_transform_vector","","",199,{"i":[{"n":"self"},{"n":"vectorn"}],"o":{"n":"vectorn"}}],[11,"decompose","","",199,null],[11,"append_translation","","",199,null],[11,"prepend_translation","","",199,null],[11,"append_rotation","","",199,null],[11,"prepend_rotation","","",199,null],[11,"append_scaling","","",199,null],[11,"prepend_scaling","","",199,null],[11,"append_rotation_wrt_point","","",199,null],[11,"translation","","",199,{"i":[{"n":"self"}],"o":{"n":"translation"}}],[11,"rotation","","",199,{"i":[{"n":"self"}],"o":{"n":"r"}}],[11,"scaling","","",199,{"i":[{"n":"self"}],"o":{"n":"id"}}],[11,"to_superset","","",199,{"i":[{"n":"self"}],"o":{"n":"isometry"}}],[11,"is_in_subset","","",199,{"i":[{"n":"isometry"}],"o":{"n":"bool"}}],[11,"from_superset_unchecked","","",199,{"i":[{"n":"isometry"}],"o":{"n":"self"}}],[11,"to_superset","","",199,{"i":[{"n":"self"}],"o":{"n":"similarity"}}],[11,"is_in_subset","","",199,{"i":[{"n":"similarity"}],"o":{"n":"bool"}}],[11,"from_superset_unchecked","","",199,{"i":[{"n":"similarity"}],"o":{"n":"self"}}],[11,"to_superset","","",199,{"i":[{"n":"self"}],"o":{"n":"transform"}}],[11,"is_in_subset","","",199,{"i":[{"n":"transform"}],"o":{"n":"bool"}}],[11,"from_superset_unchecked","","",199,{"i":[{"n":"transform"}],"o":{"n":"self"}}],[11,"to_superset","","",199,{"i":[{"n":"self"}],"o":{"g":["dimnamesum"],"n":"matrixn"}}],[11,"is_in_subset","","",199,{"i":[{"n":"matrixn"}],"o":{"n":"bool"}}],[11,"from_superset_unchecked","","",199,{"i":[{"n":"matrixn"}],"o":{"n":"self"}}],[11,"fmt","","",200,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"hash","","",200,{"i":[{"n":"self"},{"n":"h"}]}],[11,"clone","","",200,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"from_parts","","Creates a new similarity from its rotational and translational parts.",200,{"i":[{"n":"translation"},{"n":"r"},{"n":"n"}],"o":{"n":"similarity"}}],[11,"from_isometry","","Creates a new similarity from its rotational and translational parts.",200,{"i":[{"n":"isometry"},{"n":"n"}],"o":{"n":"similarity"}}],[11,"from_scaling","","Creates a new similarity that applies only a scaling factor.",200,{"i":[{"n":"n"}],"o":{"n":"similarity"}}],[11,"inverse","","Inverts `self`.",200,{"i":[{"n":"self"}],"o":{"n":"similarity"}}],[11,"inverse_mut","","Inverts `self` in-place.",200,{"i":[{"n":"self"}]}],[11,"set_scaling","","The scaling factor of this similarity transformation.",200,{"i":[{"n":"self"},{"n":"n"}]}],[11,"scaling","","The scaling factor of this similarity transformation.",200,{"i":[{"n":"self"}],"o":{"n":"n"}}],[11,"prepend_scaling","","The similarity transformation that applies a scaling factor `scaling` before `self`.",200,{"i":[{"n":"self"},{"n":"n"}],"o":{"n":"self"}}],[11,"append_scaling","","The similarity transformation that applies a scaling factor `scaling` after `self`.",200,{"i":[{"n":"self"},{"n":"n"}],"o":{"n":"self"}}],[11,"prepend_scaling_mut","","Sets `self` to the similarity transformation that applies a scaling factor `scaling` before `self`.",200,{"i":[{"n":"self"},{"n":"n"}]}],[11,"append_scaling_mut","","Sets `self` to the similarity transformation that applies a scaling factor `scaling` after `self`.",200,{"i":[{"n":"self"},{"n":"n"}]}],[11,"append_translation_mut","","Appends to `self` the given translation in-place.",200,{"i":[{"n":"self"},{"n":"translation"}]}],[11,"append_rotation_mut","","Appends to `self` the given rotation in-place.",200,{"i":[{"n":"self"},{"n":"r"}]}],[11,"append_rotation_wrt_point_mut","","Appends in-place to `self` a rotation centered at the point `p`, i.e., the rotation that lets `p` invariant.",200,{"i":[{"n":"self"},{"n":"r"},{"n":"point"}]}],[11,"append_rotation_wrt_center_mut","","Appends in-place to `self` a rotation centered at the point with coordinates `self.translation`.",200,{"i":[{"n":"self"},{"n":"r"}]}],[11,"to_homogeneous","","Converts this similarity into its equivalent homogeneous transformation matrix.",200,{"i":[{"n":"self"}],"o":{"g":["dimnamesum"],"n":"matrixn"}}],[11,"eq","","",200,{"i":[{"n":"self"},{"n":"similarity"}],"o":{"n":"bool"}}],[11,"default_epsilon","","",200,null],[11,"default_max_relative","","",200,null],[11,"default_max_ulps","","",200,{"o":{"n":"u32"}}],[11,"relative_eq","","",200,null],[11,"ulps_eq","","",200,null],[11,"fmt","","",200,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"identity","","Creates a new identity similarity.",200,{"o":{"n":"self"}}],[11,"one","","Creates a new identity similarity.",200,{"o":{"n":"self"}}],[11,"rand","","",200,{"i":[{"n":"g"}],"o":{"n":"self"}}],[11,"rotation_wrt_point","","The similarity that applies tha scaling factor `scaling`, followed by the rotation `r` with its axis passing through the point `p`.",200,{"i":[{"n":"r"},{"n":"point"},{"n":"n"}],"o":{"n":"self"}}],[11,"new","","Creates a new similarity from a translation and a rotation angle.",200,{"i":[{"n":"vector2"},{"n":"n"},{"n":"n"}],"o":{"n":"self"}}],[11,"new","","Creates a new similarity from a translation and a rotation angle.",200,{"i":[{"n":"vector2"},{"n":"n"},{"n":"n"}],"o":{"n":"self"}}],[11,"new","","Creates a new similarity from a translation, rotation axis-angle, and scaling factor.",200,{"i":[{"n":"vector3"},{"n":"vector3"},{"n":"n"}],"o":{"n":"self"}}],[11,"new_observer_frame","","Creates an similarity that corresponds to the a scaling factor and a local frame of an observer standing at the point `eye` and looking toward `target`.",200,{"i":[{"n":"point3"},{"n":"point3"},{"n":"vector3"},{"n":"n"}],"o":{"n":"self"}}],[11,"look_at_rh","","Builds a right-handed look-at view matrix including scaling factor.",200,{"i":[{"n":"point3"},{"n":"point3"},{"n":"vector3"},{"n":"n"}],"o":{"n":"self"}}],[11,"look_at_lh","","Builds a left-handed look-at view matrix including a scaling factor.",200,{"i":[{"n":"point3"},{"n":"point3"},{"n":"vector3"},{"n":"n"}],"o":{"n":"self"}}],[11,"new","","Creates a new similarity from a translation, rotation axis-angle, and scaling factor.",200,{"i":[{"n":"vector3"},{"n":"vector3"},{"n":"n"}],"o":{"n":"self"}}],[11,"new_observer_frame","","Creates an similarity that corresponds to the a scaling factor and a local frame of an observer standing at the point `eye` and looking toward `target`.",200,{"i":[{"n":"point3"},{"n":"point3"},{"n":"vector3"},{"n":"n"}],"o":{"n":"self"}}],[11,"look_at_rh","","Builds a right-handed look-at view matrix including scaling factor.",200,{"i":[{"n":"point3"},{"n":"point3"},{"n":"vector3"},{"n":"n"}],"o":{"n":"self"}}],[11,"look_at_lh","","Builds a left-handed look-at view matrix including a scaling factor.",200,{"i":[{"n":"point3"},{"n":"point3"},{"n":"vector3"},{"n":"n"}],"o":{"n":"self"}}],[11,"mul","","",200,null],[11,"mul","","",200,null],[11,"div","","",200,null],[11,"div","","",200,null],[11,"mul_assign","","",200,{"i":[{"n":"self"},{"n":"translation"}]}],[11,"mul_assign","","",200,{"i":[{"n":"self"},{"n":"translation"}]}],[11,"mul_assign","","",200,{"i":[{"n":"self"},{"n":"similarity"}]}],[11,"mul_assign","","",200,{"i":[{"n":"self"},{"n":"similarity"}]}],[11,"div_assign","","",200,{"i":[{"n":"self"},{"n":"similarity"}]}],[11,"div_assign","","",200,{"i":[{"n":"self"},{"n":"similarity"}]}],[11,"mul_assign","","",200,{"i":[{"n":"self"},{"n":"isometry"}]}],[11,"mul_assign","","",200,{"i":[{"n":"self"},{"n":"isometry"}]}],[11,"div_assign","","",200,{"i":[{"n":"self"},{"n":"isometry"}]}],[11,"div_assign","","",200,{"i":[{"n":"self"},{"n":"isometry"}]}],[11,"mul_assign","","",200,{"i":[{"n":"self"},{"n":"r"}]}],[11,"mul_assign","","",200,{"i":[{"n":"self"},{"n":"r"}]}],[11,"div_assign","","",200,{"i":[{"n":"self"},{"n":"r"}]}],[11,"div_assign","","",200,{"i":[{"n":"self"},{"n":"r"}]}],[11,"mul","","",200,null],[11,"mul","","",200,null],[11,"div","","",200,null],[11,"div","","",200,null],[11,"mul","","",200,null],[11,"mul","","",200,null],[11,"div","","",200,null],[11,"div","","",200,null],[11,"mul","","",199,null],[11,"mul","","",199,null],[11,"div","","",199,null],[11,"div","","",199,null],[11,"mul","","",200,null],[11,"mul","","",200,null],[11,"mul","","",200,null],[11,"mul","","",200,null],[11,"mul","","",200,null],[11,"mul","","",200,null],[11,"mul","","",198,null],[11,"mul","","",198,null],[11,"mul","","",201,null],[11,"mul","","",201,null],[11,"div","","",201,null],[11,"div","","",201,null],[11,"identity","","",200,{"o":{"n":"self"}}],[11,"inverse","","",200,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"inverse_mut","","",200,{"i":[{"n":"self"}]}],[11,"operate","","",200,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[11,"transform_point","","",200,{"i":[{"n":"self"},{"n":"point"}],"o":{"n":"point"}}],[11,"transform_vector","","",200,{"i":[{"n":"self"},{"n":"vectorn"}],"o":{"n":"vectorn"}}],[11,"inverse_transform_point","","",200,{"i":[{"n":"self"},{"n":"point"}],"o":{"n":"point"}}],[11,"inverse_transform_vector","","",200,{"i":[{"n":"self"},{"n":"vectorn"}],"o":{"n":"vectorn"}}],[11,"decompose","","",200,null],[11,"append_translation","","",200,null],[11,"prepend_translation","","",200,null],[11,"append_rotation","","",200,null],[11,"prepend_rotation","","",200,null],[11,"append_scaling","","",200,null],[11,"prepend_scaling","","",200,null],[11,"append_rotation_wrt_point","","",200,null],[11,"translation","","",200,{"i":[{"n":"self"}],"o":{"n":"translation"}}],[11,"rotation","","",200,{"i":[{"n":"self"}],"o":{"n":"r"}}],[11,"scaling","","",200,{"i":[{"n":"self"}],"o":{"n":"n"}}],[11,"to_superset","","",200,{"i":[{"n":"self"}],"o":{"n":"similarity"}}],[11,"is_in_subset","","",200,{"i":[{"n":"similarity"}],"o":{"n":"bool"}}],[11,"from_superset_unchecked","","",200,{"i":[{"n":"similarity"}],"o":{"n":"self"}}],[11,"to_superset","","",200,{"i":[{"n":"self"}],"o":{"n":"transform"}}],[11,"is_in_subset","","",200,{"i":[{"n":"transform"}],"o":{"n":"bool"}}],[11,"from_superset_unchecked","","",200,{"i":[{"n":"transform"}],"o":{"n":"self"}}],[11,"to_superset","","",200,{"i":[{"n":"self"}],"o":{"g":["dimnamesum"],"n":"matrixn"}}],[11,"is_in_subset","","",200,{"i":[{"n":"matrixn"}],"o":{"n":"bool"}}],[11,"from_superset_unchecked","","",200,{"i":[{"n":"matrixn"}],"o":{"n":"self"}}],[11,"fmt","","",203,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",203,{"i":[{"n":"self"}],"o":{"n":"tgeneral"}}],[11,"hash","","",203,null],[11,"eq","","",203,{"i":[{"n":"self"},{"n":"tgeneral"}],"o":{"n":"bool"}}],[11,"fmt","","",204,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",204,{"i":[{"n":"self"}],"o":{"n":"tprojective"}}],[11,"hash","","",204,null],[11,"eq","","",204,{"i":[{"n":"self"},{"n":"tprojective"}],"o":{"n":"bool"}}],[11,"fmt","","",205,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",205,{"i":[{"n":"self"}],"o":{"n":"taffine"}}],[11,"hash","","",205,null],[11,"eq","","",205,{"i":[{"n":"self"},{"n":"taffine"}],"o":{"n":"bool"}}],[11,"check_homogeneous_invariants","","",203,{"i":[{"n":"matrixn"}],"o":{"n":"bool"}}],[11,"check_homogeneous_invariants","","",204,{"i":[{"n":"matrixn"}],"o":{"n":"bool"}}],[11,"has_normalizer","","",205,{"o":{"n":"bool"}}],[11,"check_homogeneous_invariants","","",205,{"i":[{"n":"matrixn"}],"o":{"n":"bool"}}],[11,"fmt","","",206,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",206,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"eq","","",206,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[11,"from_matrix_unchecked","","Creates a new transformation from the given homogeneous matrix. The transformation category of `Self` is not checked to be verified by the given matrix.",206,{"i":[{"g":["dimnamesum"],"n":"matrixn"}],"o":{"n":"self"}}],[11,"unwrap","","The underlying matrix.",206,{"i":[{"n":"self"}],"o":{"g":["dimnamesum"],"n":"matrixn"}}],[11,"matrix","","A reference to the underlynig matrix.",206,{"i":[{"n":"self"}],"o":{"n":"matrixn"}}],[11,"matrix_mut_unchecked","","A mutable reference to the underlying matrix.",206,{"i":[{"n":"self"}],"o":{"n":"matrixn"}}],[11,"set_category","","Sets the category of this transform.",206,{"i":[{"n":"self"}],"o":{"n":"transform"}}],[11,"clone_owned","","Clones this transform into one that owns its data.",206,{"i":[{"n":"self"}],"o":{"n":"transform"}}],[11,"to_homogeneous","","Converts this transform into its equivalent homogeneous transformation matrix.",206,{"i":[{"n":"self"}],"o":{"g":["dimnamesum"],"n":"matrixn"}}],[11,"try_inverse","","Attempts to invert this transformation. You may use `.inverse` instead of this transformation has a subcategory of `TProjective`.",206,{"i":[{"n":"self"}],"o":{"g":["transform"],"n":"option"}}],[11,"inverse","","Inverts this transformation. Use `.try_inverse` if this transform has the `TGeneral` category (it may not be invertible).",206,{"i":[{"n":"self"}],"o":{"n":"transform"}}],[11,"try_inverse_mut","","Attempts to invert this transformation in-place. You may use `.inverse_mut` instead of this transformation has a subcategory of `TProjective`.",206,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"inverse_mut","","Inverts this transformation in-place. Use `.try_inverse_mut` if this transform has the `TGeneral` category (it may not be invertible).",206,{"i":[{"n":"self"}]}],[11,"matrix_mut","","A mutable reference to underlying matrix. Use `.matrix_mut_unchecked` instead if this transformation category is not `TGeneral`.",206,{"i":[{"n":"self"}],"o":{"n":"matrixn"}}],[11,"identity","","Creates a new identity transform.",206,{"o":{"n":"self"}}],[11,"one","","Creates a new identity transform.",206,{"o":{"n":"self"}}],[11,"index","","",206,null],[11,"index_mut","","",206,null],[11,"mul","","",206,null],[11,"mul","","",206,null],[11,"mul","","",206,null],[11,"mul","","",206,null],[11,"mul","","",206,null],[11,"mul","","",206,null],[11,"mul","","",206,null],[11,"mul","","",206,null],[11,"mul","","",201,null],[11,"mul","","",201,null],[11,"mul","","",206,null],[11,"mul","","",206,null],[11,"mul","","",206,null],[11,"mul","","",206,null],[11,"mul","","",199,null],[11,"mul","","",199,null],[11,"mul","","",206,null],[11,"mul","","",206,null],[11,"mul","","",200,null],[11,"mul","","",200,null],[11,"mul","","",206,null],[11,"mul","","",206,null],[11,"mul","","",198,null],[11,"mul","","",198,null],[11,"div","","",206,null],[11,"div","","",206,null],[11,"div","","",206,null],[11,"div","","",206,null],[11,"div","","",201,null],[11,"div","","",201,null],[11,"div","","",206,null],[11,"div","","",206,null],[11,"div","","",206,null],[11,"div","","",206,null],[11,"div","","",198,null],[11,"div","","",198,null],[11,"mul_assign","","",206,{"i":[{"n":"self"},{"n":"transform"}]}],[11,"mul_assign","","",206,{"i":[{"n":"self"},{"n":"transform"}]}],[11,"mul_assign","","",206,{"i":[{"n":"self"},{"n":"similarity"}]}],[11,"mul_assign","","",206,{"i":[{"n":"self"},{"n":"similarity"}]}],[11,"mul_assign","","",206,{"i":[{"n":"self"},{"n":"isometry"}]}],[11,"mul_assign","","",206,{"i":[{"n":"self"},{"n":"isometry"}]}],[11,"mul_assign","","",206,{"i":[{"n":"self"},{"n":"translation"}]}],[11,"mul_assign","","",206,{"i":[{"n":"self"},{"n":"translation"}]}],[11,"mul_assign","","",206,{"i":[{"n":"self"},{"n":"rotation"}]}],[11,"mul_assign","","",206,{"i":[{"n":"self"},{"n":"rotation"}]}],[11,"mul_assign","","",206,{"i":[{"n":"self"},{"n":"unitquaternion"}]}],[11,"mul_assign","","",206,{"i":[{"n":"self"},{"n":"unitquaternion"}]}],[11,"div_assign","","",206,{"i":[{"n":"self"},{"n":"transform"}]}],[11,"div_assign","","",206,{"i":[{"n":"self"},{"n":"transform"}]}],[11,"div_assign","","",206,{"i":[{"n":"self"},{"n":"translation"}]}],[11,"div_assign","","",206,{"i":[{"n":"self"},{"n":"translation"}]}],[11,"div_assign","","",206,{"i":[{"n":"self"},{"n":"rotation"}]}],[11,"div_assign","","",206,{"i":[{"n":"self"},{"n":"rotation"}]}],[11,"div_assign","","",206,{"i":[{"n":"self"},{"n":"unitquaternion"}]}],[11,"div_assign","","",206,{"i":[{"n":"self"},{"n":"unitquaternion"}]}],[11,"identity","","",206,{"o":{"n":"self"}}],[11,"inverse","","",206,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"inverse_mut","","",206,{"i":[{"n":"self"}]}],[11,"operate","","",206,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[11,"transform_point","","",206,{"i":[{"n":"self"},{"n":"point"}],"o":{"n":"point"}}],[11,"transform_vector","","",206,{"i":[{"n":"self"},{"n":"vectorn"}],"o":{"n":"vectorn"}}],[11,"inverse_transform_point","","",206,{"i":[{"n":"self"},{"n":"point"}],"o":{"n":"point"}}],[11,"inverse_transform_vector","","",206,{"i":[{"n":"self"},{"n":"vectorn"}],"o":{"n":"vectorn"}}],[11,"to_superset","","",206,{"i":[{"n":"self"}],"o":{"n":"transform"}}],[11,"is_in_subset","","",206,{"i":[{"n":"transform"}],"o":{"n":"bool"}}],[11,"from_superset_unchecked","","",206,{"i":[{"n":"transform"}],"o":{"n":"self"}}],[11,"to_superset","","",206,{"i":[{"n":"self"}],"o":{"g":["dimnamesum"],"n":"matrixn"}}],[11,"is_in_subset","","",206,{"i":[{"n":"matrixn"}],"o":{"n":"bool"}}],[11,"from_superset_unchecked","","",206,{"i":[{"n":"matrixn"}],"o":{"n":"self"}}],[11,"new","","Creates a new reflection wrt the plane orthogonal to the given axis and bias.",207,{"i":[{"g":["vector"],"n":"unit"},{"n":"n"}],"o":{"n":"reflection"}}],[11,"new_containing_point","","Creates a new reflection wrt. the plane orthogonal to the given axis and that contains the point `pt`.",207,{"i":[{"g":["vector"],"n":"unit"},{"n":"point"}],"o":{"n":"reflection"}}],[11,"axis","","The reflexion axis.",207,{"i":[{"n":"self"}],"o":{"n":"vector"}}],[11,"reflect","","Applies the reflection to the columns of `rhs`.",207,{"i":[{"n":"self"},{"n":"matrix"}]}],[11,"reflect_rows","","Applies the reflection to the rows of `rhs`.",207,{"i":[{"n":"self"},{"n":"matrix"},{"n":"vector"}]}],[11,"clone","","",208,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"fmt","","",208,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"eq","","",208,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[11,"new","","Creates a new orthographic projection matrix.",208,{"i":[{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"}],"o":{"n":"self"}}],[11,"from_matrix_unchecked","","Wraps the given matrix to interpret it as a 3D orthographic matrix.",208,{"i":[{"n":"matrix4"}],"o":{"n":"self"}}],[11,"from_fov","","Creates a new orthographic projection matrix from an aspect ratio and the vertical field of view.",208,{"i":[{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"}],"o":{"n":"self"}}],[11,"inverse","","Retrieves the inverse of the underlying homogeneous matrix.",208,{"i":[{"n":"self"}],"o":{"n":"matrix4"}}],[11,"to_homogeneous","","Computes the corresponding homogeneous matrix.",208,{"i":[{"n":"self"}],"o":{"n":"matrix4"}}],[11,"as_matrix","","A reference to the underlying homogeneous transformation matrix.",208,{"i":[{"n":"self"}],"o":{"n":"matrix4"}}],[11,"unwrap","","Retrieves the underlying homogeneous matrix.",208,{"i":[{"n":"self"}],"o":{"n":"matrix4"}}],[11,"left","","The smallest x-coordinate of the view cuboid.",208,{"i":[{"n":"self"}],"o":{"n":"n"}}],[11,"right","","The largest x-coordinate of the view cuboid.",208,{"i":[{"n":"self"}],"o":{"n":"n"}}],[11,"bottom","","The smallest y-coordinate of the view cuboid.",208,{"i":[{"n":"self"}],"o":{"n":"n"}}],[11,"top","","The largest y-coordinate of the view cuboid.",208,{"i":[{"n":"self"}],"o":{"n":"n"}}],[11,"znear","","The near plane offset of the view cuboid.",208,{"i":[{"n":"self"}],"o":{"n":"n"}}],[11,"zfar","","The far plane offset of the view cuboid.",208,{"i":[{"n":"self"}],"o":{"n":"n"}}],[11,"project_point","","Projects a point. Faster than matrix multiplication.",208,{"i":[{"n":"self"},{"n":"point3"}],"o":{"n":"point3"}}],[11,"unproject_point","","Un-projects a point. Faster than multiplication by the underlying matrix inverse.",208,{"i":[{"n":"self"},{"n":"point3"}],"o":{"n":"point3"}}],[11,"project_vector","","Projects a vector. Faster than matrix multiplication.",208,{"i":[{"n":"self"},{"n":"vector"}],"o":{"n":"vector3"}}],[11,"set_left","","Sets the smallest x-coordinate of the view cuboid.",208,{"i":[{"n":"self"},{"n":"n"}]}],[11,"set_right","","Sets the largest x-coordinate of the view cuboid.",208,{"i":[{"n":"self"},{"n":"n"}]}],[11,"set_bottom","","Sets the smallest y-coordinate of the view cuboid.",208,{"i":[{"n":"self"},{"n":"n"}]}],[11,"set_top","","Sets the largest y-coordinate of the view cuboid.",208,{"i":[{"n":"self"},{"n":"n"}]}],[11,"set_znear","","Sets the near plane offset of the view cuboid.",208,{"i":[{"n":"self"},{"n":"n"}]}],[11,"set_zfar","","Sets the far plane offset of the view cuboid.",208,{"i":[{"n":"self"},{"n":"n"}]}],[11,"set_left_and_right","","Sets the view cuboid coordinates along the `x` axis.",208,{"i":[{"n":"self"},{"n":"n"},{"n":"n"}]}],[11,"set_bottom_and_top","","Sets the view cuboid coordinates along the `y` axis.",208,{"i":[{"n":"self"},{"n":"n"},{"n":"n"}]}],[11,"set_znear_and_zfar","","Sets the near and far plane offsets of the view cuboid.",208,{"i":[{"n":"self"},{"n":"n"},{"n":"n"}]}],[11,"rand","","",208,{"i":[{"n":"r"}],"o":{"n":"self"}}],[11,"clone","","",209,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"fmt","","",209,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"eq","","",209,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"bool"}}],[11,"new","","Creates a new perspective matrix from the aspect ratio, y field of view, and near/far planes.",209,{"i":[{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"}],"o":{"n":"self"}}],[11,"from_matrix_unchecked","","Wraps the given matrix to interpret it as a 3D perspective matrix.",209,{"i":[{"n":"matrix4"}],"o":{"n":"self"}}],[11,"inverse","","Retrieves the inverse of the underlying homogeneous matrix.",209,{"i":[{"n":"self"}],"o":{"n":"matrix4"}}],[11,"to_homogeneous","","Computes the corresponding homogeneous matrix.",209,{"i":[{"n":"self"}],"o":{"n":"matrix4"}}],[11,"as_matrix","","A reference to the underlying homogeneous transformation matrix.",209,{"i":[{"n":"self"}],"o":{"n":"matrix4"}}],[11,"unwrap","","Retrieves the underlying homogeneous matrix.",209,{"i":[{"n":"self"}],"o":{"n":"matrix4"}}],[11,"aspect","","Gets the `width / height` aspect ratio of the view frustrum.",209,{"i":[{"n":"self"}],"o":{"n":"n"}}],[11,"fovy","","Gets the y field of view of the view frustrum.",209,{"i":[{"n":"self"}],"o":{"n":"n"}}],[11,"znear","","Gets the near plane offset of the view frustrum.",209,{"i":[{"n":"self"}],"o":{"n":"n"}}],[11,"zfar","","Gets the far plane offset of the view frustrum.",209,{"i":[{"n":"self"}],"o":{"n":"n"}}],[11,"project_point","","Projects a point. Faster than matrix multiplication.",209,{"i":[{"n":"self"},{"n":"point3"}],"o":{"n":"point3"}}],[11,"unproject_point","","Un-projects a point. Faster than multiplication by the matrix inverse.",209,{"i":[{"n":"self"},{"n":"point3"}],"o":{"n":"point3"}}],[11,"project_vector","","Projects a vector. Faster than matrix multiplication.",209,{"i":[{"n":"self"},{"n":"vector"}],"o":{"n":"vector3"}}],[11,"set_aspect","","Updates this perspective matrix with a new `width / height` aspect ratio of the view frustrum.",209,{"i":[{"n":"self"},{"n":"n"}]}],[11,"set_fovy","","Updates this perspective with a new y field of view of the view frustrum.",209,{"i":[{"n":"self"},{"n":"n"}]}],[11,"set_znear","","Updates this perspective matrix with a new near plane offset of the view frustrum.",209,{"i":[{"n":"self"},{"n":"n"}]}],[11,"set_zfar","","Updates this perspective matrix with a new far plane offset of the view frustrum.",209,{"i":[{"n":"self"},{"n":"n"}]}],[11,"set_znear_and_zfar","","Updates this perspective matrix with new near and far plane offsets of the view frustrum.",209,{"i":[{"n":"self"},{"n":"n"},{"n":"n"}]}],[11,"rand","","",209,{"i":[{"n":"r"}],"o":{"n":"self"}}],[6,"Point1","","A statically sized 1-dimensional column point.",null,null],[6,"Point2","","A statically sized 2-dimensional column point.",null,null],[6,"Point3","","A statically sized 3-dimensional column point.",null,null],[6,"Point4","","A statically sized 4-dimensional column point.",null,null],[6,"Point5","","A statically sized 5-dimensional column point.",null,null],[6,"Point6","","A statically sized 6-dimensional column point.",null,null],[6,"Rotation2","","A 2-dimensional rotation matrix.",null,null],[6,"Rotation3","","A 3-dimensional rotation matrix.",null,null],[6,"UnitQuaternion","","A unit quaternions. May be used to represent a rotation.",null,null],[6,"UnitComplex","","A complex number with a norm equal to 1.",null,null],[6,"Translation2","","A 2-dimensional translation.",null,null],[6,"Translation3","","A 3-dimensional translation.",null,null],[6,"Isometry2","","A 2-dimensional isometry using a unit complex number for its rotational part.",null,null],[6,"Isometry3","","A 3-dimensional isometry using a unit quaternion for its rotational part.",null,null],[6,"IsometryMatrix2","","A 2-dimensional isometry using a rotation matrix for its rotational part.",null,null],[6,"IsometryMatrix3","","A 3-dimensional isometry using a rotation matrix for its rotational part.",null,null],[6,"Similarity2","","A 2-dimensional similarity.",null,null],[6,"Similarity3","","A 3-dimensional similarity.",null,null],[6,"SimilarityMatrix2","","A 2-dimensional similarity using a rotation matrix for its rotation part.",null,null],[6,"SimilarityMatrix3","","A 3-dimensional similarity using a rotation matrix for its rotation part.",null,null],[6,"Transform2","","A 2D general transformation that may not be inversible. Stored as an homogeneous 3x3 matrix.",null,null],[6,"Projective2","","An inversible 2D general transformation. Stored as an homogeneous 3x3 matrix.",null,null],[6,"Affine2","","A 2D affine transformation. Stored as an homogeneous 3x3 matrix.",null,null],[6,"Transform3","","A 3D general transformation that may not be inversible. Stored as an homogeneous 4x4 matrix.",null,null],[6,"Projective3","","An inversible 3D general transformation. Stored as an homogeneous 4x4 matrix.",null,null],[6,"Affine3","","A 3D affine transformation. Stored as an homogeneous 4x4 matrix.",null,null],[8,"TCategory","","Trait implemented by phantom types identifying the projective transformation type.",null,null],[11,"has_normalizer","","Indicates whether a `Transform` with the category `Self` has a bottom-row different from `0 0 .. 1`.",210,{"o":{"n":"bool"}}],[10,"check_homogeneous_invariants","","Checks that the given matrix is a valid homogeneous representation of an element of the category `Self`.",210,{"i":[{"n":"matrixn"}],"o":{"n":"bool"}}],[8,"TCategoryMul","","Traits that gives the `Transform` category that is compatible with the result of the multiplication of transformations with categories `Self` and `Other`.",null,null],[16,"Representative","","The transform category that results from the multiplication of a `Transform<Self>` to a `Transform<Other>`. This is usually equal to `Self` or `Other`, whichever is the most general category.",211,null],[8,"SuperTCategoryOf","","Indicates that `Self` is a more general `Transform` category than `Other`.",null,null],[8,"SubTCategoryOf","","Indicates that `Self` is a more specific `Transform` category than `Other`.",null,null],[0,"linalg","nalgebra","[Reexported at the root of this crate.] Factorization of real matrices.",null,null],[3,"PermutationSequence","nalgebra::linalg","A sequence of row or column permutations.",null,null],[3,"QR","","The QR decomposition of a general matrix.",null,null],[3,"Hessenberg","","Hessenberg decomposition of a general matrix.",null,null],[3,"Bidiagonal","","The bidiagonalization of a general matrix.",null,null],[12,"diagonal","","The diagonal elements of the decomposed matrix.",212,null],[12,"off_diagonal","","The off-diagonal elements of the decomposed matrix.",212,null],[3,"Cholesky","","The Cholesky decomposion of a symmetric-definite-positive matrix.",null,null],[3,"LU","","LU decomposition with partial (row) pivoting.",null,null],[3,"FullPivLU","","LU decomposition with full row and column pivoting.",null,null],[3,"RealSchur","","Real Schur decomposition of a square matrix.",null,null],[3,"SVD","","Singular Value Decomposition of a general matrix.",null,null],[12,"u","","The left-singular vectors `U` of this SVD.",213,null],[12,"v_t","","The right-singular vectors `V^t` of this SVD.",213,null],[12,"singular_values","","The singular values of this SVD.",213,null],[3,"SymmetricTridiagonal","","Tridiagonalization of a symmetric matrix.",null,null],[3,"SymmetricEigen","","Eigendecomposition of a symmetric matrix.",null,null],[12,"eigenvectors","","The eigenvectors of the decomposed matrix.",214,null],[12,"eigenvalues","","The unsorted eigenvalues of the decomposed matrix.",214,null],[5,"try_invert_to","","Performs a LU decomposition to overwrite `out` with the inverse of `matrix`.",null,{"i":[{"n":"matrixn"},{"n":"matrix"}],"o":{"n":"bool"}}],[5,"wilkinson_shift","","Computes the wilkinson shift, i.e., the 2x2 symmetric matrix eigenvalue to its tailing component `tnn`.",null,{"i":[{"n":"n"},{"n":"n"},{"n":"n"}],"o":{"n":"n"}}],[11,"solve_lower_triangular","nalgebra::linalg::solve","Computes the solution of the linear system `self . x = b` where `x` is the unknown and only the lower-triangular part of `self` (including the diagonal) is concidered not-zero.",215,{"i":[{"n":"self"},{"n":"matrix"}],"o":{"g":["matrixmn"],"n":"option"}}],[11,"solve_upper_triangular","","Computes the solution of the linear system `self . x = b` where `x` is the unknown and only the upper-triangular part of `self` (including the diagonal) is concidered not-zero.",215,{"i":[{"n":"self"},{"n":"matrix"}],"o":{"g":["matrixmn"],"n":"option"}}],[11,"solve_lower_triangular_mut","","Solves the linear system `self . x = b` where `x` is the unknown and only the lower-triangular part of `self` (including the diagonal) is concidered not-zero.",215,{"i":[{"n":"self"},{"n":"matrix"}],"o":{"n":"bool"}}],[11,"solve_lower_triangular_with_diag_mut","","Solves the linear system `self . x = b` where `x` is the unknown and only the lower-triangular part of `self` is concidered not-zero. The diagonal is never read as it is assumed to be equal to `diag`. Returns `false` and does not modify its inputs if `diag` is zero.",215,{"i":[{"n":"self"},{"n":"matrix"},{"n":"n"}],"o":{"n":"bool"}}],[11,"solve_upper_triangular_mut","","Solves the linear system `self . x = b` where `x` is the unknown and only the upper-triangular part of `self` (including the diagonal) is concidered not-zero.",215,{"i":[{"n":"self"},{"n":"matrix"}],"o":{"n":"bool"}}],[11,"tr_solve_lower_triangular","","Computes the solution of the linear system `self.transpose() . x = b` where `x` is the unknown and only the lower-triangular part of `self` (including the diagonal) is concidered not-zero.",215,{"i":[{"n":"self"},{"n":"matrix"}],"o":{"g":["matrixmn"],"n":"option"}}],[11,"tr_solve_upper_triangular","","Computes the solution of the linear system `self.transpose() . x = b` where `x` is the unknown and only the upper-triangular part of `self` (including the diagonal) is concidered not-zero.",215,{"i":[{"n":"self"},{"n":"matrix"}],"o":{"g":["matrixmn"],"n":"option"}}],[11,"tr_solve_lower_triangular_mut","","Solves the linear system `self.transpose() . x = b` where `x` is the unknown and only the lower-triangular part of `self` (including the diagonal) is concidered not-zero.",215,{"i":[{"n":"self"},{"n":"matrix"}],"o":{"n":"bool"}}],[11,"tr_solve_upper_triangular_mut","","Solves the linear system `self.transpose() . x = b` where `x` is the unknown and only the upper-triangular part of `self` (including the diagonal) is concidered not-zero.",215,{"i":[{"n":"self"},{"n":"matrix"}],"o":{"n":"bool"}}],[11,"determinant","nalgebra::linalg::determinant","Computes the matrix determinant.",215,{"i":[{"n":"self"}],"o":{"n":"n"}}],[11,"try_inverse","nalgebra::linalg::inverse","Attempts to invert this matrix.",215,{"i":[{"n":"self"}],"o":{"g":["matrixn"],"n":"option"}}],[11,"try_inverse_mut","","Attempts to invert this matrix in-place. Returns `false` and leaves `self` untouched if inversion fails.",215,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[0,"householder","nalgebra::linalg","Construction of householder elementary reflections.",null,null],[0,"givens","","Construction of givens rotations.",null,null],[5,"cancel_y","nalgebra::linalg::givens","Computes the rotation `R` required such that the `y` component of `R * v` is zero.",null,{"i":[{"n":"vector"}],"o":{"n":"option"}}],[5,"cancel_x","","Computes the rotation `R` required such that the `x` component of `R * v` is zero.",null,{"i":[{"n":"vector"}],"o":{"n":"option"}}],[0,"balancing","nalgebra::linalg","Functions for balancing a matrix.",null,null],[5,"balance_parlett_reinsch","nalgebra::linalg::balancing","Applies in-place a modified Parlett and Reinsch matrix balancing with 2-norm to the matrix `m` and returns the corresponding diagonal transformation.",null,{"i":[{"n":"matrixn"}],"o":{"n":"vectorn"}}],[5,"unbalance","","Computes in-place `D * m * D.inverse()`, where `D` is the matrix with diagonal `d`.",null,{"i":[{"n":"matrixn"},{"n":"vectorn"}]}],[11,"clone","nalgebra::linalg","",216,{"i":[{"n":"self"}],"o":{"n":"permutationsequence"}}],[11,"fmt","","",216,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"identity","","Creates a new statically-allocated sequence of `D` identity permutations.",216,{"o":{"n":"self"}}],[11,"identity","","Creates a new dynamically-allocated sequence of `n` identity permutations.",216,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"identity_generic","","Creates a new sequence of D identity permutations.",216,{"i":[{"n":"d"}],"o":{"n":"self"}}],[11,"append_permutation","","Adds the interchange of the row (or column) `i` with the row (or column) `i2` to this sequence of permutations.",216,{"i":[{"n":"self"},{"n":"usize"},{"n":"usize"}]}],[11,"permute_rows","","Applies this sequence of permutations to the rows of `rhs`.",216,{"i":[{"n":"self"},{"n":"matrix"}]}],[11,"inv_permute_rows","","Applies this sequence of permutations in reverse to the rows of `rhs`.",216,{"i":[{"n":"self"},{"n":"matrix"}]}],[11,"permute_columns","","Applies this sequence of permutations to the columns of `rhs`.",216,{"i":[{"n":"self"},{"n":"matrix"}]}],[11,"inv_permute_columns","","Applies this sequence of permutations in reverse to the columns of `rhs`.",216,{"i":[{"n":"self"},{"n":"matrix"}]}],[11,"len","","The number of non-identity permutations applied by this sequence.",216,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"determinant","","The determinant of the matrix corresponding to this permutation.",216,{"i":[{"n":"self"}],"o":{"n":"n"}}],[11,"clone","","",217,{"i":[{"n":"self"}],"o":{"n":"qr"}}],[11,"fmt","","",217,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Computes the QR decomposition using householder reflections.",217,{"i":[{"n":"matrixmn"}],"o":{"n":"self"}}],[11,"r","","Retrieves the upper trapezoidal submatrix `R` of this decomposition.",217,{"i":[{"n":"self"}],"o":{"g":["dimminimum"],"n":"matrixmn"}}],[11,"unpack_r","","Retrieves the upper trapezoidal submatrix `R` of this decomposition.",217,{"i":[{"n":"self"}],"o":{"g":["dimminimum"],"n":"matrixmn"}}],[11,"q","","Computes the orthogonal matrix `Q` of this decomposition.",217,{"i":[{"n":"self"}],"o":{"g":["dimminimum"],"n":"matrixmn"}}],[11,"unpack","","Unpacks this decomposition into its two matrix factors.",217,null],[11,"q_tr_mul","","Multiplies the provided matrix by the transpose of the `Q` matrix of this decomposition.",217,{"i":[{"n":"self"},{"n":"matrix"}]}],[11,"solve","","Solves the linear system `self * x = b`, where `x` is the unknown to be determined.",217,{"i":[{"n":"self"},{"n":"matrix"}],"o":{"g":["matrixmn"],"n":"option"}}],[11,"solve_mut","","Solves the linear system `self * x = b`, where `x` is the unknown to be determined.",217,{"i":[{"n":"self"},{"n":"matrix"}],"o":{"n":"bool"}}],[11,"try_inverse","","Computes the inverse of the decomposed matrix.",217,{"i":[{"n":"self"}],"o":{"g":["matrixn"],"n":"option"}}],[11,"is_invertible","","Indicates if the decomposed matrix is invertible.",217,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"qr","nalgebra::core","Computes the QR decomposition of this matrix.",1,{"i":[{"n":"self"}],"o":{"n":"qr"}}],[11,"clone","nalgebra::linalg","",218,{"i":[{"n":"self"}],"o":{"n":"hessenberg"}}],[11,"fmt","","",218,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Computes the Hessenberg decomposition using householder reflections.",218,{"i":[{"n":"matrixn"}],"o":{"n":"self"}}],[11,"new_with_workspace","","Computes the Hessenberg decomposition using householder reflections.",218,{"i":[{"n":"matrixn"},{"n":"vectorn"}],"o":{"n":"self"}}],[11,"unpack","","Retrieves `(q, h)` with `q` the orthogonal matrix of this decomposition and `h` the hessenberg matrix.",218,null],[11,"unpack_h","","Retrieves the upper trapezoidal submatrix `H` of this decomposition.",218,{"i":[{"n":"self"}],"o":{"n":"matrixn"}}],[11,"h","","Retrieves the upper trapezoidal submatrix `H` of this decomposition.",218,{"i":[{"n":"self"}],"o":{"n":"matrixn"}}],[11,"q","","Computes the orthogonal matrix `Q` of this decomposition.",218,{"i":[{"n":"self"}],"o":{"n":"matrixn"}}],[11,"hessenberg","nalgebra::linalg::hessenberg","Computes the Hessenberg decomposition of this matrix using householder reflections.",215,{"i":[{"n":"self"}],"o":{"n":"hessenberg"}}],[11,"clone","nalgebra::linalg","",212,{"i":[{"n":"self"}],"o":{"n":"bidiagonal"}}],[11,"fmt","","",212,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Computes the Bidiagonal decomposition using householder reflections.",212,{"i":[{"n":"matrixmn"}],"o":{"n":"self"}}],[11,"is_upper_diagonal","","Indicates whether this decomposition contains an upper-diagonal matrix.",212,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"unpack","","Unpacks this decomposition into its three matrix factors `(U, D, V^t)`.",212,null],[11,"d","","Retrieves the upper trapezoidal submatrix `R` of this decomposition.",212,{"i":[{"n":"self"}],"o":{"g":["dimminimum"],"n":"matrixn"}}],[11,"u","","Computes the orthogonal matrix `U` of this `U * D * V` decomposition.",212,{"i":[{"n":"self"}],"o":{"g":["dimminimum"],"n":"matrixmn"}}],[11,"v_t","","Computes the orthogonal matrix `V` of this `U * D * V` decomposition.",212,{"i":[{"n":"self"}],"o":{"g":["dimminimum"],"n":"matrixmn"}}],[11,"diagonal","","The diagonal part of this decomposed matrix.",212,{"i":[{"n":"self"}],"o":{"n":"vectorn"}}],[11,"off_diagonal","","The off-diagonal part of this decomposed matrix.",212,{"i":[{"n":"self"}],"o":{"n":"vectorn"}}],[11,"bidiagonalize","nalgebra::core","Computes the bidiagonalization using householder reflections.",1,{"i":[{"n":"self"}],"o":{"n":"bidiagonal"}}],[11,"clone","nalgebra::linalg","",219,{"i":[{"n":"self"}],"o":{"n":"symmetrictridiagonal"}}],[11,"fmt","","",219,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Computes the tridiagonalization of the symmetric matrix `m`.",219,{"i":[{"n":"matrixn"}],"o":{"n":"self"}}],[11,"unpack","","Retrieve the orthogonal transformation, diagonal, and off diagonal elements of this decomposition.",219,null],[11,"unpack_tridiagonal","","Retrieve the diagonal, and off diagonal elements of this decomposition.",219,null],[11,"diagonal","","The diagonal components of this decomposition.",219,{"i":[{"n":"self"}],"o":{"n":"vectorn"}}],[11,"off_diagonal","","The off-diagonal components of this decomposition.",219,{"i":[{"n":"self"}],"o":{"n":"vectorn"}}],[11,"q","","Computes the orthogonal matrix `Q` of this decomposition.",219,{"i":[{"n":"self"}],"o":{"n":"matrixn"}}],[11,"recompose","","Recomputes the original symmetric matrix.",219,{"i":[{"n":"self"}],"o":{"n":"matrixn"}}],[11,"symmetric_tridiagonalize","nalgebra::linalg::symmetric_tridiagonal","Computes the tridiagonalization of this symmetric matrix.",215,{"i":[{"n":"self"}],"o":{"n":"symmetrictridiagonal"}}],[11,"clone","nalgebra::linalg","",220,{"i":[{"n":"self"}],"o":{"n":"cholesky"}}],[11,"fmt","","",220,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Attempts to compute the Cholesky decomposition of `matrix`.",220,{"i":[{"n":"matrixn"}],"o":{"n":"option"}}],[11,"unpack","","Retrieves the lower-triangular factor of the Cholesky decomposition with its strictly upper-triangular part filled with zeros.",220,{"i":[{"n":"self"}],"o":{"n":"matrixn"}}],[11,"unpack_dirty","","Retrieves the lower-triangular factor of the Cholesky decomposition, without zeroing-out its strict upper-triangular part.",220,{"i":[{"n":"self"}],"o":{"n":"matrixn"}}],[11,"l","","Retrieves the lower-triangular factor of the Cholesky decomposition with its strictly uppen-triangular part filled with zeros.",220,{"i":[{"n":"self"}],"o":{"n":"matrixn"}}],[11,"l_dirty","","Retrieves the lower-triangular factor of the Cholesky decomposition, without zeroing-out its strict upper-triangular part.",220,{"i":[{"n":"self"}],"o":{"n":"matrixn"}}],[11,"solve_mut","","Solves the system `self * x = b` where `self` is the decomposed matrix and `x` the unknown.",220,{"i":[{"n":"self"},{"n":"matrix"}]}],[11,"solve","","Returns the solution of the system `self * x = b` where `self` is the decomposed matrix and `x` the unknown.",220,{"i":[{"n":"self"},{"n":"matrix"}],"o":{"n":"matrixmn"}}],[11,"inverse","","Computes the inverse of the decomposed matrix.",220,{"i":[{"n":"self"}],"o":{"n":"matrixn"}}],[11,"cholesky","nalgebra::linalg::cholesky","Attempts to compute the Cholesky decomposition of this matrix.",215,{"i":[{"n":"self"}],"o":{"g":["cholesky"],"n":"option"}}],[11,"clone","nalgebra::linalg","",221,{"i":[{"n":"self"}],"o":{"n":"lu"}}],[11,"fmt","","",221,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Computes the LU decomposition with partial (row) pivoting of `matrix`.",221,{"i":[{"n":"matrixmn"}],"o":{"n":"self"}}],[11,"l","","The lower triangular matrix of this decomposition.",221,{"i":[{"n":"self"}],"o":{"g":["dimminimum"],"n":"matrixmn"}}],[11,"l_unpack","","The lower triangular matrix of this decomposition.",221,{"i":[{"n":"self"}],"o":{"g":["dimminimum"],"n":"matrixmn"}}],[11,"u","","The upper triangular matrix of this decomposition.",221,{"i":[{"n":"self"}],"o":{"g":["dimminimum"],"n":"matrixmn"}}],[11,"p","","The row permutations of this decomposition.",221,{"i":[{"n":"self"}],"o":{"n":"permutationsequence"}}],[11,"unpack","","The row permutations and two triangular matrices of this decomposition: `(P, L, U)`.",221,null],[11,"solve","","Solves the linear system `self * x = b`, where `x` is the unknown to be determined.",221,{"i":[{"n":"self"},{"n":"matrix"}],"o":{"g":["matrixmn"],"n":"option"}}],[11,"solve_mut","","Solves the linear system `self * x = b`, where `x` is the unknown to be determined.",221,{"i":[{"n":"self"},{"n":"matrix"}],"o":{"n":"bool"}}],[11,"try_inverse","","Computes the inverse of the decomposed matrix.",221,{"i":[{"n":"self"}],"o":{"g":["matrixn"],"n":"option"}}],[11,"try_inverse_to","","Computes the inverse of the decomposed matrix and outputs the result to `out`.",221,{"i":[{"n":"self"},{"n":"matrix"}],"o":{"n":"bool"}}],[11,"determinant","","Computes the determinant of the decomposed matrix.",221,{"i":[{"n":"self"}],"o":{"n":"n"}}],[11,"is_invertible","","Indicates if the decomposed matrix is invertible.",221,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"lu","nalgebra::core","Computes the LU decomposition with partial (row) pivoting of `matrix`.",1,{"i":[{"n":"self"}],"o":{"n":"lu"}}],[11,"clone","nalgebra::linalg","",222,{"i":[{"n":"self"}],"o":{"n":"fullpivlu"}}],[11,"fmt","","",222,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Computes the LU decomposition with full pivoting of `matrix`.",222,{"i":[{"n":"matrixmn"}],"o":{"n":"self"}}],[11,"l","","The lower triangular matrix of this decomposition.",222,{"i":[{"n":"self"}],"o":{"g":["dimminimum"],"n":"matrixmn"}}],[11,"u","","The upper triangular matrix of this decomposition.",222,{"i":[{"n":"self"}],"o":{"g":["dimminimum"],"n":"matrixmn"}}],[11,"p","","The row permutations of this decomposition.",222,{"i":[{"n":"self"}],"o":{"n":"permutationsequence"}}],[11,"q","","The column permutations of this decomposition.",222,{"i":[{"n":"self"}],"o":{"n":"permutationsequence"}}],[11,"unpack","","The two matrices of this decomposition and the row and column permutations: `(P, L, U, Q)`.",222,null],[11,"solve","","Solves the linear system `self * x = b`, where `x` is the unknown to be determined.",222,{"i":[{"n":"self"},{"n":"matrix"}],"o":{"g":["matrixmn"],"n":"option"}}],[11,"solve_mut","","Solves the linear system `self * x = b`, where `x` is the unknown to be determined.",222,{"i":[{"n":"self"},{"n":"matrix"}],"o":{"n":"bool"}}],[11,"try_inverse","","Computes the inverse of the decomposed matrix.",222,{"i":[{"n":"self"}],"o":{"g":["matrixn"],"n":"option"}}],[11,"is_invertible","","Indicates if the decomposed matrix is invertible.",222,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"determinant","","Computes the determinant of the decomposed matrix.",222,{"i":[{"n":"self"}],"o":{"n":"n"}}],[11,"full_piv_lu","nalgebra::core","Computes the LU decomposition with full pivoting of `matrix`.",1,{"i":[{"n":"self"}],"o":{"n":"fullpivlu"}}],[11,"clone","nalgebra::linalg","",223,{"i":[{"n":"self"}],"o":{"n":"realschur"}}],[11,"fmt","","",223,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Computes the Schur decomposition of a square matrix.",223,{"i":[{"n":"matrixn"}],"o":{"n":"realschur"}}],[11,"try_new","","Attempts to compute the Schur decomposition of a square matrix.",223,{"i":[{"n":"matrixn"},{"n":"n"},{"n":"usize"}],"o":{"g":["realschur"],"n":"option"}}],[11,"unpack","","Retrieves the unitary matrix `Q` and the upper-quasitriangular matrix `T` such that the decomposed matrix equals `Q * T * Q.transpose()`.",223,null],[11,"eigenvalues","","Computes the real eigenvalues of the decomposed matrix.",223,{"i":[{"n":"self"}],"o":{"g":["vectorn"],"n":"option"}}],[11,"complex_eigenvalues","","Computes the complex eigenvalues of the decomposed matrix.",223,{"i":[{"n":"self"}],"o":{"g":["complex"],"n":"vectorn"}}],[11,"real_schur","nalgebra::linalg::schur","Computes the Schur decomposition of a square matrix.",215,{"i":[{"n":"self"}],"o":{"n":"realschur"}}],[11,"try_real_schur","","Attempts to compute the Schur decomposition of a square matrix.",215,{"i":[{"n":"self"},{"n":"n"},{"n":"usize"}],"o":{"g":["realschur"],"n":"option"}}],[11,"eigenvalues","","Computes the eigenvalues of this matrix.",215,{"i":[{"n":"self"}],"o":{"g":["vectorn"],"n":"option"}}],[11,"complex_eigenvalues","","Computes the eigenvalues of this matrix.",215,{"i":[{"n":"self"}],"o":{"g":["complex"],"n":"vectorn"}}],[11,"clone","nalgebra::linalg","",213,{"i":[{"n":"self"}],"o":{"n":"svd"}}],[11,"fmt","","",213,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Computes the Singular Value Decomposition of `matrix` using implicit shift.",213,{"i":[{"n":"matrixmn"},{"n":"bool"},{"n":"bool"}],"o":{"n":"self"}}],[11,"try_new","","Attempts to compute the Singular Value Decomposition of `matrix` using implicit shift.",213,{"i":[{"n":"matrixmn"},{"n":"bool"},{"n":"bool"},{"n":"n"},{"n":"usize"}],"o":{"n":"option"}}],[11,"rank","","Computes the rank of the decomposed matrix, i.e., the number of singular values greater than `eps`.",213,{"i":[{"n":"self"},{"n":"n"}],"o":{"n":"usize"}}],[11,"recompose","","Rebuild the original matrix.",213,{"i":[{"n":"self"}],"o":{"n":"matrixmn"}}],[11,"pseudo_inverse","","Computes the pseudo-inverse of the decomposed matrix.",213,{"i":[{"n":"self"},{"n":"n"}],"o":{"n":"matrixmn"}}],[11,"solve","","Solves the system `self * x = b` where `self` is the decomposed matrix and `x` the unknown.",213,{"i":[{"n":"self"},{"n":"matrix"},{"n":"n"}],"o":{"n":"matrixmn"}}],[11,"svd","nalgebra::core","Computes the Singular Value Decomposition using implicit shift.",1,{"i":[{"n":"self"},{"n":"bool"},{"n":"bool"}],"o":{"n":"svd"}}],[11,"try_svd","","Attempts to compute the Singular Value Decomposition of `matrix` using implicit shift.",1,{"i":[{"n":"self"},{"n":"bool"},{"n":"bool"},{"n":"n"},{"n":"usize"}],"o":{"g":["svd"],"n":"option"}}],[11,"singular_values","","Computes the singular values of this matrix.",1,{"i":[{"n":"self"}],"o":{"g":["dimminimum"],"n":"vectorn"}}],[11,"rank","","Computes the rank of this matrix.",1,{"i":[{"n":"self"},{"n":"n"}],"o":{"n":"usize"}}],[11,"pseudo_inverse","","Computes the pseudo-inverse of this matrix.",1,{"i":[{"n":"self"},{"n":"n"}],"o":{"n":"matrixmn"}}],[11,"clone","nalgebra::linalg","",214,{"i":[{"n":"self"}],"o":{"n":"symmetriceigen"}}],[11,"fmt","","",214,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Computes the eigendecomposition of the given symmetric matrix.",214,{"i":[{"n":"matrixn"}],"o":{"n":"self"}}],[11,"try_new","","Computes the eigendecomposition of the given symmetric matrix with user-specified convergence parameters.",214,{"i":[{"n":"matrixn"},{"n":"n"},{"n":"usize"}],"o":{"n":"option"}}],[11,"recompose","","Rebuild the original matrix.",214,{"i":[{"n":"self"}],"o":{"n":"matrixn"}}],[11,"symmetric_eigen","nalgebra::linalg::symmetric_eigen","Computes the eigendecomposition of this symmetric matrix.",215,{"i":[{"n":"self"}],"o":{"n":"symmetriceigen"}}],[11,"try_symmetric_eigen","","Computes the eigendecomposition of the given symmetric matrix with user-specified convergence parameters.",215,{"i":[{"n":"self"},{"n":"n"},{"n":"usize"}],"o":{"g":["symmetriceigen"],"n":"option"}}],[11,"symmetric_eigenvalues","","Computes the eigenvalues of this symmetric matrix.",215,{"i":[{"n":"self"}],"o":{"n":"vectorn"}}],[11,"new","nalgebra","Creates a new identity element.",224,{"o":{"n":"id"}}],[11,"one","","",224,{"o":{"g":["multiplicative"],"n":"id"}}],[11,"powf","","",224,null],[11,"rotation_between","","",224,null],[11,"scaled_rotation_between","","",224,null],[11,"add_assign","","",224,null],[11,"fmt","","",224,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"add","","",224,{"i":[{"n":"self"},{"g":["multiplicative"],"n":"id"}],"o":{"g":["multiplicative"],"n":"id"}}],[11,"clone","","",224,{"i":[{"n":"self"}],"o":{"n":"id"}}],[11,"default_epsilon","","",224,null],[11,"default_max_relative","","",224,null],[11,"default_max_ulps","","",224,{"o":{"n":"u32"}}],[11,"relative_eq","","",224,null],[11,"ulps_eq","","",224,null],[11,"inverse","","",224,{"i":[{"n":"self"}],"o":{"n":"id"}}],[11,"inverse_mut","","",224,null],[11,"to_superset","","",224,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"is_in_subset","","",224,{"i":[{"n":"t"}],"o":{"n":"bool"}}],[11,"from_superset_unchecked","","",224,{"i":[{"n":"t"}],"o":{"n":"id"}}],[11,"join","","",224,{"i":[{"n":"self"},{"n":"id"}],"o":{"n":"id"}}],[11,"to_vector","","",224,null],[11,"from_vector","","",224,null],[11,"mul","","",224,{"i":[{"n":"self"},{"g":["multiplicative"],"n":"id"}],"o":{"g":["multiplicative"],"n":"id"}}],[11,"eq","","",224,{"i":[{"n":"self"},{"n":"id"}],"o":{"n":"bool"}}],[11,"operate","","",224,{"i":[{"n":"self"},{"n":"id"}],"o":{"n":"id"}}],[11,"zero","","",224,{"o":{"g":["multiplicative"],"n":"id"}}],[11,"is_zero","","",224,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"meet","","",224,{"i":[{"n":"self"},{"n":"id"}],"o":{"n":"id"}}],[11,"fmt","","",224,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"identity","","",224,{"o":{"n":"id"}}],[11,"div","","",224,{"i":[{"n":"self"},{"g":["multiplicative"],"n":"id"}],"o":{"g":["multiplicative"],"n":"id"}}],[11,"translation","","",224,null],[11,"rotation","","",224,null],[11,"scaling","","",224,null],[11,"partial_cmp","","",224,{"i":[{"n":"self"},{"n":"id"}],"o":{"g":["ordering"],"n":"option"}}],[11,"decompose","","",224,null],[11,"append_translation","","",224,null],[11,"prepend_translation","","",224,null],[11,"append_rotation","","",224,null],[11,"prepend_rotation","","",224,null],[11,"append_scaling","","",224,null],[11,"prepend_scaling","","",224,null],[11,"inverse_transform_point","","",224,{"i":[{"n":"self"},{"n":"e"}],"o":{"n":"e"}}],[11,"inverse_transform_vector","","",224,null],[11,"div_assign","","",224,null],[11,"transform_point","","",224,{"i":[{"n":"self"},{"n":"e"}],"o":{"n":"e"}}],[11,"transform_vector","","",224,null],[11,"mul_assign","","",224,null],[11,"sum","nalgebra::core","",202,{"i":[{"n":"i"}],"o":{"n":"matrixmn"}}],[11,"sum","","",202,{"i":[{"n":"i"}],"o":{"n":"matrixmn"}}],[11,"product","","",225,{"i":[{"n":"i"}],"o":{"n":"matrixn"}}],[11,"product","","",225,{"i":[{"n":"i"}],"o":{"n":"matrixn"}}],[11,"iamax","","Computes the index of the vector component with the largest absolute value.",226,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"iamin","","Computes the index of the vector component with the smallest absolute value.",226,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"axpy","","Computes `self = a * x + b * self`.",226,{"i":[{"n":"self"},{"n":"n"},{"n":"vector"},{"n":"n"}]}],[11,"gemv","","Computes `self = alpha * a * x + beta * self`, where `a` is a matrix, `x` a vector, and `alpha, beta` two scalars.",226,{"i":[{"n":"self"},{"n":"n"},{"n":"matrix"},{"n":"vector"},{"n":"n"}]}],[11,"gemv_symm","","Computes `self = alpha * a * x + beta * self`, where `a` is a symmetric matrix, `x` a vector, and `alpha, beta` two scalars.",226,{"i":[{"n":"self"},{"n":"n"},{"n":"squarematrix"},{"n":"vector"},{"n":"n"}]}],[11,"gemv_tr","","Computes `self = alpha * a.transpose() * x + beta * self`, where `a` is a matrix, `x` a vector, and `alpha, beta` two scalars.",226,{"i":[{"n":"self"},{"n":"n"},{"n":"matrix"},{"n":"vector"},{"n":"n"}]}],[11,"quadform_tr_with_workspace","","Computes the quadratic form `self = alpha * lhs * mid * lhs.transpose() + beta * self`.",215,{"i":[{"n":"self"},{"n":"vector"},{"n":"n"},{"n":"matrix"},{"n":"squarematrix"},{"n":"n"}]}],[11,"quadform_tr","","Computes the quadratic form `self = alpha * lhs * mid * lhs.transpose() + beta * self`.",215,{"i":[{"n":"self"},{"n":"n"},{"n":"matrix"},{"n":"squarematrix"},{"n":"n"}]}],[11,"quadform_with_workspace","","Computes the quadratic form `self = alpha * rhs.transpose() * mid * rhs + beta * self`.",215,{"i":[{"n":"self"},{"n":"vector"},{"n":"n"},{"n":"squarematrix"},{"n":"matrix"},{"n":"n"}]}],[11,"quadform","","Computes the quadratic form `self = alpha * rhs.transpose() * mid * rhs + beta * self`.",215,{"i":[{"n":"self"},{"n":"n"},{"n":"squarematrix"},{"n":"matrix"},{"n":"n"}]}],[11,"is","","Tests if `Self` the the same as the type `T`",194,{"o":{"n":"bool"}}],[11,"vget_unchecked","","Gets a reference to the i-th element of this column vector without bound checking.",226,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"n"}}],[11,"vget_unchecked_mut","","Gets a mutable reference to the i-th element of this column vector without bound checking.",226,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"n"}}],[11,"diagonal","","Creates a square matrix with its diagonal set to `diag` and all other entries set to 0.",215,{"i":[{"n":"self"}],"o":{"n":"vectorn"}}],[11,"trace","","Computes a trace of a square matrix, i.e., the sum of its diagonal elements.",215,{"i":[{"n":"self"}],"o":{"n":"n"}}],[11,"to_homogeneous","","Computes the coordinates in projective space of this vector, i.e., appends a `0` to its coordinates.",226,{"i":[{"n":"self"}],"o":{"g":["dimsum"],"n":"vectorn"}}],[11,"from_homogeneous","","Constructs a vector from coordinates in projective space, i.e., removes a `0` at the end of `self`. Returns `None` if this last component is not zero.",226,{"i":[{"g":["dimsum"],"n":"vector"}],"o":{"g":["vectorn"],"n":"option"}}],[11,"cross_matrix","","Computes the matrix `M` such that for all vector `v` we have `M * v == self.cross(&v)`.",226,{"i":[{"n":"self"}],"o":{"g":["u3"],"n":"matrixn"}}],[11,"new_uninitialized_generic","","Creates a new uninitialized matrix. If the matrix has a compile-time dimension, this panics if `nrows != R::to_usize()` or `ncols != C::to_usize()`.",202,{"i":[{"n":"r"},{"n":"c"}],"o":{"n":"self"}}],[11,"from_element_generic","","Creates a matrix with all its elements set to `elem`.",202,{"i":[{"n":"r"},{"n":"c"},{"n":"n"}],"o":{"n":"self"}}],[11,"repeat_generic","","Creates a matrix with all its elements set to `elem`.",202,{"i":[{"n":"r"},{"n":"c"},{"n":"n"}],"o":{"n":"self"}}],[11,"zeros_generic","","Creates a matrix with all its elements set to 0.",202,{"i":[{"n":"r"},{"n":"c"}],"o":{"n":"self"}}],[11,"from_iterator_generic","","Creates a matrix with all its elements filled by an iterator.",202,{"i":[{"n":"r"},{"n":"c"},{"n":"i"}],"o":{"n":"self"}}],[11,"from_row_slice_generic","","Creates a matrix with its elements filled with the components provided by a slice in row-major order.",202,null],[11,"from_column_slice_generic","","Creates a matrix with its elements filled with the components provided by a slice. The components must have the same layout as the matrix data storage (i.e. row-major or column-major).",202,null],[11,"from_fn_generic","","Creates a matrix filled with the results of a function applied to each of its component coordinates.",202,{"i":[{"n":"r"},{"n":"c"},{"n":"f"}],"o":{"n":"self"}}],[11,"identity_generic","","Creates a new identity matrix.",202,{"i":[{"n":"r"},{"n":"c"}],"o":{"n":"self"}}],[11,"from_diagonal_element_generic","","Creates a new matrix with its diagonal filled with copies of `elt`.",202,{"i":[{"n":"r"},{"n":"c"},{"n":"n"}],"o":{"n":"self"}}],[11,"from_partial_diagonal_generic","","Creates a new matrix that may be rectangular. The first `elts.len()` diagonal elements are filled with the content of `elts`. Others are set to 0.",202,null],[11,"from_rows","","Builds a new matrix from its rows.",202,null],[11,"from_columns","","Builds a new matrix from its columns.",202,null],[11,"new_random_generic","","Creates a matrix filled with random values.",202,{"i":[{"n":"r"},{"n":"c"}],"o":{"n":"self"}}],[11,"from_distribution_generic","","Creates a matrix filled with random values from the given distribution.",202,{"i":[{"n":"r"},{"n":"c"},{"n":"distr"},{"n":"g"}],"o":{"n":"self"}}],[11,"from_diagonal","","Creates a square matrix with its diagonal set to `diag` and all other entries set to 0.",225,{"i":[{"n":"vector"}],"o":{"n":"self"}}],[11,"new_uninitialized","","Creates a new uninitialized matrix.",202,{"o":{"n":"self"}}],[11,"from_element","","Creates a matrix with all its elements set to `elem`.",202,{"i":[{"n":"n"}],"o":{"n":"self"}}],[11,"repeat","","Creates a matrix with all its elements set to `elem`.",202,{"i":[{"n":"n"}],"o":{"n":"self"}}],[11,"zeros","","Creates a matrix with all its elements set to `0`.",202,{"o":{"n":"self"}}],[11,"from_iterator","","Creates a matrix with all its elements filled by an iterator.",202,{"i":[{"n":"i"}],"o":{"n":"self"}}],[11,"from_row_slice","","Creates a matrix with its elements filled with the components provided by a slice in row-major order.",202,null],[11,"from_column_slice","","Creates a matrix with its elements filled with the components provided by a slice in column-major order.",202,null],[11,"from_fn","","Creates a matrix filled with the results of a function applied to each of its component coordinates.",202,{"i":[{"n":"f"}],"o":{"n":"self"}}],[11,"identity","","Creates an identity matrix. If the matrix is not square, the largest square submatrix (starting at the first row and column) is set to the identity while all other entries are set to zero.",202,{"o":{"n":"self"}}],[11,"from_diagonal_element","","Creates a matrix filled with its diagonal filled with `elt` and all other components set to zero.",202,{"i":[{"n":"n"}],"o":{"n":"self"}}],[11,"from_partial_diagonal","","Creates a new matrix that may be rectangular. The first `elts.len()` diagonal elements are filled with the content of `elts`. Others are set to 0.",202,null],[11,"from_distribution","","Creates a matrix filled with random values from the given distribution.",202,{"i":[{"n":"distr"},{"n":"g"}],"o":{"n":"self"}}],[11,"new_random","","Creates a matrix filled with random values.",202,{"o":{"n":"self"}}],[11,"new_uninitialized","","Creates a new uninitialized matrix.",202,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"from_element","","Creates a matrix with all its elements set to `elem`.",202,{"i":[{"n":"usize"},{"n":"n"}],"o":{"n":"self"}}],[11,"repeat","","Creates a matrix with all its elements set to `elem`.",202,{"i":[{"n":"usize"},{"n":"n"}],"o":{"n":"self"}}],[11,"zeros","","Creates a matrix with all its elements set to `0`.",202,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"from_iterator","","Creates a matrix with all its elements filled by an iterator.",202,{"i":[{"n":"usize"},{"n":"i"}],"o":{"n":"self"}}],[11,"from_row_slice","","Creates a matrix with its elements filled with the components provided by a slice in row-major order.",202,null],[11,"from_column_slice","","Creates a matrix with its elements filled with the components provided by a slice in column-major order.",202,null],[11,"from_fn","","Creates a matrix filled with the results of a function applied to each of its component coordinates.",202,{"i":[{"n":"usize"},{"n":"f"}],"o":{"n":"self"}}],[11,"identity","","Creates an identity matrix. If the matrix is not square, the largest square submatrix (starting at the first row and column) is set to the identity while all other entries are set to zero.",202,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"from_diagonal_element","","Creates a matrix filled with its diagonal filled with `elt` and all other components set to zero.",202,{"i":[{"n":"usize"},{"n":"n"}],"o":{"n":"self"}}],[11,"from_partial_diagonal","","Creates a new matrix that may be rectangular. The first `elts.len()` diagonal elements are filled with the content of `elts`. Others are set to 0.",202,null],[11,"from_distribution","","Creates a matrix filled with random values from the given distribution.",202,{"i":[{"n":"usize"},{"n":"distr"},{"n":"g"}],"o":{"n":"self"}}],[11,"new_random","","Creates a matrix filled with random values.",202,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"new_uninitialized","","Creates a new uninitialized matrix.",202,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"from_element","","Creates a matrix with all its elements set to `elem`.",202,{"i":[{"n":"usize"},{"n":"n"}],"o":{"n":"self"}}],[11,"repeat","","Creates a matrix with all its elements set to `elem`.",202,{"i":[{"n":"usize"},{"n":"n"}],"o":{"n":"self"}}],[11,"zeros","","Creates a matrix with all its elements set to `0`.",202,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"from_iterator","","Creates a matrix with all its elements filled by an iterator.",202,{"i":[{"n":"usize"},{"n":"i"}],"o":{"n":"self"}}],[11,"from_row_slice","","Creates a matrix with its elements filled with the components provided by a slice in row-major order.",202,null],[11,"from_column_slice","","Creates a matrix with its elements filled with the components provided by a slice in column-major order.",202,null],[11,"from_fn","","Creates a matrix filled with the results of a function applied to each of its component coordinates.",202,{"i":[{"n":"usize"},{"n":"f"}],"o":{"n":"self"}}],[11,"identity","","Creates an identity matrix. If the matrix is not square, the largest square submatrix (starting at the first row and column) is set to the identity while all other entries are set to zero.",202,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"from_diagonal_element","","Creates a matrix filled with its diagonal filled with `elt` and all other components set to zero.",202,{"i":[{"n":"usize"},{"n":"n"}],"o":{"n":"self"}}],[11,"from_partial_diagonal","","Creates a new matrix that may be rectangular. The first `elts.len()` diagonal elements are filled with the content of `elts`. Others are set to 0.",202,null],[11,"from_distribution","","Creates a matrix filled with random values from the given distribution.",202,{"i":[{"n":"usize"},{"n":"distr"},{"n":"g"}],"o":{"n":"self"}}],[11,"new_random","","Creates a matrix filled with random values.",202,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"new_uninitialized","","Creates a new uninitialized matrix.",202,{"i":[{"n":"usize"},{"n":"usize"}],"o":{"n":"self"}}],[11,"from_element","","Creates a matrix with all its elements set to `elem`.",202,{"i":[{"n":"usize"},{"n":"usize"},{"n":"n"}],"o":{"n":"self"}}],[11,"repeat","","Creates a matrix with all its elements set to `elem`.",202,{"i":[{"n":"usize"},{"n":"usize"},{"n":"n"}],"o":{"n":"self"}}],[11,"zeros","","Creates a matrix with all its elements set to `0`.",202,{"i":[{"n":"usize"},{"n":"usize"}],"o":{"n":"self"}}],[11,"from_iterator","","Creates a matrix with all its elements filled by an iterator.",202,{"i":[{"n":"usize"},{"n":"usize"},{"n":"i"}],"o":{"n":"self"}}],[11,"from_row_slice","","Creates a matrix with its elements filled with the components provided by a slice in row-major order.",202,null],[11,"from_column_slice","","Creates a matrix with its elements filled with the components provided by a slice in column-major order.",202,null],[11,"from_fn","","Creates a matrix filled with the results of a function applied to each of its component coordinates.",202,{"i":[{"n":"usize"},{"n":"usize"},{"n":"f"}],"o":{"n":"self"}}],[11,"identity","","Creates an identity matrix. If the matrix is not square, the largest square submatrix (starting at the first row and column) is set to the identity while all other entries are set to zero.",202,{"i":[{"n":"usize"},{"n":"usize"}],"o":{"n":"self"}}],[11,"from_diagonal_element","","Creates a matrix filled with its diagonal filled with `elt` and all other components set to zero.",202,{"i":[{"n":"usize"},{"n":"usize"},{"n":"n"}],"o":{"n":"self"}}],[11,"from_partial_diagonal","","Creates a new matrix that may be rectangular. The first `elts.len()` diagonal elements are filled with the content of `elts`. Others are set to 0.",202,null],[11,"from_distribution","","Creates a matrix filled with random values from the given distribution.",202,{"i":[{"n":"usize"},{"n":"usize"},{"n":"distr"},{"n":"g"}],"o":{"n":"self"}}],[11,"new_random","","Creates a matrix filled with random values.",202,{"i":[{"n":"usize"},{"n":"usize"}],"o":{"n":"self"}}],[11,"zero","","",202,{"o":{"n":"self"}}],[11,"is_zero","","",202,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"one","","",225,{"o":{"n":"self"}}],[11,"max_value","","",202,{"o":{"n":"self"}}],[11,"min_value","","",202,{"o":{"n":"self"}}],[11,"rand","","",202,{"i":[{"n":"g"}],"o":{"n":"self"}}],[11,"new","","Initializes this matrix from its components.",202,{"i":[{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"}],"o":{"n":"self"}}],[11,"new","","Initializes this matrix from its components.",202,{"i":[{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"}],"o":{"n":"self"}}],[11,"new","","Initializes this matrix from its components.",202,{"i":[{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"}],"o":{"n":"self"}}],[11,"new","","Initializes this matrix from its components.",202,{"i":[{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"}],"o":{"n":"self"}}],[11,"new","","Initializes this matrix from its components.",202,{"i":[{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"}],"o":{"n":"self"}}],[11,"new","","Initializes this matrix from its components.",202,{"i":[{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"}],"o":{"n":"self"}}],[11,"new","","Initializes this matrix from its components.",202,{"i":[{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"}],"o":{"n":"self"}}],[11,"new","","Initializes this matrix from its components.",202,{"i":[{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"}],"o":{"n":"self"}}],[11,"new","","Initializes this matrix from its components.",202,{"i":[{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"}],"o":{"n":"self"}}],[11,"new","","Initializes this matrix from its components.",202,{"i":[{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"}],"o":{"n":"self"}}],[11,"new","","Initializes this matrix from its components.",202,{"i":[{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"}],"o":{"n":"self"}}],[11,"new","","Initializes this matrix from its components.",202,{"i":[{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"}],"o":{"n":"self"}}],[11,"new","","Initializes this matrix from its components.",202,{"i":[{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"}],"o":{"n":"self"}}],[11,"new","","Initializes this matrix from its components.",202,{"i":[{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"}],"o":{"n":"self"}}],[11,"new","","Initializes this matrix from its components.",202,{"i":[{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"}],"o":{"n":"self"}}],[11,"new","","Initializes this matrix from its components.",202,{"i":[{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"}],"o":{"n":"self"}}],[11,"new","","Initializes this matrix from its components.",202,{"i":[{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"}],"o":{"n":"self"}}],[11,"new","","Initializes this matrix from its components.",202,{"i":[{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"}],"o":{"n":"self"}}],[11,"new","","Initializes this matrix from its components.",202,{"i":[{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"}],"o":{"n":"self"}}],[11,"new","","Initializes this matrix from its components.",202,{"i":[{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"}],"o":{"n":"self"}}],[11,"new","","Initializes this matrix from its components.",202,{"i":[{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"}],"o":{"n":"self"}}],[11,"new","","Initializes this matrix from its components.",202,{"i":[{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"}],"o":{"n":"self"}}],[11,"new","","Initializes this matrix from its components.",202,{"i":[{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"}],"o":{"n":"self"}}],[11,"new","","Initializes this matrix from its components.",202,{"i":[{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"}],"o":{"n":"self"}}],[11,"new","","Initializes this matrix from its components.",202,{"i":[{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"}],"o":{"n":"self"}}],[11,"new","","Initializes this matrix from its components.",202,{"i":[{"n":"n"}],"o":{"n":"self"}}],[11,"new","","Initializes this matrix from its components.",202,{"i":[{"n":"n"},{"n":"n"}],"o":{"n":"self"}}],[11,"new","","Initializes this matrix from its components.",202,{"i":[{"n":"n"},{"n":"n"},{"n":"n"}],"o":{"n":"self"}}],[11,"new","","Initializes this matrix from its components.",202,{"i":[{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"}],"o":{"n":"self"}}],[11,"new","","Initializes this matrix from its components.",202,{"i":[{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"}],"o":{"n":"self"}}],[11,"new","","Initializes this matrix from its components.",202,{"i":[{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"}],"o":{"n":"self"}}],[11,"new","","Initializes this matrix from its components.",202,{"i":[{"n":"n"},{"n":"n"}],"o":{"n":"self"}}],[11,"new","","Initializes this matrix from its components.",202,{"i":[{"n":"n"},{"n":"n"},{"n":"n"}],"o":{"n":"self"}}],[11,"new","","Initializes this matrix from its components.",202,{"i":[{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"}],"o":{"n":"self"}}],[11,"new","","Initializes this matrix from its components.",202,{"i":[{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"}],"o":{"n":"self"}}],[11,"new","","Initializes this matrix from its components.",202,{"i":[{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"}],"o":{"n":"self"}}],[11,"x","","The column vector with a 1 as its first component, and zero elsewhere.",227,{"o":{"n":"self"}}],[11,"y","","The column vector with a 1 as its second component, and zero elsewhere.",227,{"o":{"n":"self"}}],[11,"z","","The column vector with a 1 as its third component, and zero elsewhere.",227,{"o":{"n":"self"}}],[11,"w","","The column vector with a 1 as its fourth component, and zero elsewhere.",227,{"o":{"n":"self"}}],[11,"a","","The column vector with a 1 as its fifth component, and zero elsewhere.",227,{"o":{"n":"self"}}],[11,"b","","The column vector with a 1 as its sixth component, and zero elsewhere.",227,{"o":{"n":"self"}}],[11,"x_axis","","The unit column vector with a 1 as its first component, and zero elsewhere.",227,{"o":{"n":"unit"}}],[11,"y_axis","","The unit column vector with a 1 as its second component, and zero elsewhere.",227,{"o":{"n":"unit"}}],[11,"z_axis","","The unit column vector with a 1 as its third component, and zero elsewhere.",227,{"o":{"n":"unit"}}],[11,"w_axis","","The unit column vector with a 1 as its fourth component, and zero elsewhere.",227,{"o":{"n":"unit"}}],[11,"a_axis","","The unit column vector with a 1 as its fifth component, and zero elsewhere.",227,{"o":{"n":"unit"}}],[11,"b_axis","","The unit column vector with a 1 as its sixth component, and zero elsewhere.",227,{"o":{"n":"unit"}}],[11,"from_slice_with_strides_generic_unchecked","","Creates, without bound-checking, a matrix slice from an array and with dimensions and strides specified by generic types instances.",228,null],[11,"from_slice_with_strides_generic","","Creates a matrix slice from an array and with dimensions and strides specified by generic types instances.",228,null],[11,"from_slice_with_strides_generic_unchecked","","Creates, without bound-checking, a mutable matrix slice from an array and with dimensions and strides specified by generic types instances.",229,null],[11,"from_slice_with_strides_generic","","Creates a mutable matrix slice from an array and with dimensions and strides specified by generic types instances.",229,null],[11,"from_slice_generic_unchecked","","Creates, without bound-checking, a matrix slice from an array and with dimensions specified by generic types instances.",228,null],[11,"from_slice_generic","","Creates a matrix slice from an array and with dimensions and strides specified by generic types instances.",228,null],[11,"from_slice_generic_unchecked","","Creates, without bound-checking, a mutable matrix slice from an array and with dimensions specified by generic types instances.",229,null],[11,"from_slice_generic","","Creates a mutable matrix slice from an array and with dimensions and strides specified by generic types instances.",229,null],[11,"from_slice","","Creates a new matrix slice from the given data array.",228,null],[11,"from_slice_unchecked","","Creates, without bound checking, a new matrix slice from the given data array.",228,null],[11,"from_slice_with_strides","","Creates a new matrix slice with the specified strides from the given data array.",228,null],[11,"from_slice_with_strides_unchecked","","Creates, without bound checking, a new matrix slice with the specified strides from the given data array.",228,null],[11,"from_slice","","Creates a new matrix slice from the given data array.",228,null],[11,"from_slice_unchecked","","Creates, without bound checking, a new matrix slice from the given data array.",228,null],[11,"from_slice_with_strides","","Creates a new matrix slice with the specified strides from the given data array.",228,null],[11,"from_slice_with_strides_unchecked","","Creates, without bound checking, a new matrix slice with the specified strides from the given data array.",228,null],[11,"from_slice","","Creates a new matrix slice from the given data array.",228,null],[11,"from_slice_unchecked","","Creates, without bound checking, a new matrix slice from the given data array.",228,null],[11,"from_slice_with_strides","","Creates a new matrix slice with the specified strides from the given data array.",228,null],[11,"from_slice_with_strides_unchecked","","Creates, without bound checking, a new matrix slice with the specified strides from the given data array.",228,null],[11,"from_slice","","Creates a new matrix slice from the given data array.",228,null],[11,"from_slice_unchecked","","Creates, without bound checking, a new matrix slice from the given data array.",228,null],[11,"from_slice_with_strides","","Creates a new matrix slice with the specified strides from the given data array.",228,null],[11,"from_slice_with_strides_unchecked","","Creates, without bound checking, a new matrix slice with the specified strides from the given data array.",228,null],[11,"from_slice","","Creates a new mutable matrix slice from the given data array.",229,null],[11,"from_slice_unchecked","","Creates, without bound checking, a new mutable matrix slice from the given data array.",229,null],[11,"from_slice_with_strides_mut","","Creates a new mutable matrix slice with the specified strides from the given data array.",229,null],[11,"from_slice_with_strides_unchecked","","Creates, without bound checking, a new mutable matrix slice with the specified strides from the given data array.",229,null],[11,"from_slice","","Creates a new mutable matrix slice from the given data array.",229,null],[11,"from_slice_unchecked","","Creates, without bound checking, a new mutable matrix slice from the given data array.",229,null],[11,"from_slice_with_strides_mut","","Creates a new mutable matrix slice with the specified strides from the given data array.",229,null],[11,"from_slice_with_strides_unchecked","","Creates, without bound checking, a new mutable matrix slice with the specified strides from the given data array.",229,null],[11,"from_slice","","Creates a new mutable matrix slice from the given data array.",229,null],[11,"from_slice_unchecked","","Creates, without bound checking, a new mutable matrix slice from the given data array.",229,null],[11,"from_slice_with_strides_mut","","Creates a new mutable matrix slice with the specified strides from the given data array.",229,null],[11,"from_slice_with_strides_unchecked","","Creates, without bound checking, a new mutable matrix slice with the specified strides from the given data array.",229,null],[11,"from_slice","","Creates a new mutable matrix slice from the given data array.",229,null],[11,"from_slice_unchecked","","Creates, without bound checking, a new mutable matrix slice from the given data array.",229,null],[11,"from_slice_with_strides_mut","","Creates a new mutable matrix slice with the specified strides from the given data array.",229,null],[11,"from_slice_with_strides_unchecked","","Creates, without bound checking, a new mutable matrix slice with the specified strides from the given data array.",229,null],[11,"new_with_strides_generic_unchecked","","Creates, without bound-checking, a matrix slice from an array and with dimensions and strides specified by generic types instances.",228,null],[11,"new_with_strides_generic","","Creates a matrix slice from an array and with dimensions and strides specified by generic types instances.",228,null],[11,"new_with_strides_generic_mut_unchecked","","Creates, without bound-checking, a mutable matrix slice from an array and with dimensions and strides specified by generic types instances.",229,null],[11,"new_with_strides_generic_mut","","Creates a mutable matrix slice from an array and with dimensions and strides specified by generic types instances.",229,null],[11,"new_generic_unchecked","","Creates, without bound-checking, a matrix slice from an array and with dimensions specified by generic types instances.",228,null],[11,"new_generic","","Creates a matrix slice from an array and with dimensions and strides specified by generic types instances.",228,null],[11,"new_generic_mut_unchecked","","Creates, without bound-checking, a mutable matrix slice from an array and with dimensions specified by generic types instances.",229,null],[11,"new_generic_mut","","Creates a mutable matrix slice from an array and with dimensions and strides specified by generic types instances.",229,null],[11,"new","","Creates a new matrix slice from the given data array.",228,null],[11,"new_unchecked","","Creates, without bound checking, a new matrix slice from the given data array.",228,null],[11,"new_with_strides","","Creates a new matrix slice with the specified strides from the given data array.",228,null],[11,"new_with_strides_unchecked","","Creates, without bound checking, a new matrix slice with the specified strides from the given data array.",228,null],[11,"new","","Creates a new matrix slice from the given data array.",228,null],[11,"new_unchecked","","Creates, without bound checking, a new matrix slice from the given data array.",228,null],[11,"new_with_strides","","Creates a new matrix slice with the specified strides from the given data array.",228,null],[11,"new_with_strides_unchecked","","Creates, without bound checking, a new matrix slice with the specified strides from the given data array.",228,null],[11,"new","","Creates a new matrix slice from the given data array.",228,null],[11,"new_unchecked","","Creates, without bound checking, a new matrix slice from the given data array.",228,null],[11,"new_with_strides","","Creates a new matrix slice with the specified strides from the given data array.",228,null],[11,"new_with_strides_unchecked","","Creates, without bound checking, a new matrix slice with the specified strides from the given data array.",228,null],[11,"new","","Creates a new matrix slice from the given data array.",228,null],[11,"new_unchecked","","Creates, without bound checking, a new matrix slice from the given data array.",228,null],[11,"new_with_strides","","Creates a new matrix slice with the specified strides from the given data array.",228,null],[11,"new_with_strides_unchecked","","Creates, without bound checking, a new matrix slice with the specified strides from the given data array.",228,null],[11,"new","","Creates a new mutable matrix slice from the given data array.",229,null],[11,"new_unchecked","","Creates, without bound checking, a new mutable matrix slice from the given data array.",229,null],[11,"new_with_strides","","Creates a new mutable matrix slice with the specified strides from the given data array.",229,null],[11,"new_with_strides_unchecked","","Creates, without bound checking, a new mutable matrix slice with the specified strides from the given data array.",229,null],[11,"new","","Creates a new mutable matrix slice from the given data array.",229,null],[11,"new_unchecked","","Creates, without bound checking, a new mutable matrix slice from the given data array.",229,null],[11,"new_with_strides","","Creates a new mutable matrix slice with the specified strides from the given data array.",229,null],[11,"new_with_strides_unchecked","","Creates, without bound checking, a new mutable matrix slice with the specified strides from the given data array.",229,null],[11,"new","","Creates a new mutable matrix slice from the given data array.",229,null],[11,"new_unchecked","","Creates, without bound checking, a new mutable matrix slice from the given data array.",229,null],[11,"new_with_strides","","Creates a new mutable matrix slice with the specified strides from the given data array.",229,null],[11,"new_with_strides_unchecked","","Creates, without bound checking, a new mutable matrix slice with the specified strides from the given data array.",229,null],[11,"new","","Creates a new mutable matrix slice from the given data array.",229,null],[11,"new_unchecked","","Creates, without bound checking, a new mutable matrix slice from the given data array.",229,null],[11,"new_with_strides","","Creates a new mutable matrix slice with the specified strides from the given data array.",229,null],[11,"new_with_strides_unchecked","","Creates, without bound checking, a new mutable matrix slice with the specified strides from the given data array.",229,null],[11,"is_special_orthogonal","","Checks that this matrix is orthogonal and has a determinant equal to 1.",215,{"i":[{"n":"self"},{"n":"n"}],"o":{"n":"bool"}}],[11,"is_invertible","","Returns `true` if this matrix is invertible.",215,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"identity","","",202,{"o":{"n":"self"}}],[11,"operate","","",202,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[11,"inverse","","",202,{"i":[{"n":"self"}],"o":{"n":"matrixmn"}}],[11,"inverse_mut","","",202,{"i":[{"n":"self"}]}],[11,"multiply_by","","",202,{"i":[{"n":"self"},{"n":"n"}],"o":{"n":"self"}}],[11,"dimension","","",202,{"o":{"n":"usize"}}],[11,"canonical_basis_element","","",202,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"dot","","",202,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"n"}}],[11,"component_unchecked","","",202,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"n"}}],[11,"component_unchecked_mut","","",202,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"n"}}],[11,"norm_squared","","",202,{"i":[{"n":"self"}],"o":{"n":"n"}}],[11,"norm","","",202,{"i":[{"n":"self"}],"o":{"n":"n"}}],[11,"normalize","","",202,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"normalize_mut","","",202,{"i":[{"n":"self"}],"o":{"n":"n"}}],[11,"try_normalize","","",202,{"i":[{"n":"self"},{"n":"n"}],"o":{"n":"option"}}],[11,"try_normalize_mut","","",202,{"i":[{"n":"self"},{"n":"n"}],"o":{"n":"option"}}],[11,"angle","","",202,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"n"}}],[11,"inner_product","","",202,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"n"}}],[11,"orthonormalize","","",202,null],[11,"orthonormal_subspace_basis","","",202,null],[11,"identity","","",225,{"o":{"n":"self"}}],[11,"operate","","",225,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[11,"meet","","",202,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[11,"join","","",202,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[11,"meet_join","","",202,null],[11,"to_superset","","",202,{"i":[{"n":"self"}],"o":{"n":"matrixmn"}}],[11,"is_in_subset","","",202,{"i":[{"n":"matrixmn"}],"o":{"n":"bool"}}],[11,"from_superset_unchecked","","",202,{"i":[{"n":"matrixmn"}],"o":{"n":"self"}}],[11,"from","","",202,null],[11,"from","","",202,null],[11,"from","","",202,null],[11,"from","","",202,null],[11,"from","","",202,null],[11,"from","","",202,null],[11,"from","","",202,null],[11,"from","","",202,null],[11,"from","","",202,null],[11,"from","","",202,null],[11,"from","","",202,null],[11,"from","","",202,null],[11,"from","","",202,null],[11,"from","","",202,null],[11,"from","","",202,null],[11,"from","","",202,null],[11,"from","","",202,null],[11,"from","","",202,null],[11,"from","","",202,null],[11,"from","","",202,null],[11,"from","","",202,null],[11,"from","","",202,null],[11,"from","","",202,null],[11,"from","","",202,null],[11,"from","","",202,null],[11,"from","","",202,null],[11,"from","","",202,null],[11,"from","","",202,null],[11,"from","","",202,null],[11,"from","","",202,null],[11,"from","","",202,null],[11,"from","","",202,null],[11,"from","","",202,null],[11,"from","","",202,null],[11,"from","","",202,null],[11,"from","","",202,null],[11,"from","","",202,null],[11,"from","","",202,null],[11,"from","","",202,null],[11,"from","","",202,null],[11,"from","","",202,null],[11,"from","","",202,null],[11,"from","","",202,null],[11,"from","","",202,null],[11,"from","","",202,null],[11,"from","","",202,null],[11,"from","","",202,null],[11,"from","","",202,null],[11,"from","","",202,null],[11,"from","","",202,null],[11,"from","","",202,null],[11,"from","","",202,null],[11,"from","","",202,null],[11,"from","","",202,null],[11,"from","","",202,null],[11,"from","","",202,null],[11,"new_scaling","","Creates a new homogeneous matrix that applies the same scaling factor on each dimension.",225,{"i":[{"n":"n"}],"o":{"n":"self"}}],[11,"new_nonuniform_scaling","","Creates a new homogeneous matrix that applies a distinct scaling factor for each dimension.",225,{"i":[{"n":"vector"}],"o":{"n":"self"}}],[11,"new_translation","","Creates a new homogeneous matrix that applies a pure translation.",225,{"i":[{"n":"vector"}],"o":{"n":"self"}}],[11,"new_rotation","","Builds a 2 dimensional homogeneous rotation matrix from an angle in radian.",230,{"i":[{"n":"n"}],"o":{"n":"self"}}],[11,"new_rotation","","Builds a 3D homogeneous rotation matrix from an axis and an angle (multiplied together).",231,{"i":[{"n":"vector3"}],"o":{"n":"self"}}],[11,"new_rotation_wrt_point","","Builds a 3D homogeneous rotation matrix from an axis and an angle (multiplied together).",231,{"i":[{"n":"vector3"},{"n":"point3"}],"o":{"n":"self"}}],[11,"from_scaled_axis","","Builds a 3D homogeneous rotation matrix from an axis and an angle (multiplied together).",231,{"i":[{"n":"vector3"}],"o":{"n":"self"}}],[11,"from_euler_angles","","Creates a new rotation from Euler angles.",231,{"i":[{"n":"n"},{"n":"n"},{"n":"n"}],"o":{"n":"self"}}],[11,"from_axis_angle","","Builds a 3D homogeneous rotation matrix from an axis and a rotation angle.",231,{"i":[{"n":"unit"},{"n":"n"}],"o":{"n":"self"}}],[11,"new_orthographic","","Creates a new homogeneous matrix for an orthographic projection.",231,{"i":[{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"}],"o":{"n":"self"}}],[11,"new_perspective","","Creates a new homogeneous matrix for a perspective projection.",231,{"i":[{"n":"n"},{"n":"n"},{"n":"n"},{"n":"n"}],"o":{"n":"self"}}],[11,"new_observer_frame","","Creates an isometry that corresponds to the local frame of an observer standing at the point `eye` and looking toward `target`.",231,{"i":[{"n":"point3"},{"n":"point3"},{"n":"vector3"}],"o":{"n":"self"}}],[11,"look_at_rh","","Builds a right-handed look-at view matrix.",231,{"i":[{"n":"point3"},{"n":"point3"},{"n":"vector3"}],"o":{"n":"self"}}],[11,"look_at_lh","","Builds a left-handed look-at view matrix.",231,{"i":[{"n":"point3"},{"n":"point3"},{"n":"vector3"}],"o":{"n":"self"}}],[11,"append_scaling","","Computes the transformation equal to `self` followed by an uniform scaling factor.",215,{"i":[{"n":"self"},{"n":"n"}],"o":{"n":"matrixn"}}],[11,"prepend_scaling","","Computes the transformation equal to an uniform scaling factor followed by `self`.",215,{"i":[{"n":"self"},{"n":"n"}],"o":{"n":"matrixn"}}],[11,"append_nonuniform_scaling","","Computes the transformation equal to `self` followed by a non-uniform scaling factor.",215,{"i":[{"n":"self"},{"n":"vector"}],"o":{"n":"matrixn"}}],[11,"prepend_nonuniform_scaling","","Computes the transformation equal to a non-uniform scaling factor followed by `self`.",215,{"i":[{"n":"self"},{"n":"vector"}],"o":{"n":"matrixn"}}],[11,"append_translation","","Computes the transformation equal to `self` followed by a translation.",215,{"i":[{"n":"self"},{"n":"vector"}],"o":{"n":"matrixn"}}],[11,"prepend_translation","","Computes the transformation equal to a translation followed by `self`.",215,{"i":[{"n":"self"},{"n":"vector"}],"o":{"n":"matrixn"}}],[11,"append_scaling_mut","","Computes in-place the transformation equal to `self` followed by an uniform scaling factor.",215,{"i":[{"n":"self"},{"n":"n"}]}],[11,"prepend_scaling_mut","","Computes in-place the transformation equal to an uniform scaling factor followed by `self`.",215,{"i":[{"n":"self"},{"n":"n"}]}],[11,"append_nonuniform_scaling_mut","","Computes in-place the transformation equal to `self` followed by a non-uniform scaling factor.",215,{"i":[{"n":"self"},{"n":"vector"}]}],[11,"prepend_nonuniform_scaling_mut","","Computes in-place the transformation equal to a non-uniform scaling factor followed by `self`.",215,{"i":[{"n":"self"},{"n":"vector"}]}],[11,"append_translation_mut","","Computes the transformation equal to `self` followed by a translation.",215,{"i":[{"n":"self"},{"n":"vector"}]}],[11,"prepend_translation_mut","","Computes the transformation equal to a translation followed by `self`.",215,{"i":[{"n":"self"},{"n":"vector"}]}],[11,"transform_vector","","",225,{"i":[{"n":"self"},{"n":"vectorn"}],"o":{"g":["dimnamediff"],"n":"vectorn"}}],[11,"transform_point","","",225,{"i":[{"n":"self"},{"n":"point"}],"o":{"g":["dimnamediff"],"n":"point"}}],[11,"to_superset","nalgebra::geometry","",232,{"i":[{"n":"self"}],"o":{"n":"unitquaternion"}}],[11,"is_in_subset","","",232,{"i":[{"n":"unitquaternion"}],"o":{"n":"bool"}}],[11,"from_superset_unchecked","","",232,{"i":[{"n":"unitquaternion"}],"o":{"n":"self"}}],[11,"to_superset","","",233,{"i":[{"n":"self"}],"o":{"n":"unitcomplex"}}],[11,"is_in_subset","","",233,{"i":[{"n":"unitcomplex"}],"o":{"n":"bool"}}],[11,"from_superset_unchecked","","",233,{"i":[{"n":"unitcomplex"}],"o":{"n":"self"}}],[11,"new","","Builds a 2 dimensional rotation matrix from an angle in radian.",233,{"i":[{"n":"n"}],"o":{"n":"self"}}],[11,"from_scaled_axis","","Builds a 2 dimensional rotation matrix from an angle in radian wrapped in a 1-dimensional vector.",233,{"i":[{"g":["u1"],"n":"vector"}],"o":{"n":"self"}}],[11,"rotation_between","","The rotation matrix required to align `a` and `b` but with its angl.",233,{"i":[{"n":"vector"},{"n":"vector"}],"o":{"n":"self"}}],[11,"scaled_rotation_between","","The smallest rotation needed to make `a` and `b` collinear and point toward the same direction, raised to the power `s`.",233,{"i":[{"n":"vector"},{"n":"vector"},{"n":"n"}],"o":{"n":"self"}}],[11,"angle","","The rotation angle.",233,{"i":[{"n":"self"}],"o":{"n":"n"}}],[11,"angle_to","","The rotation angle needed to make `self` and `other` coincide.",233,{"i":[{"n":"self"},{"n":"rotation2"}],"o":{"n":"n"}}],[11,"rotation_to","","The rotation matrix needed to make `self` and `other` coincide.",233,{"i":[{"n":"self"},{"n":"rotation2"}],"o":{"n":"rotation2"}}],[11,"powf","","Raise the quaternion to a given floating power, i.e., returns the rotation with the angle of `self` multiplied by `n`.",233,{"i":[{"n":"self"},{"n":"n"}],"o":{"n":"rotation2"}}],[11,"scaled_axis","","The rotation angle returned as a 1-dimensional vector.",233,{"i":[{"n":"self"}],"o":{"g":["u1"],"n":"vectorn"}}],[11,"rand","","",233,{"i":[{"n":"r"}],"o":{"n":"self"}}],[11,"new","","Builds a 3 dimensional rotation matrix from an axis and an angle.",232,{"i":[{"g":["u3"],"n":"vector"}],"o":{"n":"self"}}],[11,"from_scaled_axis","","Builds a 3D rotation matrix from an axis scaled by the rotation angle.",232,{"i":[{"g":["u3"],"n":"vector"}],"o":{"n":"self"}}],[11,"from_axis_angle","","Builds a 3D rotation matrix from an axis and a rotation angle.",232,{"i":[{"n":"unit"},{"n":"n"}],"o":{"n":"self"}}],[11,"from_euler_angles","","Creates a new rotation from Euler angles.",232,{"i":[{"n":"n"},{"n":"n"},{"n":"n"}],"o":{"n":"self"}}],[11,"to_euler_angles","","Creates Euler angles from a rotation.",232,null],[11,"new_observer_frame","","Creates a rotation that corresponds to the local frame of an observer standing at the origin and looking toward `dir`.",232,{"i":[{"n":"vector"},{"n":"vector"}],"o":{"n":"self"}}],[11,"look_at_rh","","Builds a right-handed look-at view matrix without translation.",232,{"i":[{"n":"vector"},{"n":"vector"}],"o":{"n":"self"}}],[11,"look_at_lh","","Builds a left-handed look-at view matrix without translation.",232,{"i":[{"n":"vector"},{"n":"vector"}],"o":{"n":"self"}}],[11,"rotation_between","","The rotation matrix required to align `a` and `b` but with its angl.",232,{"i":[{"n":"vector"},{"n":"vector"}],"o":{"n":"option"}}],[11,"scaled_rotation_between","","The smallest rotation needed to make `a` and `b` collinear and point toward the same direction, raised to the power `s`.",232,{"i":[{"n":"vector"},{"n":"vector"},{"n":"n"}],"o":{"n":"option"}}],[11,"angle","","The rotation angle.",232,{"i":[{"n":"self"}],"o":{"n":"n"}}],[11,"axis","","The rotation axis. Returns `None` if the rotation angle is zero or PI.",232,{"i":[{"n":"self"}],"o":{"g":["unit"],"n":"option"}}],[11,"scaled_axis","","The rotation axis multiplied by the rotation angle.",232,{"i":[{"n":"self"}],"o":{"n":"vector3"}}],[11,"angle_to","","The rotation angle needed to make `self` and `other` coincide.",232,{"i":[{"n":"self"},{"n":"rotation3"}],"o":{"n":"n"}}],[11,"rotation_to","","The rotation matrix needed to make `self` and `other` coincide.",232,{"i":[{"n":"self"},{"n":"rotation3"}],"o":{"n":"rotation3"}}],[11,"powf","","Raise the quaternion to a given floating power, i.e., returns the rotation with the same axis as `self` and an angle equal to `self.angle()` multiplied by `n`.",232,{"i":[{"n":"self"},{"n":"n"}],"o":{"n":"rotation3"}}],[11,"rand","","",232,{"i":[{"n":"r"}],"o":{"n":"self"}}],[11,"into_owned","","Moves this unit quaternion into one that owns its data.",234,{"i":[{"n":"self"}],"o":{"n":"unitquaternion"}}],[11,"clone_owned","","Clones this unit quaternion into one that owns its data.",234,{"i":[{"n":"self"}],"o":{"n":"unitquaternion"}}],[11,"angle","","The rotation angle in [0; pi] of this unit quaternion.",234,{"i":[{"n":"self"}],"o":{"n":"n"}}],[11,"quaternion","","The underlying quaternion.",234,{"i":[{"n":"self"}],"o":{"n":"quaternion"}}],[11,"conjugate","","Compute the conjugate of this unit quaternion.",234,{"i":[{"n":"self"}],"o":{"n":"unitquaternion"}}],[11,"inverse","","Inverts this quaternion if it is not zero.",234,{"i":[{"n":"self"}],"o":{"n":"unitquaternion"}}],[11,"angle_to","","The rotation angle needed to make `self` and `other` coincide.",234,{"i":[{"n":"self"},{"n":"unitquaternion"}],"o":{"n":"n"}}],[11,"rotation_to","","The unit quaternion needed to make `self` and `other` coincide.",234,{"i":[{"n":"self"},{"n":"unitquaternion"}],"o":{"n":"unitquaternion"}}],[11,"lerp","","Linear interpolation between two unit quaternions.",234,{"i":[{"n":"self"},{"n":"unitquaternion"},{"n":"n"}],"o":{"n":"quaternion"}}],[11,"nlerp","","Normalized linear interpolation between two unit quaternions.",234,{"i":[{"n":"self"},{"n":"unitquaternion"},{"n":"n"}],"o":{"n":"unitquaternion"}}],[11,"slerp","","Spherical linear interpolation between two unit quaternions.",234,{"i":[{"n":"self"},{"n":"unitquaternion"},{"n":"n"}],"o":{"n":"unitquaternion"}}],[11,"try_slerp","","Computes the spherical linear interpolation between two unit quaternions or returns `None` if both quaternions are approximately 180 degrees apart (in which case the interpolation is not well-defined).",234,{"i":[{"n":"self"},{"n":"unitquaternion"},{"n":"n"},{"n":"n"}],"o":{"g":["unitquaternion"],"n":"option"}}],[11,"conjugate_mut","","Compute the conjugate of this unit quaternion in-place.",234,{"i":[{"n":"self"}]}],[11,"inverse_mut","","Inverts this quaternion if it is not zero.",234,{"i":[{"n":"self"}]}],[11,"axis","","The rotation axis of this unit quaternion or `None` if the rotation is zero.",234,{"i":[{"n":"self"}],"o":{"g":["unit"],"n":"option"}}],[11,"scaled_axis","","The rotation axis of this unit quaternion multiplied by the rotation agle.",234,{"i":[{"n":"self"}],"o":{"n":"vector3"}}],[11,"axis_angle","","The rotation axis and angle in ]0, pi] of this unit quaternion.",234,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"exp","","Compute the exponential of a quaternion.",234,{"i":[{"n":"self"}],"o":{"n":"quaternion"}}],[11,"ln","","Compute the natural logarithm of a quaternion.",234,{"i":[{"n":"self"}],"o":{"n":"quaternion"}}],[11,"powf","","Raise the quaternion to a given floating power.",234,{"i":[{"n":"self"},{"n":"n"}],"o":{"n":"unitquaternion"}}],[11,"to_rotation_matrix","","Builds a rotation matrix from this unit quaternion.",234,{"i":[{"n":"self"}],"o":{"g":["u3"],"n":"rotation"}}],[11,"to_euler_angles","","Converts this unit quaternion into its equivalent Euler angles.",234,null],[11,"to_homogeneous","","Converts this unit quaternion into its equivalent homogeneous transformation matrix.",234,{"i":[{"n":"self"}],"o":{"g":["u4"],"n":"matrixn"}}],[11,"fmt","","",234,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"default_epsilon","","",234,null],[11,"default_max_relative","","",234,null],[11,"default_max_ulps","","",234,{"o":{"n":"u32"}}],[11,"relative_eq","","",234,null],[11,"ulps_eq","","",234,null],[11,"identity","","The quaternion multiplicative identity.",234,{"o":{"n":"self"}}],[11,"from_axis_angle","","Creates a new quaternion from a unit vector (the rotation axis) and an angle (the rotation angle).",234,{"i":[{"n":"unit"},{"n":"n"}],"o":{"n":"self"}}],[11,"from_quaternion","","Creates a new unit quaternion from a quaternion.",234,{"i":[{"n":"quaternion"}],"o":{"n":"self"}}],[11,"from_euler_angles","","Creates a new unit quaternion from Euler angles.",234,{"i":[{"n":"n"},{"n":"n"},{"n":"n"}],"o":{"n":"self"}}],[11,"from_rotation_matrix","","Builds an unit quaternion from a rotation matrix.",234,{"i":[{"n":"rotation"}],"o":{"n":"self"}}],[11,"rotation_between","","The unit quaternion needed to make `a` and `b` be collinear and point toward the same direction.",234,{"i":[{"n":"vector"},{"n":"vector"}],"o":{"n":"option"}}],[11,"scaled_rotation_between","","The smallest rotation needed to make `a` and `b` collinear and point toward the same direction, raised to the power `s`.",234,{"i":[{"n":"vector"},{"n":"vector"},{"n":"n"}],"o":{"n":"option"}}],[11,"rotation_between_axis","","The unit quaternion needed to make `a` and `b` be collinear and point toward the same direction.",234,{"i":[{"n":"unit"},{"n":"unit"}],"o":{"n":"option"}}],[11,"scaled_rotation_between_axis","","The smallest rotation needed to make `a` and `b` collinear and point toward the same direction, raised to the power `s`.",234,{"i":[{"n":"unit"},{"n":"unit"},{"n":"n"}],"o":{"n":"option"}}],[11,"new_observer_frame","","Creates an unit quaternion that corresponds to the local frame of an observer standing at the origin and looking toward `dir`.",234,{"i":[{"n":"vector"},{"n":"vector"}],"o":{"n":"self"}}],[11,"look_at_rh","","Builds a right-handed look-at view matrix without translation.",234,{"i":[{"n":"vector"},{"n":"vector"}],"o":{"n":"self"}}],[11,"look_at_lh","","Builds a left-handed look-at view matrix without translation.",234,{"i":[{"n":"vector"},{"n":"vector"}],"o":{"n":"self"}}],[11,"new","","Creates a new unit quaternion rotation from a rotation axis scaled by the rotation angle.",234,{"i":[{"g":["u3"],"n":"vector"}],"o":{"n":"self"}}],[11,"new_eps","","Creates a new unit quaternion rotation from a rotation axis scaled by the rotation angle.",234,{"i":[{"g":["u3"],"n":"vector"},{"n":"n"}],"o":{"n":"self"}}],[11,"from_scaled_axis","","Creates a new unit quaternion rotation from a rotation axis scaled by the rotation angle.",234,{"i":[{"g":["u3"],"n":"vector"}],"o":{"n":"self"}}],[11,"from_scaled_axis_eps","","Creates a new unit quaternion rotation from a rotation axis scaled by the rotation angle.",234,{"i":[{"g":["u3"],"n":"vector"},{"n":"n"}],"o":{"n":"self"}}],[11,"one","","",234,{"o":{"n":"self"}}],[11,"rand","","",234,{"i":[{"n":"r"}],"o":{"n":"self"}}],[11,"mul","","",234,null],[11,"mul","","",234,null],[11,"div","","",234,null],[11,"div","","",234,null],[11,"mul","","",234,null],[11,"mul","","",234,null],[11,"div","","",234,null],[11,"div","","",234,null],[11,"mul","","",234,null],[11,"mul","","",234,null],[11,"mul","","",234,null],[11,"mul","","",234,null],[11,"mul","","",234,null],[11,"mul","","",234,null],[11,"mul_assign","","",234,{"i":[{"n":"self"},{"n":"unitquaternion"}]}],[11,"mul_assign","","",234,{"i":[{"n":"self"},{"n":"unitquaternion"}]}],[11,"div_assign","","",234,{"i":[{"n":"self"},{"n":"unitquaternion"}]}],[11,"div_assign","","",234,{"i":[{"n":"self"},{"n":"unitquaternion"}]}],[11,"mul_assign","","",234,{"i":[{"n":"self"},{"n":"rotation"}]}],[11,"mul_assign","","",234,{"i":[{"n":"self"},{"g":["u3"],"n":"rotation"}]}],[11,"div_assign","","",234,{"i":[{"n":"self"},{"n":"rotation"}]}],[11,"div_assign","","",234,{"i":[{"n":"self"},{"g":["u3"],"n":"rotation"}]}],[11,"identity","","",234,{"o":{"n":"self"}}],[11,"operate","","",234,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[11,"inverse","","",234,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"inverse_mut","","",234,{"i":[{"n":"self"}]}],[11,"transform_point","","",234,{"i":[{"n":"self"},{"n":"point3"}],"o":{"n":"point3"}}],[11,"transform_vector","","",234,{"i":[{"n":"self"},{"n":"vector3"}],"o":{"n":"vector3"}}],[11,"inverse_transform_point","","",234,{"i":[{"n":"self"},{"n":"point3"}],"o":{"n":"point3"}}],[11,"inverse_transform_vector","","",234,{"i":[{"n":"self"},{"n":"vector3"}],"o":{"n":"vector3"}}],[11,"decompose","","",234,null],[11,"append_translation","","",234,null],[11,"prepend_translation","","",234,null],[11,"append_rotation","","",234,null],[11,"prepend_rotation","","",234,null],[11,"append_scaling","","",234,null],[11,"prepend_scaling","","",234,null],[11,"translation","","",234,{"i":[{"n":"self"}],"o":{"n":"id"}}],[11,"rotation","","",234,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"scaling","","",234,{"i":[{"n":"self"}],"o":{"n":"id"}}],[11,"powf","","",234,{"i":[{"n":"self"},{"n":"n"}],"o":{"n":"option"}}],[11,"rotation_between","","",234,{"i":[{"n":"vector3"},{"n":"vector3"}],"o":{"n":"option"}}],[11,"scaled_rotation_between","","",234,{"i":[{"n":"vector3"},{"n":"vector3"},{"n":"n"}],"o":{"n":"option"}}],[11,"to_superset","","",234,{"i":[{"n":"self"}],"o":{"n":"unitquaternion"}}],[11,"is_in_subset","","",234,{"i":[{"n":"unitquaternion"}],"o":{"n":"bool"}}],[11,"from_superset_unchecked","","",234,{"i":[{"n":"unitquaternion"}],"o":{"n":"self"}}],[11,"to_superset","","",234,{"i":[{"n":"self"}],"o":{"n":"rotation3"}}],[11,"is_in_subset","","",234,{"i":[{"n":"rotation3"}],"o":{"n":"bool"}}],[11,"from_superset_unchecked","","",234,{"i":[{"n":"rotation3"}],"o":{"n":"self"}}],[11,"to_superset","","",234,{"i":[{"n":"self"}],"o":{"g":["u3"],"n":"isometry"}}],[11,"is_in_subset","","",234,{"i":[{"n":"isometry"}],"o":{"n":"bool"}}],[11,"from_superset_unchecked","","",234,{"i":[{"n":"isometry"}],"o":{"n":"self"}}],[11,"to_superset","","",234,{"i":[{"n":"self"}],"o":{"g":["u3"],"n":"similarity"}}],[11,"is_in_subset","","",234,{"i":[{"n":"similarity"}],"o":{"n":"bool"}}],[11,"from_superset_unchecked","","",234,{"i":[{"n":"similarity"}],"o":{"n":"self"}}],[11,"to_superset","","",234,{"i":[{"n":"self"}],"o":{"g":["u3"],"n":"transform"}}],[11,"is_in_subset","","",234,{"i":[{"n":"transform"}],"o":{"n":"bool"}}],[11,"from_superset_unchecked","","",234,{"i":[{"n":"transform"}],"o":{"n":"self"}}],[11,"to_superset","","",234,{"i":[{"n":"self"}],"o":{"n":"matrix4"}}],[11,"is_in_subset","","",234,{"i":[{"n":"matrix4"}],"o":{"n":"bool"}}],[11,"from_superset_unchecked","","",234,{"i":[{"n":"matrix4"}],"o":{"n":"self"}}],[11,"angle","","The rotation angle in `]-pi; pi]` of this unit complex number.",235,{"i":[{"n":"self"}],"o":{"n":"n"}}],[11,"sin_angle","","The sine of the rotation angle.",235,{"i":[{"n":"self"}],"o":{"n":"n"}}],[11,"cos_angle","","The cosine of the rotation angle.",235,{"i":[{"n":"self"}],"o":{"n":"n"}}],[11,"scaled_axis","","The rotation angle returned as a 1-dimensional vector.",235,{"i":[{"n":"self"}],"o":{"n":"vector1"}}],[11,"axis_angle","","The rotation axis and angle in ]0, pi] of this complex number.",235,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"complex","","The underlying complex number.",235,{"i":[{"n":"self"}],"o":{"n":"complex"}}],[11,"conjugate","","Compute the conjugate of this unit complex number.",235,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"inverse","","Inverts this complex number if it is not zero.",235,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"angle_to","","The rotation angle needed to make `self` and `other` coincide.",235,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"n"}}],[11,"rotation_to","","The unit complex number needed to make `self` and `other` coincide.",235,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[11,"conjugate_mut","","Compute in-place the conjugate of this unit complex number.",235,{"i":[{"n":"self"}]}],[11,"inverse_mut","","Inverts in-place this unit complex number.",235,{"i":[{"n":"self"}]}],[11,"powf","","Raise this unit complex number to a given floating power.",235,{"i":[{"n":"self"},{"n":"n"}],"o":{"n":"self"}}],[11,"to_rotation_matrix","","Builds the rotation matrix corresponding to this unit complex number.",235,{"i":[{"n":"self"}],"o":{"n":"rotation2"}}],[11,"to_homogeneous","","Converts this unit complex number into its equivalent homogeneous transformation matrix.",235,{"i":[{"n":"self"}],"o":{"n":"matrix3"}}],[11,"fmt","","",235,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"default_epsilon","","",235,null],[11,"default_max_relative","","",235,null],[11,"default_max_ulps","","",235,{"o":{"n":"u32"}}],[11,"relative_eq","","",235,null],[11,"ulps_eq","","",235,null],[11,"identity","","The unit complex number multiplicative identity.",235,{"o":{"n":"self"}}],[11,"new","","Builds the unit complex number corresponding to the rotation with the angle.",235,{"i":[{"n":"n"}],"o":{"n":"self"}}],[11,"from_angle","","Builds the unit complex number corresponding to the rotation with the angle.",235,{"i":[{"n":"n"}],"o":{"n":"self"}}],[11,"from_cos_sin_unchecked","","Builds the unit complex number frow the sinus and cosinus of the rotation angle.",235,{"i":[{"n":"n"},{"n":"n"}],"o":{"n":"self"}}],[11,"from_scaled_axis","","Builds a unit complex rotation from an angle in radian wrapped in a 1-dimensional vector.",235,{"i":[{"g":["u1"],"n":"vector"}],"o":{"n":"self"}}],[11,"from_complex","","Creates a new unit complex number from a complex number.",235,{"i":[{"n":"complex"}],"o":{"n":"self"}}],[11,"from_complex_and_get","","Creates a new unit complex number from a complex number.",235,null],[11,"from_rotation_matrix","","Builds the unit complex number from the corresponding 2D rotation matrix.",235,{"i":[{"n":"rotation"}],"o":{"n":"self"}}],[11,"rotation_between","","The unit complex needed to make `a` and `b` be collinear and point toward the same direction.",235,{"i":[{"n":"vector"},{"n":"vector"}],"o":{"n":"self"}}],[11,"scaled_rotation_between","","The smallest rotation needed to make `a` and `b` collinear and point toward the same direction, raised to the power `s`.",235,{"i":[{"n":"vector"},{"n":"vector"},{"n":"n"}],"o":{"n":"self"}}],[11,"rotation_between_axis","","The unit complex needed to make `a` and `b` be collinear and point toward the same direction.",235,{"i":[{"n":"unit"},{"n":"unit"}],"o":{"n":"self"}}],[11,"scaled_rotation_between_axis","","The smallest rotation needed to make `a` and `b` collinear and point toward the same direction, raised to the power `s`.",235,{"i":[{"n":"unit"},{"n":"unit"},{"n":"n"}],"o":{"n":"self"}}],[11,"one","","",235,{"o":{"n":"self"}}],[11,"rand","","",235,{"i":[{"n":"r"}],"o":{"n":"self"}}],[11,"mul","","",235,{"i":[{"n":"self"},{"n":"unitcomplex"}],"o":{"n":"unitcomplex"}}],[11,"mul","","",235,{"i":[{"n":"self"},{"n":"unitcomplex"}],"o":{"n":"unitcomplex"}}],[11,"div","","",235,{"i":[{"n":"self"},{"n":"unitcomplex"}],"o":{"n":"unitcomplex"}}],[11,"div","","",235,{"i":[{"n":"self"},{"n":"unitcomplex"}],"o":{"n":"unitcomplex"}}],[11,"mul","","",235,null],[11,"mul","","",235,null],[11,"div","","",235,null],[11,"div","","",235,null],[11,"mul","","",235,null],[11,"mul","","",235,null],[11,"mul","","",235,null],[11,"mul","","",235,null],[11,"mul","","",235,null],[11,"mul","","",235,null],[11,"mul","","",235,null],[11,"mul","","",235,null],[11,"mul","","",235,null],[11,"mul","","",235,null],[11,"mul","","",235,null],[11,"mul","","",235,null],[11,"mul_assign","","",235,{"i":[{"n":"self"},{"n":"unitcomplex"}]}],[11,"mul_assign","","",235,{"i":[{"n":"self"},{"n":"unitcomplex"}]}],[11,"div_assign","","",235,{"i":[{"n":"self"},{"n":"unitcomplex"}]}],[11,"div_assign","","",235,{"i":[{"n":"self"},{"n":"unitcomplex"}]}],[11,"mul_assign","","",235,{"i":[{"n":"self"},{"g":["u2"],"n":"rotation"}]}],[11,"mul_assign","","",235,{"i":[{"n":"self"},{"n":"rotation"}]}],[11,"div_assign","","",235,{"i":[{"n":"self"},{"g":["u2"],"n":"rotation"}]}],[11,"div_assign","","",235,{"i":[{"n":"self"},{"n":"rotation"}]}],[11,"rotate","","Performs the multiplication `rhs = self * rhs` in-place.",235,{"i":[{"n":"self"},{"n":"matrix"}]}],[11,"rotate_rows","","Performs the multiplication `lhs = lhs * self` in-place.",235,{"i":[{"n":"self"},{"n":"matrix"}]}],[11,"identity","","",235,{"o":{"n":"self"}}],[11,"operate","","",235,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[11,"inverse","","",235,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"inverse_mut","","",235,{"i":[{"n":"self"}]}],[11,"transform_point","","",235,{"i":[{"n":"self"},{"n":"point2"}],"o":{"n":"point2"}}],[11,"transform_vector","","",235,{"i":[{"n":"self"},{"n":"vector2"}],"o":{"n":"vector2"}}],[11,"inverse_transform_point","","",235,{"i":[{"n":"self"},{"n":"point2"}],"o":{"n":"point2"}}],[11,"inverse_transform_vector","","",235,{"i":[{"n":"self"},{"n":"vector2"}],"o":{"n":"vector2"}}],[11,"decompose","","",235,null],[11,"append_translation","","",235,null],[11,"prepend_translation","","",235,null],[11,"append_rotation","","",235,null],[11,"prepend_rotation","","",235,null],[11,"append_scaling","","",235,null],[11,"prepend_scaling","","",235,null],[11,"translation","","",235,{"i":[{"n":"self"}],"o":{"n":"id"}}],[11,"rotation","","",235,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"scaling","","",235,{"i":[{"n":"self"}],"o":{"n":"id"}}],[11,"powf","","",235,{"i":[{"n":"self"},{"n":"n"}],"o":{"n":"option"}}],[11,"rotation_between","","",235,{"i":[{"n":"vector2"},{"n":"vector2"}],"o":{"n":"option"}}],[11,"scaled_rotation_between","","",235,{"i":[{"n":"vector2"},{"n":"vector2"},{"n":"n"}],"o":{"n":"option"}}],[11,"to_superset","","",235,{"i":[{"n":"self"}],"o":{"n":"unitcomplex"}}],[11,"is_in_subset","","",235,{"i":[{"n":"unitcomplex"}],"o":{"n":"bool"}}],[11,"from_superset_unchecked","","",235,{"i":[{"n":"unitcomplex"}],"o":{"n":"self"}}],[11,"to_superset","","",235,{"i":[{"n":"self"}],"o":{"n":"rotation2"}}],[11,"is_in_subset","","",235,{"i":[{"n":"rotation2"}],"o":{"n":"bool"}}],[11,"from_superset_unchecked","","",235,{"i":[{"n":"rotation2"}],"o":{"n":"self"}}],[11,"to_superset","","",235,{"i":[{"n":"self"}],"o":{"g":["u2"],"n":"isometry"}}],[11,"is_in_subset","","",235,{"i":[{"n":"isometry"}],"o":{"n":"bool"}}],[11,"from_superset_unchecked","","",235,{"i":[{"n":"isometry"}],"o":{"n":"self"}}],[11,"to_superset","","",235,{"i":[{"n":"self"}],"o":{"g":["u2"],"n":"similarity"}}],[11,"is_in_subset","","",235,{"i":[{"n":"similarity"}],"o":{"n":"bool"}}],[11,"from_superset_unchecked","","",235,{"i":[{"n":"similarity"}],"o":{"n":"self"}}],[11,"to_superset","","",235,{"i":[{"n":"self"}],"o":{"g":["u2"],"n":"transform"}}],[11,"is_in_subset","","",235,{"i":[{"n":"transform"}],"o":{"n":"bool"}}],[11,"from_superset_unchecked","","",235,{"i":[{"n":"transform"}],"o":{"n":"self"}}],[11,"to_superset","","",235,{"i":[{"n":"self"}],"o":{"n":"matrix3"}}],[11,"is_in_subset","","",235,{"i":[{"n":"matrix3"}],"o":{"n":"bool"}}],[11,"from_superset_unchecked","","",235,{"i":[{"n":"matrix3"}],"o":{"n":"self"}}],[11,"mul","","",234,null],[11,"mul","","",234,null],[11,"mul","","",234,null],[11,"mul","","",234,null],[11,"div","","",234,null],[11,"div","","",234,null],[11,"mul","","",234,null],[11,"mul","","",234,null],[11,"div","","",234,null],[11,"div","","",234,null],[11,"has_normalizer","","Indicates whether a `Transform` with the category `Self` has a bottom-row different from `0 0 .. 1`.",210,{"o":{"n":"bool"}}],[11,"mul","","",234,null],[11,"mul","","",234,null],[11,"div","","",234,null],[11,"div","","",234,null]],"paths":[[8,"Real"],[3,"Matrix"],[8,"Dim"],[8,"DimAdd"],[8,"DimNameAdd"],[8,"DimMul"],[8,"DimNameMul"],[8,"DimSub"],[8,"DimNameSub"],[8,"DimDiv"],[8,"DimNameDiv"],[8,"DimMin"],[8,"DimNameMin"],[8,"DimMax"],[8,"DimNameMax"],[8,"DimName"],[8,"NamedDim"],[3,"Dynamic"],[3,"U1"],[3,"U0"],[3,"U2"],[3,"U3"],[3,"U4"],[3,"U5"],[3,"U6"],[3,"U7"],[3,"U8"],[3,"U9"],[3,"U10"],[3,"U11"],[3,"U12"],[3,"U13"],[3,"U14"],[3,"U15"],[3,"U16"],[3,"U17"],[3,"U18"],[3,"U19"],[3,"U20"],[3,"U21"],[3,"U22"],[3,"U23"],[3,"U24"],[3,"U25"],[3,"U26"],[3,"U27"],[3,"U28"],[3,"U29"],[3,"U30"],[3,"U31"],[3,"U32"],[3,"U33"],[3,"U34"],[3,"U35"],[3,"U36"],[3,"U37"],[3,"U38"],[3,"U39"],[3,"U40"],[3,"U41"],[3,"U42"],[3,"U43"],[3,"U44"],[3,"U45"],[3,"U46"],[3,"U47"],[3,"U48"],[3,"U49"],[3,"U50"],[3,"U51"],[3,"U52"],[3,"U53"],[3,"U54"],[3,"U55"],[3,"U56"],[3,"U57"],[3,"U58"],[3,"U59"],[3,"U60"],[3,"U61"],[3,"U62"],[3,"U63"],[3,"U64"],[3,"U65"],[3,"U66"],[3,"U67"],[3,"U68"],[3,"U69"],[3,"U70"],[3,"U71"],[3,"U72"],[3,"U73"],[3,"U74"],[3,"U75"],[3,"U76"],[3,"U77"],[3,"U78"],[3,"U79"],[3,"U80"],[3,"U81"],[3,"U82"],[3,"U83"],[3,"U84"],[3,"U85"],[3,"U86"],[3,"U87"],[3,"U88"],[3,"U89"],[3,"U90"],[3,"U91"],[3,"U92"],[3,"U93"],[3,"U94"],[3,"U95"],[3,"U96"],[3,"U97"],[3,"U98"],[3,"U99"],[3,"U100"],[3,"U101"],[3,"U102"],[3,"U103"],[3,"U104"],[3,"U105"],[3,"U106"],[3,"U107"],[3,"U108"],[3,"U109"],[3,"U110"],[3,"U111"],[3,"U112"],[3,"U113"],[3,"U114"],[3,"U115"],[3,"U116"],[3,"U117"],[3,"U118"],[3,"U119"],[3,"U120"],[3,"U121"],[3,"U122"],[3,"U123"],[3,"U124"],[3,"U125"],[3,"U126"],[3,"U127"],[8,"DimEq"],[8,"SameNumberOfRows"],[8,"SameNumberOfColumns"],[8,"SameDimension"],[8,"Allocator"],[8,"Reallocator"],[8,"Storage"],[8,"StorageMut"],[3,"X"],[3,"XY"],[3,"XYZ"],[3,"XYZW"],[3,"XYZWA"],[3,"XYZWAB"],[3,"IJKW"],[3,"M2x2"],[3,"M2x3"],[3,"M2x4"],[3,"M2x5"],[3,"M2x6"],[3,"M3x2"],[3,"M3x3"],[3,"M3x4"],[3,"M3x5"],[3,"M3x6"],[3,"M4x2"],[3,"M4x3"],[3,"M4x4"],[3,"M4x5"],[3,"M4x6"],[3,"M5x2"],[3,"M5x3"],[3,"M5x4"],[3,"M5x5"],[3,"M5x6"],[3,"M6x2"],[3,"M6x3"],[3,"M6x4"],[3,"M6x5"],[3,"M6x6"],[3,"MatrixIter"],[3,"MatrixIterMut"],[3,"DefaultAllocator"],[3,"Unit"],[3,"SliceStorage"],[3,"SliceStorageMut"],[3,"MatrixArray"],[3,"MatrixVec"],[8,"Scalar"],[8,"SliceRange"],[3,"Point"],[3,"Quaternion"],[3,"Translation"],[3,"Isometry"],[3,"Similarity"],[3,"Rotation"],[6,"MatrixMN"],[4,"TGeneral"],[4,"TProjective"],[4,"TAffine"],[3,"Transform"],[3,"Reflection"],[3,"Orthographic3"],[3,"Perspective3"],[8,"TCategory"],[8,"TCategoryMul"],[3,"Bidiagonal"],[3,"SVD"],[3,"SymmetricEigen"],[6,"SquareMatrix"],[3,"PermutationSequence"],[3,"QR"],[3,"Hessenberg"],[3,"SymmetricTridiagonal"],[3,"Cholesky"],[3,"LU"],[3,"FullPivLU"],[3,"RealSchur"],[3,"Id"],[6,"MatrixN"],[6,"Vector"],[6,"VectorN"],[6,"MatrixSliceMN"],[6,"MatrixSliceMutMN"],[6,"Matrix3"],[6,"Matrix4"],[6,"Rotation3"],[6,"Rotation2"],[6,"UnitQuaternion"],[6,"UnitComplex"]]};
searchIndex["nodrop"] = {"doc":"The nodrop crate has the following cargo feature flags:","items":[[3,"NoDrop","nodrop","A type holding T that will not call its destructor on drop",null,null],[11,"new","","Create a new NoDrop.",0,{"i":[{"n":"t"}],"o":{"n":"nodrop"}}],[11,"into_inner","","Extract the inner value.",0,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"drop","","",0,{"i":[{"n":"self"}]}],[11,"deref","","",0,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"deref_mut","","",0,{"i":[{"n":"self"}],"o":{"n":"t"}}]],"paths":[[3,"NoDrop"]]};
searchIndex["num_complex"] = {"doc":"Complex numbers.","items":[[3,"Complex","num_complex","A complex number in Cartesian form.",null,null],[12,"re","","Real portion of the complex number",0,null],[12,"im","","Imaginary portion of the complex number",0,null],[3,"ParseComplexError","","",null,null],[11,"add_assign","","",0,{"i":[{"n":"self"},{"n":"complex"}]}],[11,"sub_assign","","",0,{"i":[{"n":"self"},{"n":"complex"}]}],[11,"mul_assign","","",0,{"i":[{"n":"self"},{"n":"complex"}]}],[11,"div_assign","","",0,{"i":[{"n":"self"},{"n":"complex"}]}],[11,"rem_assign","","",0,{"i":[{"n":"self"},{"n":"complex"}]}],[11,"add_assign","","",0,{"i":[{"n":"self"},{"n":"t"}]}],[11,"sub_assign","","",0,{"i":[{"n":"self"},{"n":"t"}]}],[11,"mul_assign","","",0,{"i":[{"n":"self"},{"n":"t"}]}],[11,"div_assign","","",0,{"i":[{"n":"self"},{"n":"t"}]}],[11,"rem_assign","","",0,{"i":[{"n":"self"},{"n":"t"}]}],[11,"add_assign","","",0,{"i":[{"n":"self"},{"n":"complex"}]}],[11,"add_assign","","",0,{"i":[{"n":"self"},{"n":"t"}]}],[11,"sub_assign","","",0,{"i":[{"n":"self"},{"n":"complex"}]}],[11,"sub_assign","","",0,{"i":[{"n":"self"},{"n":"t"}]}],[11,"mul_assign","","",0,{"i":[{"n":"self"},{"n":"complex"}]}],[11,"mul_assign","","",0,{"i":[{"n":"self"},{"n":"t"}]}],[11,"div_assign","","",0,{"i":[{"n":"self"},{"n":"complex"}]}],[11,"div_assign","","",0,{"i":[{"n":"self"},{"n":"t"}]}],[11,"rem_assign","","",0,{"i":[{"n":"self"},{"n":"complex"}]}],[11,"rem_assign","","",0,{"i":[{"n":"self"},{"n":"t"}]}],[6,"Complex32","","",null,null],[6,"Complex64","","",null,null],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"complex"}],"o":{"n":"bool"}}],[11,"ne","","",0,{"i":[{"n":"self"},{"n":"complex"}],"o":{"n":"bool"}}],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"complex"}}],[11,"hash","","",0,null],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"default","","",0,{"o":{"n":"complex"}}],[11,"new","","Create a new Complex",0,{"i":[{"n":"t"},{"n":"t"}],"o":{"n":"complex"}}],[11,"i","","Returns imaginary unit",0,{"o":{"n":"complex"}}],[11,"norm_sqr","","Returns the square of the norm (since `T` doesn't necessarily have a sqrt function), i.e. `re^2 + im^2`.",0,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"scale","","Multiplies `self` by the scalar `t`.",0,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"complex"}}],[11,"unscale","","Divides `self` by the scalar `t`.",0,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"complex"}}],[11,"conj","","Returns the complex conjugate. i.e. `re - i im`",0,{"i":[{"n":"self"}],"o":{"n":"complex"}}],[11,"inv","","Returns `1/self`",0,{"i":[{"n":"self"}],"o":{"n":"complex"}}],[11,"norm","","Calculate |self|",0,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"arg","","Calculate the principal Arg of self.",0,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"to_polar","","Convert to polar form (r, theta), such that `self = r * exp(i * theta)`",0,null],[11,"from_polar","","Convert a polar representation into a complex number.",0,{"i":[{"n":"t"},{"n":"t"}],"o":{"n":"complex"}}],[11,"exp","","Computes `e^(self)`, where `e` is the base of the natural logarithm.",0,{"i":[{"n":"self"}],"o":{"n":"complex"}}],[11,"ln","","Computes the principal value of natural logarithm of `self`.",0,{"i":[{"n":"self"}],"o":{"n":"complex"}}],[11,"sqrt","","Computes the principal value of the square root of `self`.",0,{"i":[{"n":"self"}],"o":{"n":"complex"}}],[11,"powf","","Raises `self` to a floating point power.",0,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"complex"}}],[11,"log","","Returns the logarithm of `self` with respect to an arbitrary base.",0,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"complex"}}],[11,"powc","","Raises `self` to a complex power.",0,{"i":[{"n":"self"},{"n":"complex"}],"o":{"n":"complex"}}],[11,"expf","","Raises a floating point number to the complex power `self`.",0,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"complex"}}],[11,"sin","","Computes the sine of `self`.",0,{"i":[{"n":"self"}],"o":{"n":"complex"}}],[11,"cos","","Computes the cosine of `self`.",0,{"i":[{"n":"self"}],"o":{"n":"complex"}}],[11,"tan","","Computes the tangent of `self`.",0,{"i":[{"n":"self"}],"o":{"n":"complex"}}],[11,"asin","","Computes the principal value of the inverse sine of `self`.",0,{"i":[{"n":"self"}],"o":{"n":"complex"}}],[11,"acos","","Computes the principal value of the inverse cosine of `self`.",0,{"i":[{"n":"self"}],"o":{"n":"complex"}}],[11,"atan","","Computes the principal value of the inverse tangent of `self`.",0,{"i":[{"n":"self"}],"o":{"n":"complex"}}],[11,"sinh","","Computes the hyperbolic sine of `self`.",0,{"i":[{"n":"self"}],"o":{"n":"complex"}}],[11,"cosh","","Computes the hyperbolic cosine of `self`.",0,{"i":[{"n":"self"}],"o":{"n":"complex"}}],[11,"tanh","","Computes the hyperbolic tangent of `self`.",0,{"i":[{"n":"self"}],"o":{"n":"complex"}}],[11,"asinh","","Computes the principal value of inverse hyperbolic sine of `self`.",0,{"i":[{"n":"self"}],"o":{"n":"complex"}}],[11,"acosh","","Computes the principal value of inverse hyperbolic cosine of `self`.",0,{"i":[{"n":"self"}],"o":{"n":"complex"}}],[11,"atanh","","Computes the principal value of inverse hyperbolic tangent of `self`.",0,{"i":[{"n":"self"}],"o":{"n":"complex"}}],[11,"is_nan","","Checks if the given complex number is NaN",0,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_infinite","","Checks if the given complex number is infinite",0,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_finite","","Checks if the given complex number is finite",0,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_normal","","Checks if the given complex number is normal",0,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"from","","",0,{"i":[{"n":"t"}],"o":{"n":"complex"}}],[11,"from","","",0,{"i":[{"n":"t"}],"o":{"n":"complex"}}],[11,"add","","",0,{"i":[{"n":"self"},{"n":"complex"}],"o":{"n":"complex"}}],[11,"add","","",0,{"i":[{"n":"self"},{"n":"complex"}],"o":{"n":"complex"}}],[11,"sub","","",0,{"i":[{"n":"self"},{"n":"complex"}],"o":{"n":"complex"}}],[11,"sub","","",0,{"i":[{"n":"self"},{"n":"complex"}],"o":{"n":"complex"}}],[11,"mul","","",0,{"i":[{"n":"self"},{"n":"complex"}],"o":{"n":"complex"}}],[11,"mul","","",0,{"i":[{"n":"self"},{"n":"complex"}],"o":{"n":"complex"}}],[11,"div","","",0,{"i":[{"n":"self"},{"n":"complex"}],"o":{"n":"complex"}}],[11,"div","","",0,{"i":[{"n":"self"},{"n":"complex"}],"o":{"n":"complex"}}],[11,"rem","","",0,{"i":[{"n":"self"},{"n":"complex"}],"o":{"n":"complex"}}],[11,"rem","","",0,{"i":[{"n":"self"},{"n":"complex"}],"o":{"n":"self"}}],[11,"neg","","",0,{"i":[{"n":"self"}],"o":{"n":"complex"}}],[11,"add","","",0,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"complex"}}],[11,"sub","","",0,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"complex"}}],[11,"mul","","",0,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"complex"}}],[11,"div","","",0,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"complex"}}],[11,"rem","","",0,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"complex"}}],[11,"add","","",0,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"complex"}}],[11,"sub","","",0,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"complex"}}],[11,"mul","","",0,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"complex"}}],[11,"div","","",0,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"complex"}}],[11,"rem","","",0,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"complex"}}],[11,"zero","","",0,{"o":{"n":"complex"}}],[11,"is_zero","","",0,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"one","","",0,{"o":{"n":"complex"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from_str","","Parses `a +/- bi`; `ai +/- b`; `a`; or `bi` where `a` and `b` are of type `T`",0,{"i":[{"n":"str"}],"o":{"n":"result"}}],[11,"from_str_radix","","Parses `a +/- bi`; `ai +/- b`; `a`; or `bi` where `a` and `b` are of type `T`",0,{"i":[{"n":"str"},{"n":"u32"}],"o":{"n":"result"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"parsecomplexerror"}],"o":{"n":"bool"}}],[11,"ne","","",1,{"i":[{"n":"self"},{"n":"parsecomplexerror"}],"o":{"n":"bool"}}],[11,"description","","",1,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}]],"paths":[[3,"Complex"],[3,"ParseComplexError"]]};
searchIndex["num_traits"] = {"doc":"Numeric traits for generic mathematics","items":[[8,"Bounded","num_traits","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",0,{"o":{"n":"self"}}],[10,"max_value","","returns the largest finite number this type can represent",0,{"o":{"n":"self"}}],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the `NaN` value.",1,{"o":{"n":"self"}}],[10,"infinity","","Returns the infinite value.",1,{"o":{"n":"self"}}],[10,"neg_infinity","","Returns the negative infinite value.",1,{"o":{"n":"self"}}],[10,"neg_zero","","Returns `-0.0`.",1,{"o":{"n":"self"}}],[10,"min_value","","Returns the smallest finite value that this type can represent.",1,{"o":{"n":"self"}}],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",1,{"o":{"n":"self"}}],[11,"epsilon","","Returns epsilon, a small positive value.",1,{"o":{"n":"self"}}],[10,"max_value","","Returns the largest finite value that this type can represent.",1,{"o":{"n":"self"}}],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",1,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[10,"is_infinite","","Returns `true` if this value is positive infinity or negative infinity and false otherwise.",1,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",1,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[10,"is_normal","","Returns `true` if the number is neither zero, infinite, [subnormal][subnormal], or `NaN`.",1,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[10,"classify","","Returns the floating point category of the number. If only one property is going to be tested, it is generally faster to use the specific predicate instead.",1,{"i":[{"n":"self"}],"o":{"n":"fpcategory"}}],[10,"floor","","Returns the largest integer less than or equal to a number.",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from `0.0`.",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"trunc","","Return the integer part of a number.",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"fract","","Returns the fractional part of a number.",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the number is `Float::nan()`.",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"signum","","Returns a number that represents the sign of `self`.",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`, `Float::infinity()`, and since Rust 1.20 also `Float::nan()`.",1,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`, `Float::neg_infinity()`, and since Rust 1.20 also `-Float::nan()`.",1,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding error, yielding a more accurate result than an unfused multiply-add.",1,{"i":[{"n":"self"},{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"powi","","Raise a number to an integer power.",1,{"i":[{"n":"self"},{"n":"i32"}],"o":{"n":"self"}}],[10,"powf","","Raise a number to a floating point power.",1,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[10,"sqrt","","Take the square root of a number.",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"exp","","Returns `e^(self)`, (the exponential function).",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"exp2","","Returns `2^(self)`.",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"ln","","Returns the natural logarithm of the number.",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",1,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[10,"log2","","Returns the base 2 logarithm of the number.",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"log10","","Returns the base 10 logarithm of the number.",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"to_degrees","","Converts radians to degrees.",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"to_radians","","Converts degrees to radians.",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"max","","Returns the maximum of the two numbers.",1,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[10,"min","","Returns the minimum of the two numbers.",1,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[10,"abs_sub","","The positive difference of two numbers.",1,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[10,"cbrt","","Take the cubic root of a number.",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given legs of length `x` and `y`.",1,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[10,"sin","","Computes the sine of a number (in radians).",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"cos","","Computes the cosine of a number (in radians).",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"tan","","Computes the tangent of a number (in radians).",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"asin","","Computes the arcsine of a number. Return value is in radians in the range [-pi/2, pi/2] or NaN if the number is outside the range [-1, 1].",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"acos","","Computes the arccosine of a number. Return value is in radians in the range [0, pi] or NaN if the number is outside the range [-1, 1].",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the range [-pi/2, pi/2];",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",1,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns `(sin(x), cos(x))`.",1,null],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the number is close to zero.",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if the operations were performed separately.",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"sinh","","Hyperbolic sine function.",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"cosh","","Hyperbolic cosine function.",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"tanh","","Hyperbolic tangent function.",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"asinh","","Inverse hyperbolic sine function.",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"acosh","","Inverse hyperbolic cosine function.",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"atanh","","Inverse hyperbolic tangent function.",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively. The original number can be recovered by `sign * mantissa * 2 ^ exponent`.",1,null],[8,"FloatConst","","",null,null],[10,"E","","Return Eulerâ€™s number.",2,{"o":{"n":"self"}}],[10,"FRAC_1_PI","","Return `1.0 / Ï€`.",2,{"o":{"n":"self"}}],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",2,{"o":{"n":"self"}}],[10,"FRAC_2_PI","","Return `2.0 / Ï€`.",2,{"o":{"n":"self"}}],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(Ï€)`.",2,{"o":{"n":"self"}}],[10,"FRAC_PI_2","","Return `Ï€ / 2.0`.",2,{"o":{"n":"self"}}],[10,"FRAC_PI_3","","Return `Ï€ / 3.0`.",2,{"o":{"n":"self"}}],[10,"FRAC_PI_4","","Return `Ï€ / 4.0`.",2,{"o":{"n":"self"}}],[10,"FRAC_PI_6","","Return `Ï€ / 6.0`.",2,{"o":{"n":"self"}}],[10,"FRAC_PI_8","","Return `Ï€ / 8.0`.",2,{"o":{"n":"self"}}],[10,"LN_10","","Return `ln(10.0)`.",2,{"o":{"n":"self"}}],[10,"LN_2","","Return `ln(2.0)`.",2,{"o":{"n":"self"}}],[10,"LOG10_E","","Return `log10(e)`.",2,{"o":{"n":"self"}}],[10,"LOG2_E","","Return `log2(e)`.",2,{"o":{"n":"self"}}],[10,"PI","","Return Archimedesâ€™ constant.",2,{"o":{"n":"self"}}],[10,"SQRT_2","","Return `sqrt(2.0)`.",2,{"o":{"n":"self"}}],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`.",3,{"o":{"n":"self"}}],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",3,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",4,{"o":{"n":"self"}}],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative identity.",4,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[5,"zero","","Returns the additive identity, `0`.",null,{"o":{"n":"t"}}],[5,"one","","Returns the multiplicative identity, `1`.",null,{"o":{"n":"t"}}],[8,"CheckedAdd","","Performs addition that returns `None` instead of wrapping around on overflow.",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow happens, `None` is returned.",5,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"option"}}],[8,"CheckedSub","","Performs subtraction that returns `None` instead of wrapping around on underflow.",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If underflow happens, `None` is returned.",6,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"option"}}],[8,"CheckedMul","","Performs multiplication that returns `None` instead of wrapping around on underflow or overflow.",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or overflow. If underflow or overflow happens, `None` is returned.",7,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"option"}}],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking on division by zero and instead of wrapping around on underflow and overflow.",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and division by zero. If any of that happens, `None` is returned.",8,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"option"}}],[8,"CheckedShl","","Performs a left shift that returns `None` on overflow.",null,null],[10,"checked_shl","","Shifts a number to the left, checking for overflow. If overflow happens, `None` is returned.",9,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"option"}}],[8,"CheckedShr","","Performs a right shift that returns `None` on overflow.",null,null],[10,"checked_shr","","Shifts a number to the left, checking for overflow. If overflow happens, `None` is returned.",10,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"option"}}],[8,"WrappingAdd","","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`, wrapping around at the boundary of the type.",11,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self * other`, wrapping around at the boundary of the type.",12,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`, wrapping around at the boundary of the type.",13,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[8,"Saturating","","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at the numeric bounds instead of overflowing.",14,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating at the numeric bounds instead of overflowing.",14,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can be negative).",null,null],[10,"abs","","Computes the absolute value.",15,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"abs_sub","","The positive difference of two numbers.",15,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[10,"signum","","Returns the sign of the number.",15,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"is_positive","","Returns true if the number is positive and false if the number is zero or negative.",15,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[10,"is_negative","","Returns true if the number is negative and false if the number is zero or positive.",15,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[5,"abs","","Computes the absolute value.",null,{"i":[{"n":"t"}],"o":{"n":"t"}}],[5,"abs_sub","","The positive difference of two numbers.",null,{"i":[{"n":"t"},{"n":"t"}],"o":{"n":"t"}}],[5,"signum","","Returns the sign of the number.",null,{"i":[{"n":"t"}],"o":{"n":"t"}}],[8,"AsPrimitive","","A generic interface for casting between machine scalars with the `as` operator, which admits narrowing and precision loss. Implementers of this trait AsPrimitive should behave like a primitive numeric type (e.g. a newtype around another primitive), and the intended conversion must never fail.",null,null],[10,"as_","","Convert a value to another, using the `as` operator.",16,{"i":[{"n":"self"}],"o":{"n":"t"}}],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the value cannot be represented by this value, then `None` is returned.",17,{"i":[{"n":"isize"}],"o":{"n":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,{"i":[{"n":"i8"}],"o":{"n":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,{"i":[{"n":"i16"}],"o":{"n":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,{"i":[{"n":"i32"}],"o":{"n":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,{"i":[{"n":"i64"}],"o":{"n":"option"}}],[11,"from_i128","","Convert an `i128` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,{"i":[{"n":"i128"}],"o":{"n":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,{"i":[{"n":"usize"}],"o":{"n":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,{"i":[{"n":"u8"}],"o":{"n":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,{"i":[{"n":"u16"}],"o":{"n":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,{"i":[{"n":"u32"}],"o":{"n":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,{"i":[{"n":"u64"}],"o":{"n":"option"}}],[11,"from_u128","","Convert an `u128` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,{"i":[{"n":"u128"}],"o":{"n":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,{"i":[{"n":"f32"}],"o":{"n":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,{"i":[{"n":"f64"}],"o":{"n":"option"}}],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`.",18,{"i":[{"n":"self"}],"o":{"g":["isize"],"n":"option"}}],[11,"to_i8","","Converts the value of `self` to an `i8`.",18,{"i":[{"n":"self"}],"o":{"g":["i8"],"n":"option"}}],[11,"to_i16","","Converts the value of `self` to an `i16`.",18,{"i":[{"n":"self"}],"o":{"g":["i16"],"n":"option"}}],[11,"to_i32","","Converts the value of `self` to an `i32`.",18,{"i":[{"n":"self"}],"o":{"g":["i32"],"n":"option"}}],[10,"to_i64","","Converts the value of `self` to an `i64`.",18,{"i":[{"n":"self"}],"o":{"g":["i64"],"n":"option"}}],[11,"to_i128","","Converts the value of `self` to an `i128`.",18,{"i":[{"n":"self"}],"o":{"g":["i128"],"n":"option"}}],[11,"to_usize","","Converts the value of `self` to a `usize`.",18,{"i":[{"n":"self"}],"o":{"g":["usize"],"n":"option"}}],[11,"to_u8","","Converts the value of `self` to an `u8`.",18,{"i":[{"n":"self"}],"o":{"g":["u8"],"n":"option"}}],[11,"to_u16","","Converts the value of `self` to an `u16`.",18,{"i":[{"n":"self"}],"o":{"g":["u16"],"n":"option"}}],[11,"to_u32","","Converts the value of `self` to an `u32`.",18,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"option"}}],[10,"to_u64","","Converts the value of `self` to an `u64`.",18,{"i":[{"n":"self"}],"o":{"g":["u64"],"n":"option"}}],[11,"to_u128","","Converts the value of `self` to an `u128`.",18,{"i":[{"n":"self"}],"o":{"g":["u128"],"n":"option"}}],[11,"to_f32","","Converts the value of `self` to an `f32`.",18,{"i":[{"n":"self"}],"o":{"g":["f32"],"n":"option"}}],[11,"to_f64","","Converts the value of `self` to an `f64`.",18,{"i":[{"n":"self"}],"o":{"g":["f64"],"n":"option"}}],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted into a primitive via the `ToPrimitive` trait.",19,{"i":[{"n":"t"}],"o":{"n":"option"}}],[5,"cast","","Cast from one machine scalar to another.",null,{"i":[{"n":"t"}],"o":{"n":"option"}}],[8,"PrimInt","","",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of `self`.",20,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[10,"count_zeros","","Returns the number of zeros in the binary representation of `self`.",20,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[10,"leading_zeros","","Returns the number of leading zeros in the binary representation of `self`.",20,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary representation of `self`.",20,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, `n`, wrapping the truncated bits to the end of the resulting integer.",20,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"self"}}],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount, `n`, wrapping the truncated bits to the beginning of the resulting integer.",20,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"self"}}],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling zeros in the least significant bits.",20,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"self"}}],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount, `n`, copying the \"sign bit\" in the most significant bits even for unsigned types.",20,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"self"}}],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling zeros in the least significant bits.",20,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"self"}}],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount, `n`, filling zeros in the most significant bits.",20,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"self"}}],[10,"swap_bytes","","Reverses the byte order of the integer.",20,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"from_be","","Convert an integer from big endian to the target's endianness.",20,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"from_le","","Convert an integer from little endian to the target's endianness.",20,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"to_be","","Convert `self` to big endian from the target's endianness.",20,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"to_le","","Convert `self` to little endian from the target's endianness.",20,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"pow","","Raises self to the power of `exp`, using exponentiation by squaring.",20,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"self"}}],[5,"pow","","Raises a value to the power of exp, using exponentiation by squaring.",null,{"i":[{"n":"t"},{"n":"usize"}],"o":{"n":"t"}}],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an overflow occurred.",null,{"i":[{"n":"t"},{"n":"usize"}],"o":{"n":"option"}}],[8,"Num","","The base trait for numeric types, covering `0` and `1` values, comparisons, basic numeric operations, and string conversion.",null,null],[16,"FromStrRadixErr","","",21,null],[10,"from_str_radix","","Convert from a string and radix <= 36.",21,{"i":[{"n":"str"},{"n":"u32"}],"o":{"n":"result"}}],[8,"NumOps","","The trait for types implementing basic numeric operations",null,null],[8,"NumRef","","The trait for `Num` types which also implement numeric operations taking the second operand by reference.",null,null],[8,"RefNum","","The trait for references which implement numeric operations, taking the second operand either by value or by reference.",null,null],[8,"NumAssignOps","","The trait for types implementing numeric assignment operators (like `+=`).",null,null],[8,"NumAssign","","The trait for `Num` types which also implement assignment operators.",null,null],[8,"NumAssignRef","","The trait for `NumAssign` types which also implement assignment operations taking the second operand by reference.",null,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",22,null],[13,"Invalid","","",22,null],[3,"ParseFloatError","","",null,null],[12,"kind","","",23,null],[5,"clamp","","A value bounded by a minimum and a maximum",null,{"i":[{"n":"t"},{"n":"t"},{"n":"t"}],"o":{"n":"t"}}],[0,"identities","","",null,null],[8,"Zero","num_traits::identities","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`.",3,{"o":{"n":"self"}}],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",3,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",4,{"o":{"n":"self"}}],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative identity.",4,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[5,"zero","","Returns the additive identity, `0`.",null,{"o":{"n":"t"}}],[5,"one","","Returns the multiplicative identity, `1`.",null,{"o":{"n":"t"}}],[0,"sign","num_traits","",null,null],[8,"Signed","num_traits::sign","Useful functions for signed numbers (i.e. numbers that can be negative).",null,null],[10,"abs","","Computes the absolute value.",15,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"abs_sub","","The positive difference of two numbers.",15,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[10,"signum","","Returns the sign of the number.",15,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"is_positive","","Returns true if the number is positive and false if the number is zero or negative.",15,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[10,"is_negative","","Returns true if the number is negative and false if the number is zero or positive.",15,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[5,"abs","","Computes the absolute value.",null,{"i":[{"n":"t"}],"o":{"n":"t"}}],[5,"abs_sub","","The positive difference of two numbers.",null,{"i":[{"n":"t"},{"n":"t"}],"o":{"n":"t"}}],[5,"signum","","Returns the sign of the number.",null,{"i":[{"n":"t"}],"o":{"n":"t"}}],[0,"ops","num_traits","",null,null],[0,"saturating","num_traits::ops","",null,null],[8,"Saturating","num_traits::ops::saturating","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at the numeric bounds instead of overflowing.",14,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating at the numeric bounds instead of overflowing.",14,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[0,"checked","num_traits::ops","",null,null],[8,"CheckedAdd","num_traits::ops::checked","Performs addition that returns `None` instead of wrapping around on overflow.",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow happens, `None` is returned.",5,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"option"}}],[8,"CheckedSub","","Performs subtraction that returns `None` instead of wrapping around on underflow.",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If underflow happens, `None` is returned.",6,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"option"}}],[8,"CheckedMul","","Performs multiplication that returns `None` instead of wrapping around on underflow or overflow.",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or overflow. If underflow or overflow happens, `None` is returned.",7,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"option"}}],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking on division by zero and instead of wrapping around on underflow and overflow.",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and division by zero. If any of that happens, `None` is returned.",8,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"option"}}],[8,"CheckedShl","","Performs a left shift that returns `None` on overflow.",null,null],[10,"checked_shl","","Shifts a number to the left, checking for overflow. If overflow happens, `None` is returned.",9,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"option"}}],[8,"CheckedShr","","Performs a right shift that returns `None` on overflow.",null,null],[10,"checked_shr","","Shifts a number to the left, checking for overflow. If overflow happens, `None` is returned.",10,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"option"}}],[0,"wrapping","num_traits::ops","",null,null],[8,"WrappingAdd","num_traits::ops::wrapping","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`, wrapping around at the boundary of the type.",11,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self * other`, wrapping around at the boundary of the type.",12,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`, wrapping around at the boundary of the type.",13,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[0,"bounds","num_traits","",null,null],[8,"Bounded","num_traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",0,{"o":{"n":"self"}}],[10,"max_value","","returns the largest finite number this type can represent",0,{"o":{"n":"self"}}],[0,"float","num_traits","",null,null],[8,"Float","num_traits::float","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the `NaN` value.",1,{"o":{"n":"self"}}],[10,"infinity","","Returns the infinite value.",1,{"o":{"n":"self"}}],[10,"neg_infinity","","Returns the negative infinite value.",1,{"o":{"n":"self"}}],[10,"neg_zero","","Returns `-0.0`.",1,{"o":{"n":"self"}}],[10,"min_value","","Returns the smallest finite value that this type can represent.",1,{"o":{"n":"self"}}],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",1,{"o":{"n":"self"}}],[11,"epsilon","","Returns epsilon, a small positive value.",1,{"o":{"n":"self"}}],[10,"max_value","","Returns the largest finite value that this type can represent.",1,{"o":{"n":"self"}}],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",1,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[10,"is_infinite","","Returns `true` if this value is positive infinity or negative infinity and false otherwise.",1,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",1,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[10,"is_normal","","Returns `true` if the number is neither zero, infinite, [subnormal][subnormal], or `NaN`.",1,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[10,"classify","","Returns the floating point category of the number. If only one property is going to be tested, it is generally faster to use the specific predicate instead.",1,{"i":[{"n":"self"}],"o":{"n":"fpcategory"}}],[10,"floor","","Returns the largest integer less than or equal to a number.",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from `0.0`.",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"trunc","","Return the integer part of a number.",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"fract","","Returns the fractional part of a number.",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the number is `Float::nan()`.",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"signum","","Returns a number that represents the sign of `self`.",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`, `Float::infinity()`, and since Rust 1.20 also `Float::nan()`.",1,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`, `Float::neg_infinity()`, and since Rust 1.20 also `-Float::nan()`.",1,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding error, yielding a more accurate result than an unfused multiply-add.",1,{"i":[{"n":"self"},{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"powi","","Raise a number to an integer power.",1,{"i":[{"n":"self"},{"n":"i32"}],"o":{"n":"self"}}],[10,"powf","","Raise a number to a floating point power.",1,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[10,"sqrt","","Take the square root of a number.",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"exp","","Returns `e^(self)`, (the exponential function).",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"exp2","","Returns `2^(self)`.",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"ln","","Returns the natural logarithm of the number.",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",1,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[10,"log2","","Returns the base 2 logarithm of the number.",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"log10","","Returns the base 10 logarithm of the number.",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"to_degrees","","Converts radians to degrees.",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"to_radians","","Converts degrees to radians.",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"max","","Returns the maximum of the two numbers.",1,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[10,"min","","Returns the minimum of the two numbers.",1,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[10,"abs_sub","","The positive difference of two numbers.",1,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[10,"cbrt","","Take the cubic root of a number.",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given legs of length `x` and `y`.",1,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[10,"sin","","Computes the sine of a number (in radians).",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"cos","","Computes the cosine of a number (in radians).",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"tan","","Computes the tangent of a number (in radians).",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"asin","","Computes the arcsine of a number. Return value is in radians in the range [-pi/2, pi/2] or NaN if the number is outside the range [-1, 1].",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"acos","","Computes the arccosine of a number. Return value is in radians in the range [0, pi] or NaN if the number is outside the range [-1, 1].",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the range [-pi/2, pi/2];",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",1,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns `(sin(x), cos(x))`.",1,null],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the number is close to zero.",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if the operations were performed separately.",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"sinh","","Hyperbolic sine function.",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"cosh","","Hyperbolic cosine function.",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"tanh","","Hyperbolic tangent function.",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"asinh","","Inverse hyperbolic sine function.",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"acosh","","Inverse hyperbolic cosine function.",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"atanh","","Inverse hyperbolic tangent function.",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively. The original number can be recovered by `sign * mantissa * 2 ^ exponent`.",1,null],[8,"FloatConst","","",null,null],[10,"E","","Return Eulerâ€™s number.",2,{"o":{"n":"self"}}],[10,"FRAC_1_PI","","Return `1.0 / Ï€`.",2,{"o":{"n":"self"}}],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",2,{"o":{"n":"self"}}],[10,"FRAC_2_PI","","Return `2.0 / Ï€`.",2,{"o":{"n":"self"}}],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(Ï€)`.",2,{"o":{"n":"self"}}],[10,"FRAC_PI_2","","Return `Ï€ / 2.0`.",2,{"o":{"n":"self"}}],[10,"FRAC_PI_3","","Return `Ï€ / 3.0`.",2,{"o":{"n":"self"}}],[10,"FRAC_PI_4","","Return `Ï€ / 4.0`.",2,{"o":{"n":"self"}}],[10,"FRAC_PI_6","","Return `Ï€ / 6.0`.",2,{"o":{"n":"self"}}],[10,"FRAC_PI_8","","Return `Ï€ / 8.0`.",2,{"o":{"n":"self"}}],[10,"LN_10","","Return `ln(10.0)`.",2,{"o":{"n":"self"}}],[10,"LN_2","","Return `ln(2.0)`.",2,{"o":{"n":"self"}}],[10,"LOG10_E","","Return `log10(e)`.",2,{"o":{"n":"self"}}],[10,"LOG2_E","","Return `log2(e)`.",2,{"o":{"n":"self"}}],[10,"PI","","Return Archimedesâ€™ constant.",2,{"o":{"n":"self"}}],[10,"SQRT_2","","Return `sqrt(2.0)`.",2,{"o":{"n":"self"}}],[0,"real","num_traits","",null,null],[8,"Real","num_traits::real","A trait for real number types that do not necessarily have floating-point-specific characteristics such as NaN and infinity.",null,null],[10,"min_value","","Returns the smallest finite value that this type can represent.",24,{"o":{"n":"self"}}],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",24,{"o":{"n":"self"}}],[10,"epsilon","","Returns epsilon, a small positive value.",24,{"o":{"n":"self"}}],[10,"max_value","","Returns the largest finite value that this type can represent.",24,{"o":{"n":"self"}}],[10,"floor","","Returns the largest integer less than or equal to a number.",24,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",24,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from `0.0`.",24,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"trunc","","Return the integer part of a number.",24,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"fract","","Returns the fractional part of a number.",24,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the number is `Float::nan()`.",24,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"signum","","Returns a number that represents the sign of `self`.",24,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`, `Float::infinity()`, and with newer versions of Rust `f64::NAN`.",24,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`, `Float::neg_infinity()`, and with newer versions of Rust `-f64::NAN`.",24,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding error, yielding a more accurate result than an unfused multiply-add.",24,{"i":[{"n":"self"},{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",24,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"powi","","Raise a number to an integer power.",24,{"i":[{"n":"self"},{"n":"i32"}],"o":{"n":"self"}}],[10,"powf","","Raise a number to a real number power.",24,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[10,"sqrt","","Take the square root of a number.",24,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"exp","","Returns `e^(self)`, (the exponential function).",24,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"exp2","","Returns `2^(self)`.",24,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"ln","","Returns the natural logarithm of the number.",24,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",24,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[10,"log2","","Returns the base 2 logarithm of the number.",24,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"log10","","Returns the base 10 logarithm of the number.",24,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"to_degrees","","Converts radians to degrees.",24,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"to_radians","","Converts degrees to radians.",24,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"max","","Returns the maximum of the two numbers.",24,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[10,"min","","Returns the minimum of the two numbers.",24,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[10,"abs_sub","","The positive difference of two numbers.",24,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[10,"cbrt","","Take the cubic root of a number.",24,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given legs of length `x` and `y`.",24,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[10,"sin","","Computes the sine of a number (in radians).",24,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"cos","","Computes the cosine of a number (in radians).",24,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"tan","","Computes the tangent of a number (in radians).",24,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"asin","","Computes the arcsine of a number. Return value is in radians in the range [-pi/2, pi/2] or NaN if the number is outside the range [-1, 1].",24,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"acos","","Computes the arccosine of a number. Return value is in radians in the range [0, pi] or NaN if the number is outside the range [-1, 1].",24,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the range [-pi/2, pi/2];",24,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",24,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns `(sin(x), cos(x))`.",24,null],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the number is close to zero.",24,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if the operations were performed separately.",24,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"sinh","","Hyperbolic sine function.",24,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"cosh","","Hyperbolic cosine function.",24,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"tanh","","Hyperbolic tangent function.",24,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"asinh","","Inverse hyperbolic sine function.",24,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"acosh","","Inverse hyperbolic cosine function.",24,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"atanh","","Inverse hyperbolic tangent function.",24,{"i":[{"n":"self"}],"o":{"n":"self"}}],[0,"cast","num_traits","",null,null],[8,"AsPrimitive","num_traits::cast","A generic interface for casting between machine scalars with the `as` operator, which admits narrowing and precision loss. Implementers of this trait AsPrimitive should behave like a primitive numeric type (e.g. a newtype around another primitive), and the intended conversion must never fail.",null,null],[10,"as_","","Convert a value to another, using the `as` operator.",16,{"i":[{"n":"self"}],"o":{"n":"t"}}],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the value cannot be represented by this value, then `None` is returned.",17,{"i":[{"n":"isize"}],"o":{"n":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,{"i":[{"n":"i8"}],"o":{"n":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,{"i":[{"n":"i16"}],"o":{"n":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,{"i":[{"n":"i32"}],"o":{"n":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,{"i":[{"n":"i64"}],"o":{"n":"option"}}],[11,"from_i128","","Convert an `i128` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,{"i":[{"n":"i128"}],"o":{"n":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,{"i":[{"n":"usize"}],"o":{"n":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,{"i":[{"n":"u8"}],"o":{"n":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,{"i":[{"n":"u16"}],"o":{"n":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,{"i":[{"n":"u32"}],"o":{"n":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,{"i":[{"n":"u64"}],"o":{"n":"option"}}],[11,"from_u128","","Convert an `u128` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,{"i":[{"n":"u128"}],"o":{"n":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,{"i":[{"n":"f32"}],"o":{"n":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,{"i":[{"n":"f64"}],"o":{"n":"option"}}],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`.",18,{"i":[{"n":"self"}],"o":{"g":["isize"],"n":"option"}}],[11,"to_i8","","Converts the value of `self` to an `i8`.",18,{"i":[{"n":"self"}],"o":{"g":["i8"],"n":"option"}}],[11,"to_i16","","Converts the value of `self` to an `i16`.",18,{"i":[{"n":"self"}],"o":{"g":["i16"],"n":"option"}}],[11,"to_i32","","Converts the value of `self` to an `i32`.",18,{"i":[{"n":"self"}],"o":{"g":["i32"],"n":"option"}}],[10,"to_i64","","Converts the value of `self` to an `i64`.",18,{"i":[{"n":"self"}],"o":{"g":["i64"],"n":"option"}}],[11,"to_i128","","Converts the value of `self` to an `i128`.",18,{"i":[{"n":"self"}],"o":{"g":["i128"],"n":"option"}}],[11,"to_usize","","Converts the value of `self` to a `usize`.",18,{"i":[{"n":"self"}],"o":{"g":["usize"],"n":"option"}}],[11,"to_u8","","Converts the value of `self` to an `u8`.",18,{"i":[{"n":"self"}],"o":{"g":["u8"],"n":"option"}}],[11,"to_u16","","Converts the value of `self` to an `u16`.",18,{"i":[{"n":"self"}],"o":{"g":["u16"],"n":"option"}}],[11,"to_u32","","Converts the value of `self` to an `u32`.",18,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"option"}}],[10,"to_u64","","Converts the value of `self` to an `u64`.",18,{"i":[{"n":"self"}],"o":{"g":["u64"],"n":"option"}}],[11,"to_u128","","Converts the value of `self` to an `u128`.",18,{"i":[{"n":"self"}],"o":{"g":["u128"],"n":"option"}}],[11,"to_f32","","Converts the value of `self` to an `f32`.",18,{"i":[{"n":"self"}],"o":{"g":["f32"],"n":"option"}}],[11,"to_f64","","Converts the value of `self` to an `f64`.",18,{"i":[{"n":"self"}],"o":{"g":["f64"],"n":"option"}}],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted into a primitive via the `ToPrimitive` trait.",19,{"i":[{"n":"t"}],"o":{"n":"option"}}],[5,"cast","","Cast from one machine scalar to another.",null,{"i":[{"n":"t"}],"o":{"n":"option"}}],[0,"int","num_traits","",null,null],[8,"PrimInt","num_traits::int","",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of `self`.",20,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[10,"count_zeros","","Returns the number of zeros in the binary representation of `self`.",20,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[10,"leading_zeros","","Returns the number of leading zeros in the binary representation of `self`.",20,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary representation of `self`.",20,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, `n`, wrapping the truncated bits to the end of the resulting integer.",20,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"self"}}],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount, `n`, wrapping the truncated bits to the beginning of the resulting integer.",20,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"self"}}],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling zeros in the least significant bits.",20,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"self"}}],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount, `n`, copying the \"sign bit\" in the most significant bits even for unsigned types.",20,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"self"}}],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling zeros in the least significant bits.",20,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"self"}}],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount, `n`, filling zeros in the most significant bits.",20,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"self"}}],[10,"swap_bytes","","Reverses the byte order of the integer.",20,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"from_be","","Convert an integer from big endian to the target's endianness.",20,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"from_le","","Convert an integer from little endian to the target's endianness.",20,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"to_be","","Convert `self` to big endian from the target's endianness.",20,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"to_le","","Convert `self` to little endian from the target's endianness.",20,{"i":[{"n":"self"}],"o":{"n":"self"}}],[10,"pow","","Raises self to the power of `exp`, using exponentiation by squaring.",20,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"self"}}],[0,"pow","num_traits","",null,null],[5,"pow","num_traits::pow","Raises a value to the power of exp, using exponentiation by squaring.",null,{"i":[{"n":"t"},{"n":"usize"}],"o":{"n":"t"}}],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an overflow occurred.",null,{"i":[{"n":"t"},{"n":"usize"}],"o":{"n":"option"}}],[11,"fmt","num_traits","",23,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",22,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",23,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}]],"paths":[[8,"Bounded"],[8,"Float"],[8,"FloatConst"],[8,"Zero"],[8,"One"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"WrappingAdd"],[8,"WrappingMul"],[8,"WrappingSub"],[8,"Saturating"],[8,"Signed"],[8,"AsPrimitive"],[8,"FromPrimitive"],[8,"ToPrimitive"],[8,"NumCast"],[8,"PrimInt"],[8,"Num"],[4,"FloatErrorKind"],[3,"ParseFloatError"],[8,"Real"]]};
searchIndex["quote"] = {"doc":"Quasi-quoting without a Syntex dependency, intended for use with Macros 1.1.","items":[[3,"Tokens","quote","Tokens produced by a `quote!(...)` invocation.",null,null],[3,"ByteStr","","Wrap a `&str` so it interpolates as a byte-string: `b\"abc\"`.",null,null],[12,"0","","",0,null],[3,"Hex","","Wrap an integer so it interpolates as a hexadecimal.",null,null],[12,"0","","",1,null],[3,"Ident","","An identifier that should be interpolated without quotes.",null,null],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"tokens"}}],[11,"eq","","",2,{"i":[{"n":"self"},{"n":"tokens"}],"o":{"n":"bool"}}],[11,"ne","","",2,{"i":[{"n":"self"},{"n":"tokens"}],"o":{"n":"bool"}}],[11,"new","","Empty tokens.",2,{"o":{"n":"self"}}],[11,"append","","For use by `ToTokens` implementations.",2,{"i":[{"n":"self"},{"n":"t"}]}],[11,"append_all","","For use by `ToTokens` implementations.",2,{"i":[{"n":"self"},{"n":"i"}]}],[11,"append_separated","","For use by `ToTokens` implementations.",2,{"i":[{"n":"self"},{"n":"i"},{"n":"s"}]}],[11,"append_terminated","","For use by `ToTokens` implementations.",2,{"i":[{"n":"self"},{"n":"i"},{"n":"s"}]}],[11,"as_str","","",2,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"into_string","","",2,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"parse","","",2,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"default","","",2,{"o":{"n":"self"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"as_ref","","",2,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"to_tokens","","",0,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",2,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"to_tokens","","",1,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",1,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",1,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",1,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",1,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",1,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",1,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",1,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",1,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",1,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"ident"}}],[11,"hash","","",3,null],[11,"new","","",3,{"i":[{"n":"t"}],"o":{"n":"self"}}],[11,"from","","",3,{"i":[{"n":"str"}],"o":{"n":"self"}}],[11,"from","","",3,{"i":[{"g":["str"],"n":"cow"}],"o":{"n":"self"}}],[11,"from","","",3,{"i":[{"n":"string"}],"o":{"n":"self"}}],[11,"as_ref","","",3,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"eq","","",3,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"bool"}}],[11,"to_tokens","","",3,{"i":[{"n":"self"},{"n":"tokens"}]}],[8,"ToTokens","","Types that can be interpolated inside a `quote!(...)` invocation.",null,null],[10,"to_tokens","","Write `self` to the given `Tokens`.",4,{"i":[{"n":"self"},{"n":"tokens"}]}],[14,"quote","","The whole point.",null,null]],"paths":[[3,"ByteStr"],[3,"Hex"],[3,"Tokens"],[3,"Ident"],[8,"ToTokens"]]};
searchIndex["rand"] = {"doc":"Utilities for random number generation","items":[[3,"IsaacRng","rand","A random number generator that uses the ISAAC algorithm[1].",null,null],[3,"Isaac64Rng","","A random number generator that uses ISAAC-64[1], the 64-bit variant of the ISAAC algorithm.",null,null],[3,"ChaChaRng","","A random number generator that uses the ChaCha20 algorithm [1].",null,null],[3,"XorShiftRng","","An Xorshift[1] random number generator.",null,null],[3,"Generator","","Iterator which will generate a stream of random items.",null,null],[3,"AsciiGenerator","","Iterator which will continuously generate random ascii characters.",null,null],[3,"Open01","","A wrapper for generating floating point numbers uniformly in the open interval `(0,1)` (not including either endpoint).",null,null],[12,"0","","",0,null],[3,"Closed01","","A wrapper for generating floating point numbers uniformly in the closed interval `[0,1]` (including both endpoints).",null,null],[12,"0","","",1,null],[3,"StdRng","","The standard RNG. This is designed to be efficient on the current platform.",null,null],[3,"ThreadRng","","The thread-local RNG.",null,null],[5,"weak_rng","","Create a weak random number generator with a default algorithm and seed.",null,{"o":{"n":"xorshiftrng"}}],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random number generator, seeded by the system. Intended to be used in method chaining style, e.g. `thread_rng().gen::<i32>()`.",null,{"o":{"n":"threadrng"}}],[5,"random","","Generates a random value using the thread-local random number generator.",null,{"o":{"n":"t"}}],[5,"sample","","DEPRECATED: use `seq::sample_iter` instead.",null,{"i":[{"n":"r"},{"n":"i"},{"n":"usize"}],"o":{"n":"vec"}}],[0,"distributions","","Sampling from random distributions.",null,null],[3,"RandSample","rand::distributions","A wrapper for generating types that implement `Rand` via the `Sample` & `IndependentSample` traits.",null,null],[3,"Weighted","","A value with a particular weight for use with `WeightedChoice`.",null,null],[12,"weight","","The numerical weight of this item",2,null],[12,"item","","The actual item which is being weighted",2,null],[3,"WeightedChoice","","A distribution that selects from a finite collection of weighted items.",null,null],[0,"range","","Generating numbers between two others.",null,null],[3,"Range","rand::distributions::range","Sample values uniformly between two bounds.",null,null],[8,"SampleRange","","The helper trait for types that have a sensible way to sample uniformly between two values. This should not be used directly, and is only to facilitate `Range`.",null,null],[10,"construct_range","","Construct the `Range` object that `sample_range` requires. This should not ever be called directly, only via `Range::new`, which will check that `low < high`, so this function doesn't have to repeat the check.",3,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"range"}}],[10,"sample_range","","Sample a value from the given `Range` with the given `Rng` as a source of randomness.",3,{"i":[{"n":"range"},{"n":"r"}],"o":{"n":"self"}}],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"range"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Create a new `Range` instance that samples uniformly from `[low, high)`. Panics if `low >= high`.",4,{"i":[{"n":"x"},{"n":"x"}],"o":{"n":"range"}}],[11,"sample","","",4,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"sup"}}],[11,"ind_sample","","",4,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"sup"}}],[0,"gamma","rand::distributions","The Gamma and derived distributions.",null,null],[3,"Gamma","rand::distributions::gamma","The Gamma distribution `Gamma(shape, scale)` distribution.",null,null],[3,"ChiSquared","","The chi-squared distribution `Ï‡Â²(k)`, where `k` is the degrees of freedom.",null,null],[3,"FisherF","","The Fisher F distribution `F(m, n)`.",null,null],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the degrees of freedom.",null,null],[11,"clone","","",5,{"i":[{"n":"self"}],"o":{"n":"gamma"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Construct an object representing the `Gamma(shape, scale)` distribution.",5,{"i":[{"n":"f64"},{"n":"f64"}],"o":{"n":"gamma"}}],[11,"sample","","",5,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"f64"}}],[11,"ind_sample","","",5,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"f64"}}],[11,"clone","","",6,{"i":[{"n":"self"}],"o":{"n":"chisquared"}}],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Create a new chi-squared distribution with degrees-of-freedom `k`. Panics if `k < 0`.",6,{"i":[{"n":"f64"}],"o":{"n":"chisquared"}}],[11,"sample","","",6,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"f64"}}],[11,"ind_sample","","",6,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"f64"}}],[11,"clone","","",7,{"i":[{"n":"self"}],"o":{"n":"fisherf"}}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Create a new `FisherF` distribution, with the given parameter. Panics if either `m` or `n` are not positive.",7,{"i":[{"n":"f64"},{"n":"f64"}],"o":{"n":"fisherf"}}],[11,"sample","","",7,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"f64"}}],[11,"ind_sample","","",7,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"f64"}}],[11,"clone","","",8,{"i":[{"n":"self"}],"o":{"n":"studentt"}}],[11,"fmt","","",8,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Create a new Student t distribution with `n` degrees of freedom. Panics if `n <= 0`.",8,{"i":[{"n":"f64"}],"o":{"n":"studentt"}}],[11,"sample","","",8,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"f64"}}],[11,"ind_sample","","",8,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"f64"}}],[0,"normal","rand::distributions","The normal and derived distributions.",null,null],[3,"StandardNormal","rand::distributions::normal","A wrapper around an `f64` to generate N(0, 1) random numbers (a.k.a.  a standard normal, or Gaussian).",null,null],[12,"0","","",9,null],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`.",null,null],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`.",null,null],[11,"clone","","",9,{"i":[{"n":"self"}],"o":{"n":"standardnormal"}}],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"rand","","",9,{"i":[{"n":"r"}],"o":{"n":"standardnormal"}}],[11,"clone","","",10,{"i":[{"n":"self"}],"o":{"n":"normal"}}],[11,"fmt","","",10,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Construct a new `Normal` distribution with the given mean and standard deviation.",10,{"i":[{"n":"f64"},{"n":"f64"}],"o":{"n":"normal"}}],[11,"sample","","",10,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"f64"}}],[11,"ind_sample","","",10,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"f64"}}],[11,"clone","","",11,{"i":[{"n":"self"}],"o":{"n":"lognormal"}}],[11,"fmt","","",11,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Construct a new `LogNormal` distribution with the given mean and standard deviation.",11,{"i":[{"n":"f64"},{"n":"f64"}],"o":{"n":"lognormal"}}],[11,"sample","","",11,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"f64"}}],[11,"ind_sample","","",11,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"f64"}}],[0,"exponential","rand::distributions","The exponential distribution.",null,null],[3,"Exp1","rand::distributions::exponential","A wrapper around an `f64` to generate Exp(1) random numbers.",null,null],[12,"0","","",12,null],[3,"Exp","","The exponential distribution `Exp(lambda)`.",null,null],[11,"clone","","",12,{"i":[{"n":"self"}],"o":{"n":"exp1"}}],[11,"fmt","","",12,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"rand","","",12,{"i":[{"n":"r"}],"o":{"n":"exp1"}}],[11,"clone","","",13,{"i":[{"n":"self"}],"o":{"n":"exp"}}],[11,"fmt","","",13,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Construct a new `Exp` with the given shape parameter `lambda`. Panics if `lambda <= 0`.",13,{"i":[{"n":"f64"}],"o":{"n":"exp"}}],[11,"sample","","",13,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"f64"}}],[11,"ind_sample","","",13,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"f64"}}],[8,"Sample","rand::distributions","Types that can be used to create a random instance of `Support`.",null,null],[10,"sample","","Generate a random value of `Support`, using `rng` as the source of randomness.",14,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"support"}}],[8,"IndependentSample","","`Sample`s that do not require keeping track of state.",null,null],[10,"ind_sample","","Generate a random value.",15,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"support"}}],[11,"fmt","","",16,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",16,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"sample","","",16,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"sup"}}],[11,"ind_sample","","",16,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"sup"}}],[11,"new","","",16,{"o":{"n":"randsample"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"weighted"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",17,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Create a new `WeightedChoice`.",17,null],[11,"sample","","",17,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"t"}}],[11,"ind_sample","","",17,{"i":[{"n":"self"},{"n":"r"}],"o":{"n":"t"}}],[0,"jitter","rand","Non-physical true random number generator based on timing jitter.",null,null],[3,"JitterRng","rand::jitter","A true random number generator based on jitter in the CPU execution time, and jitter in memory access time.",null,null],[4,"TimerError","","An error that can occur when `test_timer` fails.",null,null],[13,"NoTimer","","No timer available.",18,null],[13,"CoarseTimer","","Timer too coarse to use as an entropy source.",18,null],[13,"NotMonotonic","","Timer is not monotonically increasing.",18,null],[13,"TinyVariantions","","Variations of deltas of time too small.",18,null],[13,"TooManyStuck","","Too many stuck results (indicating no added entropy).",18,null],[11,"fmt","","",19,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",18,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",18,{"i":[{"n":"self"}],"o":{"n":"timererror"}}],[11,"eq","","",18,{"i":[{"n":"self"},{"n":"timererror"}],"o":{"n":"bool"}}],[11,"fmt","","",18,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",18,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"new","","Create a new `JitterRng`. Makes use of `std::time` for a timer.",19,{"o":{"g":["jitterrng","timererror"],"n":"result"}}],[11,"new_with_timer","","Create a new `JitterRng`. A custom timer can be supplied, making it possible to use `JitterRng` in `no_std` environments.",19,null],[11,"set_rounds","","Configures how many rounds are used to generate each 64-bit value. This must be greater than zero, and has a big impact on performance and output quality.",19,{"i":[{"n":"self"},{"n":"u32"}]}],[11,"test_timer","","Basic quality tests on the timer, by measuring CPU timing jitter a few hundred times.",19,{"i":[{"n":"self"}],"o":{"g":["u32","timererror"],"n":"result"}}],[11,"timer_stats","","Statistical test: return the timer delta of one normal run of the `JitterEntropy` entropy collector.",19,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"i64"}}],[11,"next_u32","","",19,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"next_u64","","",19,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"fill_bytes","","",19,null],[0,"os","rand","Interfaces to the operating system provided random number generators.",null,null],[3,"OsRng","rand::os","A random number generator that retrieves randomness straight from the operating system. Platform sources:",null,null],[11,"new","","Create a new `OsRng`.",20,{"o":{"g":["osrng"],"n":"result"}}],[11,"next_u32","","",20,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"next_u64","","",20,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"fill_bytes","","",20,null],[11,"fmt","","",20,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[0,"read","rand","A wrapper around any Read to treat it as an RNG.",null,null],[3,"ReadRng","rand::read","An RNG that reads random bytes straight from a `Read`. This will work best with an infinite reader, but this is not required.",null,null],[11,"fmt","","",21,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Create a new `ReadRng` from a `Read`.",21,{"i":[{"n":"r"}],"o":{"n":"readrng"}}],[11,"next_u32","","",21,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"next_u64","","",21,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"fill_bytes","","",21,null],[0,"reseeding","rand","A wrapper around another RNG that reseeds it after it generates a certain number of random bytes.",null,null],[3,"ReseedingRng","rand::reseeding","A wrapper around any RNG which reseeds the underlying RNG after it has generated a certain number of random bytes.",null,null],[12,"reseeder","","Controls the behaviour when reseeding the RNG.",22,null],[3,"ReseedWithDefault","","Reseed an RNG using a `Default` instance. This reseeds by replacing the RNG with the result of a `Default::default` call.",null,null],[8,"Reseeder","","Something that can be used to reseed an RNG via `ReseedingRng`.",null,null],[10,"reseed","","Reseed the given RNG.",23,{"i":[{"n":"self"},{"n":"r"}]}],[11,"fmt","","",22,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Create a new `ReseedingRng` with the given parameters.",22,{"i":[{"n":"r"},{"n":"u64"},{"n":"rsdr"}],"o":{"n":"reseedingrng"}}],[11,"reseed_if_necessary","","Reseed the internal RNG if the number of bytes that have been generated exceed the threshold.",22,{"i":[{"n":"self"}]}],[11,"next_u32","","",22,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"next_u64","","",22,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"fill_bytes","","",22,null],[11,"reseed","","",22,null],[11,"from_seed","","Create a new `ReseedingRng` from the given reseeder and seed. This uses a default value for `generation_threshold`.",22,null],[11,"clone","","",24,{"i":[{"n":"self"}],"o":{"n":"reseedwithdefault"}}],[11,"fmt","","",24,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"reseed","","",24,{"i":[{"n":"self"},{"n":"r"}]}],[11,"default","","",24,{"o":{"n":"reseedwithdefault"}}],[0,"seq","rand","Functions for randomly accessing and sampling sequences.",null,null],[5,"sample_iter","rand::seq","Randomly sample `amount` elements from a finite iterator.",null,{"i":[{"n":"r"},{"n":"i"},{"n":"usize"}],"o":{"g":["vec","vec"],"n":"result"}}],[5,"sample_slice","","Randomly sample exactly `amount` values from `slice`.",null,null],[5,"sample_slice_ref","","Randomly sample exactly `amount` references from `slice`.",null,null],[5,"sample_indices","","Randomly sample exactly `amount` indices from `0..length`.",null,{"i":[{"n":"r"},{"n":"usize"},{"n":"usize"}],"o":{"g":["usize"],"n":"vec"}}],[0,"chacha","rand","The ChaCha random number generator.",null,null],[3,"ChaChaRng","rand::chacha","A random number generator that uses the ChaCha20 algorithm [1].",null,null],[0,"isaac","rand","The ISAAC random number generator.",null,null],[3,"IsaacRng","rand::isaac","A random number generator that uses the ISAAC algorithm[1].",null,null],[3,"Isaac64Rng","","A random number generator that uses ISAAC-64[1], the 64-bit variant of the ISAAC algorithm.",null,null],[11,"rand","rand","",0,{"i":[{"n":"r"}],"o":{"g":["f64"],"n":"open01"}}],[11,"rand","","",1,{"i":[{"n":"r"}],"o":{"g":["f64"],"n":"closed01"}}],[11,"rand","","",0,{"i":[{"n":"r"}],"o":{"g":["f32"],"n":"open01"}}],[11,"rand","","",1,{"i":[{"n":"r"}],"o":{"g":["f32"],"n":"closed01"}}],[11,"clone","","",25,{"i":[{"n":"self"}],"o":{"n":"chacharng"}}],[11,"fmt","","",25,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new_unseeded","","Create an ChaCha random number generator using the default fixed key of 8 zero words.",25,{"o":{"n":"chacharng"}}],[11,"set_counter","","Sets the internal 128-bit ChaCha counter to a user-provided value. This permits jumping arbitrarily ahead (or backwards) in the pseudorandom stream.",25,{"i":[{"n":"self"},{"n":"u64"},{"n":"u64"}]}],[11,"next_u32","","",25,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"reseed","","",25,null],[11,"from_seed","","Create a ChaCha generator from a seed, obtained from a variable-length u32 array. Only up to 8 words are used; if less than 8 words are used, the remaining are set to zero.",25,null],[11,"rand","","",25,{"i":[{"n":"r"}],"o":{"n":"chacharng"}}],[11,"new_unseeded","","Create an ISAAC random number generator using the default fixed seed.",26,{"o":{"n":"isaacrng"}}],[11,"clone","","",26,{"i":[{"n":"self"}],"o":{"n":"isaacrng"}}],[11,"next_u32","","",26,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"reseed","","",26,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can be any length, although the maximum number of elements used is 256 and any more will be silently ignored. A generator constructed with a given seed will generate the same sequence of values as all other generators constructed with that seed.",26,null],[11,"rand","","",26,{"i":[{"n":"r"}],"o":{"n":"isaacrng"}}],[11,"fmt","","",26,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new_unseeded","","Create a 64-bit ISAAC random number generator using the default fixed seed.",27,{"o":{"n":"isaac64rng"}}],[11,"clone","","",27,{"i":[{"n":"self"}],"o":{"n":"isaac64rng"}}],[11,"next_u32","","",27,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"next_u64","","",27,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"reseed","","",27,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can be any length, although the maximum number of elements used is 256 and any more will be silently ignored. A generator constructed with a given seed will generate the same sequence of values as all other generators constructed with that seed.",27,null],[11,"rand","","",27,{"i":[{"n":"r"}],"o":{"n":"isaac64rng"}}],[11,"fmt","","",27,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",28,{"i":[{"n":"self"}],"o":{"n":"xorshiftrng"}}],[11,"fmt","","",28,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new_unseeded","","Creates a new XorShiftRng instance which is not seeded.",28,{"o":{"n":"xorshiftrng"}}],[11,"next_u32","","",28,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"reseed","","Reseed an XorShiftRng. This will panic if `seed` is entirely 0.",28,null],[11,"from_seed","","Create a new XorShiftRng. This will panic if `seed` is entirely 0.",28,null],[11,"rand","","",28,{"i":[{"n":"r"}],"o":{"n":"xorshiftrng"}}],[8,"Rand","","A type that can be randomly generated using an `Rng`.",null,null],[10,"rand","","Generates a random instance of this type using the specified source of randomness.",29,{"i":[{"n":"r"}],"o":{"n":"self"}}],[8,"Rng","","A random number generator.",null,null],[10,"next_u32","","Return the next random u32.",30,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"next_u64","","Return the next random u64.",30,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"next_f32","","Return the next random f32 selected from the half-open interval `[0, 1)`.",30,{"i":[{"n":"self"}],"o":{"n":"f32"}}],[11,"next_f64","","Return the next random f64 selected from the half-open interval `[0, 1)`.",30,{"i":[{"n":"self"}],"o":{"n":"f64"}}],[11,"fill_bytes","","Fill `dest` with random data.",30,null],[11,"gen","","Return a random value of a `Rand` type.",30,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"gen_iter","","Return an iterator that will yield an infinite number of randomly generated items.",30,{"i":[{"n":"self"}],"o":{"n":"generator"}}],[11,"gen_range","","Generate a random value in the range [`low`, `high`).",30,{"i":[{"n":"self"},{"n":"t"},{"n":"t"}],"o":{"n":"t"}}],[11,"gen_weighted_bool","","Return a bool with a 1 in n chance of true",30,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"bool"}}],[11,"gen_ascii_chars","","Return an iterator of random characters from the set A-Z,a-z,0-9.",30,{"i":[{"n":"self"}],"o":{"n":"asciigenerator"}}],[11,"choose","","Return a random element from `values`.",30,null],[11,"choose_mut","","Return a mutable pointer to a random element from `values`.",30,null],[11,"shuffle","","Shuffle a mutable slice in place.",30,null],[8,"SeedableRng","","A random number generator that can be explicitly seeded to produce the same stream of randomness multiple times.",null,null],[10,"reseed","","Reseed an RNG with the given seed.",31,{"i":[{"n":"self"},{"n":"seed"}]}],[10,"from_seed","","Create a new RNG with the given seed.",31,{"i":[{"n":"seed"}],"o":{"n":"self"}}],[11,"fmt","","",32,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"next","","",32,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"fmt","","",33,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"next","","",33,{"i":[{"n":"self"}],"o":{"g":["char"],"n":"option"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",34,{"i":[{"n":"self"}],"o":{"n":"stdrng"}}],[11,"fmt","","",34,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Create a randomly seeded instance of `StdRng`.",34,{"o":{"g":["stdrng"],"n":"result"}}],[11,"next_u32","","",34,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"next_u64","","",34,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"reseed","","",34,null],[11,"from_seed","","",34,null],[11,"clone","","",35,{"i":[{"n":"self"}],"o":{"n":"threadrng"}}],[11,"fmt","","",35,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"next_u32","","",35,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"next_u64","","",35,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"fill_bytes","","",35,null]],"paths":[[3,"Open01"],[3,"Closed01"],[3,"Weighted"],[8,"SampleRange"],[3,"Range"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"StandardNormal"],[3,"Normal"],[3,"LogNormal"],[3,"Exp1"],[3,"Exp"],[8,"Sample"],[8,"IndependentSample"],[3,"RandSample"],[3,"WeightedChoice"],[4,"TimerError"],[3,"JitterRng"],[3,"OsRng"],[3,"ReadRng"],[3,"ReseedingRng"],[8,"Reseeder"],[3,"ReseedWithDefault"],[3,"ChaChaRng"],[3,"IsaacRng"],[3,"Isaac64Rng"],[3,"XorShiftRng"],[8,"Rand"],[8,"Rng"],[8,"SeedableRng"],[3,"Generator"],[3,"AsciiGenerator"],[3,"StdRng"],[3,"ThreadRng"]]};
searchIndex["rawpointer"] = {"doc":"","items":[[5,"ptrdistance","rawpointer","Return the number of elements of `T` from `start` to `end`. Return the arithmetic difference if `T` is zero size.",null,null],[8,"PointerExt","","Extension methods for raw pointers",null,null],[10,"offset","","",0,{"i":[{"n":"self"},{"n":"isize"}],"o":{"n":"self"}}],[11,"pre_inc","","Increment the pointer by 1, and return its new value.",0,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"post_inc","","Increment the pointer by 1, but return its old value.",0,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"pre_dec","","Decrement the pointer by 1, and return its new value.",0,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"post_dec","","Decrement the pointer by 1, but return its old value.",0,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"inc","","Increment by 1",0,{"i":[{"n":"self"}]}],[11,"dec","","Decrement by 1",0,{"i":[{"n":"self"}]}],[11,"stride_offset","","Offset the pointer by `s` multiplied by `index`.",0,{"i":[{"n":"self"},{"n":"isize"},{"n":"usize"}],"o":{"n":"self"}}]],"paths":[[8,"PointerExt"]]};
searchIndex["steering"] = {"doc":"This library implements real life like behaviors for your autonomous in game agents Implement Steerable trait for your agent, choose a behaviour, calculate steering and apply calculated acceleration to your agents velocity.","items":[[3,"SteeringBehavior","steering","Common properties of steering behaviors",null,null],[12,"enabled","","is this behavior enabled",0,null],[12,"limiter","","limitations on speed and velocity calculations",0,null],[12,"owner","","",0,null],[12,"target","","",0,null],[3,"SteeringAcceleration","","Represents result of a steering behaviour computation. User can aggregate more than one behaviour result into single acceleration struct.",null,null],[12,"linear","","linear acceleration component",1,null],[12,"angular","","angular acceleration component",1,null],[3,"Seek","","Seek behavior calculates the maximum linear valocity to reach the target location",null,null],[12,"behavior","","common steering behavior attributes",2,null],[3,"Flee","","This behavior is the oposite of Seek behavior. It produces linear steering acceleration to go away from target",null,null],[12,"behavior","","Common behavior attributes",3,null],[3,"Pursue","","Pursue behaviour aims to steer the agent towards target by predicting where target will be in time t. Steering calculation is based on targets future position. It is like aiming at a moving target.",null,null],[12,"behavior","","Common behavior attributes",4,null],[12,"max_prediction_time","","",4,null],[3,"Arrive","","This behavior aims to arrive at target position and stop. It is like Seek behavior but aiming to be at zero speed on target.",null,null],[12,"behavior","","Common behavior attributes",5,null],[12,"tolerance","","Stop if we are close enough.",5,null],[12,"deceleration_radius","","Reduce the speed if we are close enough",5,null],[12,"time_to_target","","How quick should we aproach target.",5,null],[3,"Evade","","Evade behaviour produces the negative steering of Pursue behavior. With this behavior owner tries to run away from targets future position at time t.",null,null],[12,"behavior","","Common behavior attributes",6,null],[12,"max_prediction_time","","",6,null],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"steeringbehavior"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"steeringacceleration"}],"o":{"n":"bool"}}],[11,"ne","","",1,{"i":[{"n":"self"},{"n":"steeringacceleration"}],"o":{"n":"bool"}}],[11,"default","","",1,{"o":{"n":"steeringacceleration"}}],[11,"new","","Creates a steering acceleration struct using given linear and angular components",1,{"i":[{"n":"vector3"},{"n":"t"}],"o":{"n":"steeringacceleration"}}],[11,"is_zero","","Tests whether both linear and angular acceleration compenents are zero",1,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"set_zero","","Sets both compononents to zero",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"add","","",1,{"i":[{"n":"self"},{"n":"steeringacceleration"}],"o":{"n":"self"}}],[11,"scl","","",1,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"self"}}],[11,"mul_add","","",1,{"i":[{"n":"self"},{"n":"steeringacceleration"},{"n":"t"}],"o":{"n":"self"}}],[11,"calculate_square_magnitude","","",1,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"calculate_magnitude","","",1,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"get_steering_behavior","","",2,{"i":[{"n":"self"}],"o":{"g":["steeringbehavior"],"n":"refmut"}}],[11,"calculate_real_steering","","",2,{"i":[{"n":"self"},{"g":["refcell"],"n":"rc"}],"o":{"g":["refcell"],"n":"rc"}}],[11,"get_steering_behavior","","",3,{"i":[{"n":"self"}],"o":{"g":["steeringbehavior"],"n":"refmut"}}],[11,"calculate_real_steering","","",3,{"i":[{"n":"self"},{"g":["refcell"],"n":"rc"}],"o":{"g":["refcell"],"n":"rc"}}],[11,"get_steering_behavior","","",4,{"i":[{"n":"self"}],"o":{"g":["steeringbehavior"],"n":"refmut"}}],[11,"calculate_real_steering","","",4,{"i":[{"n":"self"},{"g":["refcell"],"n":"rc"}],"o":{"g":["refcell"],"n":"rc"}}],[11,"get_steering_behavior","","",5,{"i":[{"n":"self"}],"o":{"g":["steeringbehavior"],"n":"refmut"}}],[11,"calculate_real_steering","","",5,{"i":[{"n":"self"},{"g":["refcell"],"n":"rc"}],"o":{"g":["refcell"],"n":"rc"}}],[11,"get_steering_behavior","","",6,{"i":[{"n":"self"}],"o":{"g":["steeringbehavior"],"n":"refmut"}}],[11,"calculate_real_steering","","",6,{"i":[{"n":"self"},{"g":["refcell"],"n":"rc"}],"o":{"g":["refcell"],"n":"rc"}}],[8,"Steerable","","Steerable agent interface",null,null],[10,"get_linear_velocity","","returns the linear velocity vector of the agent",7,{"i":[{"n":"self"}],"o":{"n":"vector3"}}],[10,"get_angular_velocity","","returns angular velocity of the agent",7,{"i":[{"n":"self"}],"o":{"n":"t"}}],[10,"get_bounding_radius","","returns bounding circle radius of the agent",7,{"i":[{"n":"self"}],"o":{"n":"t"}}],[10,"get_position","","",7,{"i":[{"n":"self"}],"o":{"n":"vector3"}}],[10,"get_orientation","","",7,{"i":[{"n":"self"}],"o":{"n":"t"}}],[8,"HasSteeringBehavior","","",null,null],[10,"get_steering_behavior","","",8,{"i":[{"n":"self"}],"o":{"g":["steeringbehavior"],"n":"refmut"}}],[8,"IsEnabled","","",null,null],[10,"is_enabled","","",9,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[10,"set_enabled","","",9,{"i":[{"n":"self"},{"n":"bool"}]}],[8,"Limiter","","Interface to set limits  on linear and angular speed and acceleration of the agent",null,null],[10,"get_zero_linear_speed_threshold","","",10,{"i":[{"n":"self"}],"o":{"n":"t"}}],[10,"set_zero_linear_speed_threshold","","",10,{"i":[{"n":"self"},{"n":"t"}]}],[10,"get_max_linear_speed","","",10,{"i":[{"n":"self"}],"o":{"n":"t"}}],[10,"set_max_linear_speed","","",10,{"i":[{"n":"self"},{"n":"t"}]}],[10,"get_max_linear_acceleration","","",10,{"i":[{"n":"self"}],"o":{"n":"t"}}],[10,"set_max_linear_acceleration","","",10,{"i":[{"n":"self"},{"n":"t"}]}],[10,"get_max_angular_speed","","",10,{"i":[{"n":"self"}],"o":{"n":"t"}}],[10,"set_max_angular_speed","","",10,{"i":[{"n":"self"},{"n":"t"}]}],[10,"get_max_angular_acceleration","","",10,{"i":[{"n":"self"}],"o":{"n":"t"}}],[10,"set_max_angular_acceleration","","",10,{"i":[{"n":"self"},{"n":"t"}]}],[8,"SteeringAccelerationCalculator","","",null,null],[11,"calculate_steering","","",11,{"i":[{"n":"self"},{"g":["refcell"],"n":"rc"}],"o":{"g":["refcell"],"n":"rc"}}],[10,"calculate_real_steering","","",11,{"i":[{"n":"self"},{"g":["refcell"],"n":"rc"}],"o":{"g":["refcell"],"n":"rc"}}],[11,"calculate_steering","","",11,{"i":[{"n":"self"},{"g":["refcell"],"n":"rc"}],"o":{"g":["refcell"],"n":"rc"}}]],"paths":[[3,"SteeringBehavior"],[3,"SteeringAcceleration"],[3,"Seek"],[3,"Flee"],[3,"Pursue"],[3,"Arrive"],[3,"Evade"],[8,"Steerable"],[8,"HasSteeringBehavior"],[8,"IsEnabled"],[8,"Limiter"],[8,"SteeringAccelerationCalculator"]]};
searchIndex["syn"] = {"doc":"","items":[[3,"Attribute","syn","Doc-comments are promoted to attributes that have `is_sugared_doc` = true",null,null],[12,"style","","",0,null],[12,"value","","",0,null],[12,"is_sugared_doc","","",0,null],[3,"Field","","A field of a struct or enum variant.",null,null],[12,"ident","","Name of the field, if any.",1,null],[12,"vis","","Visibility of the field.",1,null],[12,"attrs","","Attributes tagged on the field.",1,null],[12,"ty","","Type of the field.",1,null],[3,"Variant","","An enum variant.",null,null],[12,"ident","","Name of the variant.",2,null],[12,"attrs","","Attributes tagged on the variant.",2,null],[12,"data","","Type of variant.",2,null],[12,"discriminant","","Explicit discriminant, e.g. `Foo = 1`",2,null],[3,"Generics","","Represents lifetimes and type parameters attached to a declaration of a function, enum, trait, etc.",null,null],[12,"lifetimes","","",3,null],[12,"ty_params","","",3,null],[12,"where_clause","","",3,null],[3,"Lifetime","","",null,null],[12,"ident","","",4,null],[3,"LifetimeDef","","A lifetime definition, e.g. `'a: 'b+'c+'d`",null,null],[12,"attrs","","",5,null],[12,"lifetime","","",5,null],[12,"bounds","","",5,null],[3,"TyParam","","A generic type parameter, e.g. `T: Into<String>`.",null,null],[12,"attrs","","",6,null],[12,"ident","","",6,null],[12,"bounds","","",6,null],[12,"default","","",6,null],[3,"WhereBoundPredicate","","A type bound.",null,null],[12,"bound_lifetimes","","Any lifetimes from a `for` binding",7,null],[12,"bounded_ty","","The type being bounded",7,null],[12,"bounds","","Trait and lifetime bounds (`Clone+Send+'static`)",7,null],[3,"WhereClause","","A `where` clause in a definition",null,null],[12,"predicates","","",8,null],[3,"WhereEqPredicate","","An equality predicate (unsupported).",null,null],[12,"lhs_ty","","",9,null],[12,"rhs_ty","","",9,null],[3,"WhereRegionPredicate","","A lifetime predicate.",null,null],[12,"lifetime","","",10,null],[12,"bounds","","",10,null],[3,"ImplGenerics","","Returned by `Generics::split_for_impl`.",null,null],[3,"Turbofish","","Returned by `TyGenerics::as_turbofish`.",null,null],[3,"TyGenerics","","Returned by `Generics::split_for_impl`.",null,null],[3,"Ident","","",null,null],[3,"ByteStrLit","","",null,null],[12,"value","","",11,null],[12,"style","","",11,null],[3,"FloatLit","","",null,null],[12,"value","","",12,null],[12,"suffix","","",12,null],[3,"IntLit","","",null,null],[12,"value","","",13,null],[12,"suffix","","",13,null],[3,"StrLit","","",null,null],[12,"value","","",14,null],[12,"style","","",14,null],[3,"Delimited","","",null,null],[12,"delim","","The type of delimiter",15,null],[12,"tts","","The delimited sequence of token trees",15,null],[3,"Mac","","Represents a macro invocation. The Path indicates which macro is being invoked, and the vector of token-trees contains the source of the macro invocation.",null,null],[12,"path","","",16,null],[12,"tts","","",16,null],[3,"DeriveInput","","Struct or enum sent to a `proc_macro_derive` macro.",null,null],[12,"ident","","Name of the struct or enum.",17,null],[12,"vis","","Visibility of the struct or enum.",17,null],[12,"attrs","","Attributes tagged on the whole struct or enum.",17,null],[12,"generics","","Generics required to complete the definition.",17,null],[12,"body","","Data within the struct or enum.",17,null],[3,"AngleBracketedParameterData","","A path like `Foo<'a, T>`",null,null],[12,"lifetimes","","The lifetime parameters for this path segment.",18,null],[12,"types","","The type parameters for this path segment, if present.",18,null],[12,"bindings","","Bindings (equality constraints) on associated types, if present.",18,null],[3,"BareFnArg","","An argument in a function type.",null,null],[12,"name","","",19,null],[12,"ty","","",19,null],[3,"BareFnTy","","",null,null],[12,"unsafety","","",20,null],[12,"abi","","",20,null],[12,"lifetimes","","",20,null],[12,"inputs","","",20,null],[12,"output","","",20,null],[12,"variadic","","",20,null],[3,"MutTy","","",null,null],[12,"ty","","",21,null],[12,"mutability","","",21,null],[3,"ParenthesizedParameterData","","A path like `Foo(A,B) -> C`",null,null],[12,"inputs","","`(A, B)`",22,null],[12,"output","","`C`",22,null],[3,"Path","","A \"Path\" is essentially Rust's notion of a name.",null,null],[12,"global","","A `::foo` path, is relative to the crate root rather than current module (like paths in an import).",23,null],[12,"segments","","The segments in the path: the things separated by `::`.",23,null],[3,"PathSegment","","A segment of a path: an identifier, an optional lifetime, and a set of types.",null,null],[12,"ident","","The identifier portion of this path segment.",24,null],[12,"parameters","","Type/lifetime parameters attached to this path. They come in two flavors: `Path<A,B,C>` and `Path(A,B) -> C`. Note that this is more than just simple syntactic sugar; the use of parens affects the region binding rules, so we preserve the distinction.",24,null],[3,"PolyTraitRef","","",null,null],[12,"bound_lifetimes","","The `'a` in `<'a> Foo<&'a T>`",25,null],[12,"trait_ref","","The `Foo<&'a T>` in `<'a> Foo<&'a T>`",25,null],[3,"QSelf","","The explicit Self type in a \"qualified path\". The actual path, including the trait and the associated item, is stored separately. `position` represents the index of the associated item qualified with this Self type.",null,null],[12,"ty","","",26,null],[12,"position","","",26,null],[3,"TypeBinding","","Bind a type to an associated type: `A=Foo`.",null,null],[12,"ident","","",27,null],[12,"ty","","",27,null],[4,"AttrStyle","","Distinguishes between Attributes that decorate items and Attributes that are contained as statements within items. These two cases need to be distinguished for pretty-printing.",null,null],[13,"Outer","","Attribute of the form `#![...]`.",28,null],[13,"Inner","","Attribute of the form `#[...]`.",28,null],[4,"MetaItem","","A compile-time attribute item.",null,null],[13,"Word","","Word meta item.",29,null],[13,"List","","List meta item.",29,null],[13,"NameValue","","Name-value meta item.",29,null],[4,"NestedMetaItem","","Possible values inside of compile-time attribute lists.",null,null],[13,"MetaItem","","A full `MetaItem`.",30,null],[13,"Literal","","A Rust literal.",30,null],[4,"ConstExpr","","",null,null],[13,"Call","","A function call",31,null],[13,"Binary","","A binary operation (For example: `a + b`, `a * b`)",31,null],[13,"Unary","","A unary operation (For example: `!x`, `*x`)",31,null],[13,"Lit","","A literal (For example: `1`, `\"foo\"`)",31,null],[13,"Cast","","A cast (`foo as f64`)",31,null],[13,"Path","","Variable reference, possibly containing `::` and/or type parameters, e.g. foo::bar::.",31,null],[13,"Index","","An indexing operation (`foo[2]`)",31,null],[13,"Paren","","No-op: used solely so we can pretty-print faithfully",31,null],[13,"Other","","If compiling with full support for expression syntax, any expression is allowed",31,null],[4,"VariantData","","Data stored within an enum variant or struct.",null,null],[13,"Struct","","Struct variant, e.g. `Point { x: f64, y: f64 }`.",32,null],[13,"Tuple","","Tuple variant, e.g. `Some(T)`.",32,null],[13,"Unit","","Unit variant, e.g. `None`.",32,null],[4,"Visibility","","Visibility level of an item.",null,null],[13,"Public","","Public, i.e. `pub`.",33,null],[13,"Crate","","Crate-visible, i.e. `pub(crate)`.",33,null],[13,"Restricted","","Restricted, e.g. `pub(some::module)`.",33,null],[13,"Inherited","","Inherited, i.e. private.",33,null],[4,"TraitBoundModifier","","A modifier on a bound, currently this is only used for `?Sized`, where the modifier is `Maybe`. Negative bounds should also be handled here.",null,null],[13,"None","","",34,null],[13,"Maybe","","",34,null],[4,"TyParamBound","","The AST represents all type param bounds as types. `typeck::collect::compute_bounds` matches these against the \"special\" built-in traits (see `middle::lang_items`) and detects Copy, Send and Sync.",null,null],[13,"Trait","","",35,null],[13,"Region","","",35,null],[4,"WherePredicate","","A single predicate in a `where` clause",null,null],[13,"BoundPredicate","","A type binding, e.g. `for<'c> Foo: Send+Clone+'c`",36,null],[13,"RegionPredicate","","A lifetime predicate, e.g. `'a: 'b+'c`",36,null],[13,"EqPredicate","","An equality predicate (unsupported)",36,null],[4,"FloatTy","","",null,null],[13,"F32","","",37,null],[13,"F64","","",37,null],[13,"Unsuffixed","","",37,null],[4,"IntTy","","",null,null],[13,"Isize","","",38,null],[13,"I8","","",38,null],[13,"I16","","",38,null],[13,"I32","","",38,null],[13,"I64","","",38,null],[13,"Usize","","",38,null],[13,"U8","","",38,null],[13,"U16","","",38,null],[13,"U32","","",38,null],[13,"U64","","",38,null],[13,"Unsuffixed","","",38,null],[4,"Lit","","Literal kind.",null,null],[13,"Str","","A string literal (`\"foo\"`)",39,null],[13,"ByteStr","","A byte string (`b\"foo\"`)",39,null],[13,"Byte","","A byte char (`b'f'`)",39,null],[13,"Char","","A character literal (`'a'`)",39,null],[13,"Int","","An integer literal (`1`)",39,null],[13,"Float","","A float literal (`1f64` or `1E10f64` or `1.0E10`)",39,null],[13,"Bool","","A boolean literal",39,null],[4,"StrStyle","","",null,null],[13,"Cooked","","A regular string, like `\"foo\"`",40,null],[13,"Raw","","A raw string, like `r##\"foo\"##`",40,null],[4,"BinOpToken","","",null,null],[13,"Plus","","",41,null],[13,"Minus","","",41,null],[13,"Star","","",41,null],[13,"Slash","","",41,null],[13,"Percent","","",41,null],[13,"Caret","","",41,null],[13,"And","","",41,null],[13,"Or","","",41,null],[13,"Shl","","",41,null],[13,"Shr","","",41,null],[4,"DelimToken","","A delimiter token",null,null],[13,"Paren","","A round parenthesis: `(` or `)`",42,null],[13,"Bracket","","A square bracket: `[` or `]`",42,null],[13,"Brace","","A curly brace: `{` or `}`",42,null],[4,"Token","","",null,null],[13,"Eq","","",43,null],[13,"Lt","","",43,null],[13,"Le","","",43,null],[13,"EqEq","","",43,null],[13,"Ne","","",43,null],[13,"Ge","","",43,null],[13,"Gt","","",43,null],[13,"AndAnd","","",43,null],[13,"OrOr","","",43,null],[13,"Not","","",43,null],[13,"Tilde","","",43,null],[13,"BinOp","","",43,null],[13,"BinOpEq","","",43,null],[13,"At","","",43,null],[13,"Dot","","",43,null],[13,"DotDot","","",43,null],[13,"DotDotDot","","",43,null],[13,"Comma","","",43,null],[13,"Semi","","",43,null],[13,"Colon","","",43,null],[13,"ModSep","","",43,null],[13,"RArrow","","",43,null],[13,"LArrow","","",43,null],[13,"FatArrow","","",43,null],[13,"Pound","","",43,null],[13,"Dollar","","",43,null],[13,"Question","","",43,null],[13,"Literal","","",43,null],[13,"Ident","","",43,null],[13,"Underscore","","",43,null],[13,"Lifetime","","",43,null],[13,"DocComment","","",43,null],[4,"TokenTree","","When the main rust parser encounters a syntax-extension invocation, it parses the arguments to the invocation as a token-tree. This is a very loose structure, such that all sorts of different AST-fragments can be passed to syntax extensions using a uniform type.",null,null],[13,"Token","","A single token",44,null],[13,"Delimited","","A delimited sequence of token trees",44,null],[4,"Body","","Body of a derived struct or enum.",null,null],[13,"Enum","","It's an enum.",45,null],[13,"Struct","","It's a struct.",45,null],[4,"BinOp","","",null,null],[13,"Add","","The `+` operator (addition)",46,null],[13,"Sub","","The `-` operator (subtraction)",46,null],[13,"Mul","","The `*` operator (multiplication)",46,null],[13,"Div","","The `/` operator (division)",46,null],[13,"Rem","","The `%` operator (modulus)",46,null],[13,"And","","The `&&` operator (logical and)",46,null],[13,"Or","","The `||` operator (logical or)",46,null],[13,"BitXor","","The `^` operator (bitwise xor)",46,null],[13,"BitAnd","","The `&` operator (bitwise and)",46,null],[13,"BitOr","","The `|` operator (bitwise or)",46,null],[13,"Shl","","The `<<` operator (shift left)",46,null],[13,"Shr","","The `>>` operator (shift right)",46,null],[13,"Eq","","The `==` operator (equality)",46,null],[13,"Lt","","The `<` operator (less than)",46,null],[13,"Le","","The `<=` operator (less than or equal to)",46,null],[13,"Ne","","The `!=` operator (not equal to)",46,null],[13,"Ge","","The `>=` operator (greater than or equal to)",46,null],[13,"Gt","","The `>` operator (greater than)",46,null],[4,"UnOp","","",null,null],[13,"Deref","","The `*` operator for dereferencing",47,null],[13,"Not","","The `!` operator for logical inversion",47,null],[13,"Neg","","The `-` operator for negation",47,null],[4,"Abi","","",null,null],[13,"Named","","",48,null],[13,"Rust","","",48,null],[4,"FunctionRetTy","","",null,null],[13,"Default","","Return type is not specified.",49,null],[13,"Ty","","Everything else",49,null],[4,"Mutability","","",null,null],[13,"Mutable","","",50,null],[13,"Immutable","","",50,null],[4,"PathParameters","","Parameters of a path segment.",null,null],[13,"AngleBracketed","","The `<'a, A, B, C>` in `foo::bar::baz::<'a, A, B, C>`",51,null],[13,"Parenthesized","","The `(A, B)` and `C` in `Foo(A, B) -> C`",51,null],[4,"Ty","","The different kinds of types recognized by the compiler",null,null],[13,"Slice","","A variable-length array (`[T]`)",52,null],[13,"Array","","A fixed length array (`[T; n]`)",52,null],[13,"Ptr","","A raw pointer (`*const T` or `*mut T`)",52,null],[13,"Rptr","","A reference (`&'a T` or `&'a mut T`)",52,null],[13,"BareFn","","A bare function (e.g. `fn(usize) -> bool`)",52,null],[13,"Never","","The never type (`!`)",52,null],[13,"Tup","","A tuple (`(A, B, C, D, ...)`)",52,null],[13,"Path","","A path (`module::module::...::Type`), optionally \"qualified\", e.g. `<Vec<T> as SomeTrait>::SomeType`.",52,null],[13,"TraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where `Bound` is a trait or a lifetime.",52,null],[13,"ImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a trait or a lifetime.",52,null],[13,"Paren","","No-op; kept solely so that we can pretty-print faithfully",52,null],[13,"Infer","","TyKind::Infer means the type should be inferred instead of it having been specified. This can appear anywhere in a type.",52,null],[13,"Mac","","A macro in the type position.",52,null],[4,"Unsafety","","",null,null],[13,"Unsafe","","",53,null],[13,"Normal","","",53,null],[5,"parse_derive_input","","",null,{"i":[{"n":"str"}],"o":{"g":["deriveinput","string"],"n":"result"}}],[5,"parse_type","","",null,{"i":[{"n":"str"}],"o":{"g":["ty","string"],"n":"result"}}],[5,"parse_path","","",null,{"i":[{"n":"str"}],"o":{"g":["path","string"],"n":"result"}}],[5,"parse_where_clause","","",null,{"i":[{"n":"str"}],"o":{"g":["whereclause","string"],"n":"result"}}],[5,"parse_token_trees","","",null,{"i":[{"n":"str"}],"o":{"g":["vec","string"],"n":"result"}}],[5,"parse_ident","","",null,{"i":[{"n":"str"}],"o":{"g":["ident","string"],"n":"result"}}],[5,"parse_ty_param_bound","","",null,{"i":[{"n":"str"}],"o":{"g":["typarambound","string"],"n":"result"}}],[5,"parse_outer_attr","","",null,{"i":[{"n":"str"}],"o":{"g":["attribute","string"],"n":"result"}}],[11,"to_tokens","","",0,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",29,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",30,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"attribute"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"attribute"}],"o":{"n":"bool"}}],[11,"ne","","",0,{"i":[{"n":"self"},{"n":"attribute"}],"o":{"n":"bool"}}],[11,"hash","","",0,null],[11,"name","","",0,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"fmt","","",28,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",28,{"i":[{"n":"self"}],"o":{"n":"attrstyle"}}],[11,"eq","","",28,{"i":[{"n":"self"},{"n":"attrstyle"}],"o":{"n":"bool"}}],[11,"hash","","",28,null],[11,"fmt","","",29,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",29,{"i":[{"n":"self"}],"o":{"n":"metaitem"}}],[11,"eq","","",29,{"i":[{"n":"self"},{"n":"metaitem"}],"o":{"n":"bool"}}],[11,"ne","","",29,{"i":[{"n":"self"},{"n":"metaitem"}],"o":{"n":"bool"}}],[11,"hash","","",29,null],[11,"name","","Name of the item.",29,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"fmt","","",30,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",30,{"i":[{"n":"self"}],"o":{"n":"nestedmetaitem"}}],[11,"eq","","",30,{"i":[{"n":"self"},{"n":"nestedmetaitem"}],"o":{"n":"bool"}}],[11,"ne","","",30,{"i":[{"n":"self"},{"n":"nestedmetaitem"}],"o":{"n":"bool"}}],[11,"hash","","",30,null],[11,"to_tokens","","",31,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"fmt","","",31,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",31,{"i":[{"n":"self"}],"o":{"n":"constexpr"}}],[11,"eq","","",31,{"i":[{"n":"self"},{"n":"constexpr"}],"o":{"n":"bool"}}],[11,"ne","","",31,{"i":[{"n":"self"},{"n":"constexpr"}],"o":{"n":"bool"}}],[11,"hash","","",31,null],[11,"to_tokens","","",2,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",32,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",1,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",33,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"variant"}}],[11,"eq","","",2,{"i":[{"n":"self"},{"n":"variant"}],"o":{"n":"bool"}}],[11,"ne","","",2,{"i":[{"n":"self"},{"n":"variant"}],"o":{"n":"bool"}}],[11,"hash","","",2,null],[11,"fmt","","",32,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",32,{"i":[{"n":"self"}],"o":{"n":"variantdata"}}],[11,"eq","","",32,{"i":[{"n":"self"},{"n":"variantdata"}],"o":{"n":"bool"}}],[11,"ne","","",32,{"i":[{"n":"self"},{"n":"variantdata"}],"o":{"n":"bool"}}],[11,"hash","","",32,null],[11,"fields","","Slice containing the fields stored in the variant.",32,null],[11,"fields_mut","","Mutable slice containing the fields stored in the variant.",32,null],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"field"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"field"}],"o":{"n":"bool"}}],[11,"ne","","",1,{"i":[{"n":"self"},{"n":"field"}],"o":{"n":"bool"}}],[11,"hash","","",1,null],[11,"fmt","","",33,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",33,{"i":[{"n":"self"}],"o":{"n":"visibility"}}],[11,"eq","","",33,{"i":[{"n":"self"},{"n":"visibility"}],"o":{"n":"bool"}}],[11,"ne","","",33,{"i":[{"n":"self"},{"n":"visibility"}],"o":{"n":"bool"}}],[11,"hash","","",33,null],[11,"to_tokens","","",3,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",54,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",55,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",56,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",4,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",5,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",6,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",35,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",8,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",36,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",7,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",10,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",9,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"generics"}}],[11,"eq","","",3,{"i":[{"n":"self"},{"n":"generics"}],"o":{"n":"bool"}}],[11,"ne","","",3,{"i":[{"n":"self"},{"n":"generics"}],"o":{"n":"bool"}}],[11,"default","","",3,{"o":{"n":"generics"}}],[11,"hash","","",3,null],[11,"fmt","","",54,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",55,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",56,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"split_for_impl","","Split a type's generics into the pieces required for impl'ing a trait for that type.",3,null],[11,"as_turbofish","","Turn a type's generics like `<X, Y>` into a turbofish like `::<X, Y>`.",55,{"i":[{"n":"self"}],"o":{"n":"turbofish"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"lifetime"}}],[11,"eq","","",4,{"i":[{"n":"self"},{"n":"lifetime"}],"o":{"n":"bool"}}],[11,"ne","","",4,{"i":[{"n":"self"},{"n":"lifetime"}],"o":{"n":"bool"}}],[11,"hash","","",4,null],[11,"cmp","","",4,{"i":[{"n":"self"},{"n":"lifetime"}],"o":{"n":"ordering"}}],[11,"partial_cmp","","",4,{"i":[{"n":"self"},{"n":"lifetime"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",4,{"i":[{"n":"self"},{"n":"lifetime"}],"o":{"n":"bool"}}],[11,"le","","",4,{"i":[{"n":"self"},{"n":"lifetime"}],"o":{"n":"bool"}}],[11,"gt","","",4,{"i":[{"n":"self"},{"n":"lifetime"}],"o":{"n":"bool"}}],[11,"ge","","",4,{"i":[{"n":"self"},{"n":"lifetime"}],"o":{"n":"bool"}}],[11,"new","","",4,{"i":[{"n":"t"}],"o":{"n":"self"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",5,{"i":[{"n":"self"}],"o":{"n":"lifetimedef"}}],[11,"eq","","",5,{"i":[{"n":"self"},{"n":"lifetimedef"}],"o":{"n":"bool"}}],[11,"ne","","",5,{"i":[{"n":"self"},{"n":"lifetimedef"}],"o":{"n":"bool"}}],[11,"hash","","",5,null],[11,"new","","",5,{"i":[{"n":"t"}],"o":{"n":"self"}}],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",6,{"i":[{"n":"self"}],"o":{"n":"typaram"}}],[11,"eq","","",6,{"i":[{"n":"self"},{"n":"typaram"}],"o":{"n":"bool"}}],[11,"ne","","",6,{"i":[{"n":"self"},{"n":"typaram"}],"o":{"n":"bool"}}],[11,"hash","","",6,null],[11,"from","","",6,{"i":[{"n":"ident"}],"o":{"n":"self"}}],[11,"fmt","","",35,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",35,{"i":[{"n":"self"}],"o":{"n":"typarambound"}}],[11,"eq","","",35,{"i":[{"n":"self"},{"n":"typarambound"}],"o":{"n":"bool"}}],[11,"ne","","",35,{"i":[{"n":"self"},{"n":"typarambound"}],"o":{"n":"bool"}}],[11,"hash","","",35,null],[11,"fmt","","",34,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",34,{"i":[{"n":"self"}],"o":{"n":"traitboundmodifier"}}],[11,"eq","","",34,{"i":[{"n":"self"},{"n":"traitboundmodifier"}],"o":{"n":"bool"}}],[11,"hash","","",34,null],[11,"fmt","","",8,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",8,{"i":[{"n":"self"}],"o":{"n":"whereclause"}}],[11,"eq","","",8,{"i":[{"n":"self"},{"n":"whereclause"}],"o":{"n":"bool"}}],[11,"ne","","",8,{"i":[{"n":"self"},{"n":"whereclause"}],"o":{"n":"bool"}}],[11,"default","","",8,{"o":{"n":"whereclause"}}],[11,"hash","","",8,null],[11,"none","","",8,{"o":{"n":"self"}}],[11,"fmt","","",36,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",36,{"i":[{"n":"self"}],"o":{"n":"wherepredicate"}}],[11,"eq","","",36,{"i":[{"n":"self"},{"n":"wherepredicate"}],"o":{"n":"bool"}}],[11,"ne","","",36,{"i":[{"n":"self"},{"n":"wherepredicate"}],"o":{"n":"bool"}}],[11,"hash","","",36,null],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",7,{"i":[{"n":"self"}],"o":{"n":"whereboundpredicate"}}],[11,"eq","","",7,{"i":[{"n":"self"},{"n":"whereboundpredicate"}],"o":{"n":"bool"}}],[11,"ne","","",7,{"i":[{"n":"self"},{"n":"whereboundpredicate"}],"o":{"n":"bool"}}],[11,"hash","","",7,null],[11,"fmt","","",10,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",10,{"i":[{"n":"self"}],"o":{"n":"whereregionpredicate"}}],[11,"eq","","",10,{"i":[{"n":"self"},{"n":"whereregionpredicate"}],"o":{"n":"bool"}}],[11,"ne","","",10,{"i":[{"n":"self"},{"n":"whereregionpredicate"}],"o":{"n":"bool"}}],[11,"hash","","",10,null],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",9,{"i":[{"n":"self"}],"o":{"n":"whereeqpredicate"}}],[11,"eq","","",9,{"i":[{"n":"self"},{"n":"whereeqpredicate"}],"o":{"n":"bool"}}],[11,"ne","","",9,{"i":[{"n":"self"},{"n":"whereeqpredicate"}],"o":{"n":"bool"}}],[11,"hash","","",9,null],[11,"to_tokens","","",57,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"fmt","","",57,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",57,{"i":[{"n":"self"}],"o":{"n":"ident"}}],[11,"hash","","",57,null],[11,"cmp","","",57,{"i":[{"n":"self"},{"n":"ident"}],"o":{"n":"ordering"}}],[11,"partial_cmp","","",57,{"i":[{"n":"self"},{"n":"ident"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",57,{"i":[{"n":"self"},{"n":"ident"}],"o":{"n":"bool"}}],[11,"le","","",57,{"i":[{"n":"self"},{"n":"ident"}],"o":{"n":"bool"}}],[11,"gt","","",57,{"i":[{"n":"self"},{"n":"ident"}],"o":{"n":"bool"}}],[11,"ge","","",57,{"i":[{"n":"self"},{"n":"ident"}],"o":{"n":"bool"}}],[11,"new","","",57,{"i":[{"n":"t"}],"o":{"n":"self"}}],[11,"from","","",57,{"i":[{"n":"str"}],"o":{"n":"self"}}],[11,"from","","",57,{"i":[{"g":["str"],"n":"cow"}],"o":{"n":"self"}}],[11,"from","","",57,{"i":[{"n":"string"}],"o":{"n":"self"}}],[11,"from","","",57,{"i":[{"n":"usize"}],"o":{"n":"self"}}],[11,"as_ref","","",57,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"fmt","","",57,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"eq","","",57,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"bool"}}],[11,"to_tokens","","",39,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"fmt","","",38,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",37,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",39,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",39,{"i":[{"n":"self"}],"o":{"n":"lit"}}],[11,"eq","","",39,{"i":[{"n":"self"},{"n":"lit"}],"o":{"n":"bool"}}],[11,"ne","","",39,{"i":[{"n":"self"},{"n":"lit"}],"o":{"n":"bool"}}],[11,"hash","","",39,null],[11,"fmt","","",40,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",40,{"i":[{"n":"self"}],"o":{"n":"strstyle"}}],[11,"eq","","",40,{"i":[{"n":"self"},{"n":"strstyle"}],"o":{"n":"bool"}}],[11,"ne","","",40,{"i":[{"n":"self"},{"n":"strstyle"}],"o":{"n":"bool"}}],[11,"hash","","",40,null],[11,"from","","",39,{"i":[{"n":"string"}],"o":{"n":"lit"}}],[11,"from","","",39,{"i":[{"n":"str"}],"o":{"n":"lit"}}],[11,"from","","",39,{"i":[{"g":["u8"],"n":"vec"}],"o":{"n":"lit"}}],[11,"from","","",39,null],[11,"from","","",39,{"i":[{"n":"char"}],"o":{"n":"lit"}}],[11,"from","","",39,{"i":[{"n":"bool"}],"o":{"n":"lit"}}],[11,"fmt","","",38,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",38,{"i":[{"n":"self"}],"o":{"n":"intty"}}],[11,"eq","","",38,{"i":[{"n":"self"},{"n":"intty"}],"o":{"n":"bool"}}],[11,"hash","","",38,null],[11,"fmt","","",37,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",37,{"i":[{"n":"self"}],"o":{"n":"floatty"}}],[11,"eq","","",37,{"i":[{"n":"self"},{"n":"floatty"}],"o":{"n":"bool"}}],[11,"hash","","",37,null],[11,"from","","",39,{"i":[{"n":"isize"}],"o":{"n":"lit"}}],[11,"from","","",39,{"i":[{"n":"i8"}],"o":{"n":"lit"}}],[11,"from","","",39,{"i":[{"n":"i16"}],"o":{"n":"lit"}}],[11,"from","","",39,{"i":[{"n":"i32"}],"o":{"n":"lit"}}],[11,"from","","",39,{"i":[{"n":"i64"}],"o":{"n":"lit"}}],[11,"from","","",39,{"i":[{"n":"usize"}],"o":{"n":"lit"}}],[11,"from","","",39,{"i":[{"n":"u8"}],"o":{"n":"lit"}}],[11,"from","","",39,{"i":[{"n":"u16"}],"o":{"n":"lit"}}],[11,"from","","",39,{"i":[{"n":"u32"}],"o":{"n":"lit"}}],[11,"from","","",39,{"i":[{"n":"u64"}],"o":{"n":"lit"}}],[11,"from","","",39,{"i":[{"n":"f32"}],"o":{"n":"lit"}}],[11,"from","","",39,{"i":[{"n":"f64"}],"o":{"n":"lit"}}],[11,"fmt","","",14,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",14,{"i":[{"n":"self"}],"o":{"n":"strlit"}}],[11,"fmt","","",11,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",11,{"i":[{"n":"self"}],"o":{"n":"bytestrlit"}}],[11,"fmt","","",13,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",13,{"i":[{"n":"self"}],"o":{"n":"intlit"}}],[11,"fmt","","",12,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",12,{"i":[{"n":"self"}],"o":{"n":"floatlit"}}],[11,"to_tokens","","",16,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",44,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",15,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",43,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",41,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"fmt","","",16,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",16,{"i":[{"n":"self"}],"o":{"n":"mac"}}],[11,"eq","","",16,{"i":[{"n":"self"},{"n":"mac"}],"o":{"n":"bool"}}],[11,"ne","","",16,{"i":[{"n":"self"},{"n":"mac"}],"o":{"n":"bool"}}],[11,"hash","","",16,null],[11,"fmt","","",44,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",44,{"i":[{"n":"self"}],"o":{"n":"tokentree"}}],[11,"eq","","",44,{"i":[{"n":"self"},{"n":"tokentree"}],"o":{"n":"bool"}}],[11,"ne","","",44,{"i":[{"n":"self"},{"n":"tokentree"}],"o":{"n":"bool"}}],[11,"hash","","",44,null],[11,"fmt","","",15,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",15,{"i":[{"n":"self"}],"o":{"n":"delimited"}}],[11,"eq","","",15,{"i":[{"n":"self"},{"n":"delimited"}],"o":{"n":"bool"}}],[11,"ne","","",15,{"i":[{"n":"self"},{"n":"delimited"}],"o":{"n":"bool"}}],[11,"hash","","",15,null],[11,"fmt","","",43,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",43,{"i":[{"n":"self"}],"o":{"n":"token"}}],[11,"eq","","",43,{"i":[{"n":"self"},{"n":"token"}],"o":{"n":"bool"}}],[11,"ne","","",43,{"i":[{"n":"self"},{"n":"token"}],"o":{"n":"bool"}}],[11,"hash","","",43,null],[11,"fmt","","",41,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",41,{"i":[{"n":"self"}],"o":{"n":"binoptoken"}}],[11,"eq","","",41,{"i":[{"n":"self"},{"n":"binoptoken"}],"o":{"n":"bool"}}],[11,"hash","","",41,null],[11,"fmt","","",42,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",42,{"i":[{"n":"self"}],"o":{"n":"delimtoken"}}],[11,"eq","","",42,{"i":[{"n":"self"},{"n":"delimtoken"}],"o":{"n":"bool"}}],[11,"hash","","",42,null],[11,"to_tokens","","",17,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"fmt","","",17,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",17,{"i":[{"n":"self"}],"o":{"n":"deriveinput"}}],[11,"eq","","",17,{"i":[{"n":"self"},{"n":"deriveinput"}],"o":{"n":"bool"}}],[11,"ne","","",17,{"i":[{"n":"self"},{"n":"deriveinput"}],"o":{"n":"bool"}}],[11,"hash","","",17,null],[11,"fmt","","",45,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",45,{"i":[{"n":"self"}],"o":{"n":"body"}}],[11,"eq","","",45,{"i":[{"n":"self"},{"n":"body"}],"o":{"n":"bool"}}],[11,"ne","","",45,{"i":[{"n":"self"},{"n":"body"}],"o":{"n":"bool"}}],[11,"hash","","",45,null],[11,"op","","",46,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"assign_op","","",46,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"to_tokens","","",46,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"op","","",47,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"to_tokens","","",47,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"fmt","","",46,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",46,{"i":[{"n":"self"}],"o":{"n":"binop"}}],[11,"eq","","",46,{"i":[{"n":"self"},{"n":"binop"}],"o":{"n":"bool"}}],[11,"hash","","",46,null],[11,"fmt","","",47,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",47,{"i":[{"n":"self"}],"o":{"n":"unop"}}],[11,"eq","","",47,{"i":[{"n":"self"},{"n":"unop"}],"o":{"n":"bool"}}],[11,"hash","","",47,null],[11,"to_tokens","","",52,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",50,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",23,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",24,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",51,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",18,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",27,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",22,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",25,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",20,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",19,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",53,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"to_tokens","","",48,{"i":[{"n":"self"},{"n":"tokens"}]}],[11,"fmt","","",52,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",52,{"i":[{"n":"self"}],"o":{"n":"ty"}}],[11,"eq","","",52,{"i":[{"n":"self"},{"n":"ty"}],"o":{"n":"bool"}}],[11,"ne","","",52,{"i":[{"n":"self"},{"n":"ty"}],"o":{"n":"bool"}}],[11,"hash","","",52,null],[11,"fmt","","",21,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",21,{"i":[{"n":"self"}],"o":{"n":"mutty"}}],[11,"eq","","",21,{"i":[{"n":"self"},{"n":"mutty"}],"o":{"n":"bool"}}],[11,"ne","","",21,{"i":[{"n":"self"},{"n":"mutty"}],"o":{"n":"bool"}}],[11,"hash","","",21,null],[11,"fmt","","",50,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",50,{"i":[{"n":"self"}],"o":{"n":"mutability"}}],[11,"eq","","",50,{"i":[{"n":"self"},{"n":"mutability"}],"o":{"n":"bool"}}],[11,"hash","","",50,null],[11,"fmt","","",23,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",23,{"i":[{"n":"self"}],"o":{"n":"path"}}],[11,"eq","","",23,{"i":[{"n":"self"},{"n":"path"}],"o":{"n":"bool"}}],[11,"ne","","",23,{"i":[{"n":"self"},{"n":"path"}],"o":{"n":"bool"}}],[11,"hash","","",23,null],[11,"from","","",23,{"i":[{"n":"t"}],"o":{"n":"self"}}],[11,"fmt","","",24,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",24,{"i":[{"n":"self"}],"o":{"n":"pathsegment"}}],[11,"eq","","",24,{"i":[{"n":"self"},{"n":"pathsegment"}],"o":{"n":"bool"}}],[11,"ne","","",24,{"i":[{"n":"self"},{"n":"pathsegment"}],"o":{"n":"bool"}}],[11,"hash","","",24,null],[11,"from","","",24,{"i":[{"n":"t"}],"o":{"n":"self"}}],[11,"fmt","","",51,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",51,{"i":[{"n":"self"}],"o":{"n":"pathparameters"}}],[11,"eq","","",51,{"i":[{"n":"self"},{"n":"pathparameters"}],"o":{"n":"bool"}}],[11,"ne","","",51,{"i":[{"n":"self"},{"n":"pathparameters"}],"o":{"n":"bool"}}],[11,"hash","","",51,null],[11,"none","","",51,{"o":{"n":"self"}}],[11,"is_empty","","",51,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"fmt","","",18,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",18,{"i":[{"n":"self"}],"o":{"n":"anglebracketedparameterdata"}}],[11,"eq","","",18,{"i":[{"n":"self"},{"n":"anglebracketedparameterdata"}],"o":{"n":"bool"}}],[11,"ne","","",18,{"i":[{"n":"self"},{"n":"anglebracketedparameterdata"}],"o":{"n":"bool"}}],[11,"default","","",18,{"o":{"n":"anglebracketedparameterdata"}}],[11,"hash","","",18,null],[11,"fmt","","",27,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",27,{"i":[{"n":"self"}],"o":{"n":"typebinding"}}],[11,"eq","","",27,{"i":[{"n":"self"},{"n":"typebinding"}],"o":{"n":"bool"}}],[11,"ne","","",27,{"i":[{"n":"self"},{"n":"typebinding"}],"o":{"n":"bool"}}],[11,"hash","","",27,null],[11,"fmt","","",22,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",22,{"i":[{"n":"self"}],"o":{"n":"parenthesizedparameterdata"}}],[11,"eq","","",22,{"i":[{"n":"self"},{"n":"parenthesizedparameterdata"}],"o":{"n":"bool"}}],[11,"ne","","",22,{"i":[{"n":"self"},{"n":"parenthesizedparameterdata"}],"o":{"n":"bool"}}],[11,"hash","","",22,null],[11,"fmt","","",25,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",25,{"i":[{"n":"self"}],"o":{"n":"polytraitref"}}],[11,"eq","","",25,{"i":[{"n":"self"},{"n":"polytraitref"}],"o":{"n":"bool"}}],[11,"ne","","",25,{"i":[{"n":"self"},{"n":"polytraitref"}],"o":{"n":"bool"}}],[11,"hash","","",25,null],[11,"fmt","","",26,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",26,{"i":[{"n":"self"}],"o":{"n":"qself"}}],[11,"eq","","",26,{"i":[{"n":"self"},{"n":"qself"}],"o":{"n":"bool"}}],[11,"ne","","",26,{"i":[{"n":"self"},{"n":"qself"}],"o":{"n":"bool"}}],[11,"hash","","",26,null],[11,"fmt","","",20,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",20,{"i":[{"n":"self"}],"o":{"n":"barefnty"}}],[11,"eq","","",20,{"i":[{"n":"self"},{"n":"barefnty"}],"o":{"n":"bool"}}],[11,"ne","","",20,{"i":[{"n":"self"},{"n":"barefnty"}],"o":{"n":"bool"}}],[11,"hash","","",20,null],[11,"fmt","","",53,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",53,{"i":[{"n":"self"}],"o":{"n":"unsafety"}}],[11,"eq","","",53,{"i":[{"n":"self"},{"n":"unsafety"}],"o":{"n":"bool"}}],[11,"hash","","",53,null],[11,"fmt","","",48,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",48,{"i":[{"n":"self"}],"o":{"n":"abi"}}],[11,"eq","","",48,{"i":[{"n":"self"},{"n":"abi"}],"o":{"n":"bool"}}],[11,"ne","","",48,{"i":[{"n":"self"},{"n":"abi"}],"o":{"n":"bool"}}],[11,"hash","","",48,null],[11,"fmt","","",19,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",19,{"i":[{"n":"self"}],"o":{"n":"barefnarg"}}],[11,"eq","","",19,{"i":[{"n":"self"},{"n":"barefnarg"}],"o":{"n":"bool"}}],[11,"ne","","",19,{"i":[{"n":"self"},{"n":"barefnarg"}],"o":{"n":"bool"}}],[11,"hash","","",19,null],[11,"fmt","","",49,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",49,{"i":[{"n":"self"}],"o":{"n":"functionretty"}}],[11,"eq","","",49,{"i":[{"n":"self"},{"n":"functionretty"}],"o":{"n":"bool"}}],[11,"ne","","",49,{"i":[{"n":"self"},{"n":"functionretty"}],"o":{"n":"bool"}}],[11,"hash","","",49,null],[0,"parse","","This module contains a set of exported nom parsers which can be used to parse custom grammars when used alongside the `synom` crate.",null,null],[4,"IResult","syn::parse","The result of a parser.",null,null],[13,"Done","","Parsing succeeded. The first field contains the rest of the unparsed data and the second field contains the parse result.",58,null],[13,"Error","","Parsing failed.",58,null],[5,"lit","","",null,{"i":[{"n":"str"}],"o":{"g":["str","lit"],"n":"iresult"}}],[5,"string","","",null,{"i":[{"n":"str"}],"o":{"g":["str","strlit"],"n":"iresult"}}],[5,"byte_string","","",null,{"i":[{"n":"str"}],"o":{"g":["str","bytestrlit"],"n":"iresult"}}],[5,"byte","","",null,{"i":[{"n":"str"}],"o":{"g":["str","u8"],"n":"iresult"}}],[5,"character","","",null,{"i":[{"n":"str"}],"o":{"g":["str","char"],"n":"iresult"}}],[5,"float","","",null,{"i":[{"n":"str"}],"o":{"g":["str","floatlit"],"n":"iresult"}}],[5,"int","","",null,{"i":[{"n":"str"}],"o":{"g":["str","intlit"],"n":"iresult"}}],[5,"boolean","","",null,{"i":[{"n":"str"}],"o":{"g":["str","bool"],"n":"iresult"}}],[5,"ty","","",null,{"i":[{"n":"str"}],"o":{"g":["str","ty"],"n":"iresult"}}],[5,"path","","",null,{"i":[{"n":"str"}],"o":{"g":["str","path"],"n":"iresult"}}],[5,"tt","","",null,{"i":[{"n":"str"}],"o":{"g":["str","tokentree"],"n":"iresult"}}],[5,"ident","","",null,{"i":[{"n":"str"}],"o":{"g":["str","ident"],"n":"iresult"}}],[5,"lifetime","","",null,{"i":[{"n":"str"}],"o":{"g":["str","lifetime"],"n":"iresult"}}],[11,"expect","","Unwraps the result, asserting the the parse is complete. Panics with a message based on the given string if the parse failed or is incomplete.",58,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"o"}}],[11,"eq","","",58,{"i":[{"n":"self"},{"n":"iresult"}],"o":{"n":"bool"}}],[11,"ne","","",58,{"i":[{"n":"self"},{"n":"iresult"}],"o":{"n":"bool"}}],[11,"clone","","",58,{"i":[{"n":"self"}],"o":{"n":"iresult"}}],[11,"fmt","","",58,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}]],"paths":[[3,"Attribute"],[3,"Field"],[3,"Variant"],[3,"Generics"],[3,"Lifetime"],[3,"LifetimeDef"],[3,"TyParam"],[3,"WhereBoundPredicate"],[3,"WhereClause"],[3,"WhereEqPredicate"],[3,"WhereRegionPredicate"],[3,"ByteStrLit"],[3,"FloatLit"],[3,"IntLit"],[3,"StrLit"],[3,"Delimited"],[3,"Mac"],[3,"DeriveInput"],[3,"AngleBracketedParameterData"],[3,"BareFnArg"],[3,"BareFnTy"],[3,"MutTy"],[3,"ParenthesizedParameterData"],[3,"Path"],[3,"PathSegment"],[3,"PolyTraitRef"],[3,"QSelf"],[3,"TypeBinding"],[4,"AttrStyle"],[4,"MetaItem"],[4,"NestedMetaItem"],[4,"ConstExpr"],[4,"VariantData"],[4,"Visibility"],[4,"TraitBoundModifier"],[4,"TyParamBound"],[4,"WherePredicate"],[4,"FloatTy"],[4,"IntTy"],[4,"Lit"],[4,"StrStyle"],[4,"BinOpToken"],[4,"DelimToken"],[4,"Token"],[4,"TokenTree"],[4,"Body"],[4,"BinOp"],[4,"UnOp"],[4,"Abi"],[4,"FunctionRetTy"],[4,"Mutability"],[4,"PathParameters"],[4,"Ty"],[4,"Unsafety"],[3,"ImplGenerics"],[3,"TyGenerics"],[3,"Turbofish"],[3,"Ident"],[4,"IResult"]]};
searchIndex["synom"] = {"doc":"Adapted from `nom` by removing the `IResult::Incomplete` variant which:","items":[[4,"IResult","synom","The result of a parser.",null,null],[13,"Done","","Parsing succeeded. The first field contains the rest of the unparsed data and the second field contains the parse result.",0,null],[13,"Error","","Parsing failed.",0,null],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"iresult"}],"o":{"n":"bool"}}],[11,"ne","","",0,{"i":[{"n":"self"},{"n":"iresult"}],"o":{"n":"bool"}}],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"iresult"}}],[11,"expect","","Unwraps the result, asserting the the parse is complete. Panics with a message based on the given string if the parse failed or is incomplete.",0,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"o"}}],[14,"punct","","Parse a piece of punctuation like \"+\" or \"+=\".",null,null],[14,"keyword","","Parse a keyword like \"fn\" or \"struct\".",null,null],[14,"option","","Turn a failed parse into `None` and a successful parse into `Some`.",null,null],[14,"opt_vec","","Turn a failed parse into an empty vector. The argument parser must itself return a vector.",null,null],[14,"epsilon","","Parses nothing and always succeeds.",null,null],[14,"separated_list","","Zero or more values separated by some separator. Does not allow a trailing seperator.",null,null],[14,"terminated_list","","Zero or more values separated by some separator. A trailing separator is allowed.",null,null],[14,"named","","Define a function from a parser combination.",null,null],[14,"call","","Invoke the given parser function with the passed in arguments.",null,null],[14,"map","","Transform the result of a parser by applying a function or closure.",null,null],[14,"not","","Parses successfully if the given parser fails to parse. Does not consume any of the input.",null,null],[14,"cond","","Conditionally execute the given parser.",null,null],[14,"cond_reduce","","Fail to parse if condition is false, otherwise parse the given parser.",null,null],[14,"preceded","","Parse two things, returning the value of the second.",null,null],[14,"terminated","","Parse two things, returning the value of the first.",null,null],[14,"many0","","Parse zero or more values using the given parser.",null,null],[14,"peek","","Parse a value without consuming it from the input data.",null,null],[14,"take_until","","Parse the part of the input up to but not including the given string. Fail to parse if the given string is not present in the input.",null,null],[14,"tag","","Parse the given string from exactly the current position in the input. You almost always want `punct!` or `keyword!` instead of this.",null,null],[14,"switch","","Pattern-match the result of a parser to select which other parser to run.",null,null],[14,"value","","Produce the given value without parsing anything. Useful as an argument to `switch!`.",null,null],[14,"delimited","","Value surrounded by a pair of delimiters.",null,null],[14,"separated_nonempty_list","","One or more values separated by some separator. Does not allow a trailing separator.",null,null],[14,"tuple","","Run a series of parsers and produce all of the results in a tuple.",null,null],[14,"alt","","Run a series of parsers, returning the result of the first one which succeeds.",null,null],[14,"do_parse","","Run a series of parsers, one after another, optionally assigning the results a name. Fail if any of the parsers fails.",null,null]],"paths":[[4,"IResult"]]};
searchIndex["typenum"] = {"doc":"This crate provides type-level numbers evaluated at compile time. It depends only on libcore.","items":[[3,"Greater","typenum","A potential output from `Cmp`, this is the type equivalent to the enum variant `core::cmp::Ordering::Greater`.",null,null],[3,"Less","","A potential output from `Cmp`, this is the type equivalent to the enum variant `core::cmp::Ordering::Less`.",null,null],[3,"Equal","","A potential output from `Cmp`, this is the type equivalent to the enum variant `core::cmp::Ordering::Equal`.",null,null],[0,"consts","","Type aliases for many constants.",null,null],[6,"True","typenum::consts","",null,null],[6,"False","","",null,null],[6,"U0","","",null,null],[6,"U1","","",null,null],[6,"P1","","",null,null],[6,"N1","","",null,null],[6,"U2","","",null,null],[6,"P2","","",null,null],[6,"N2","","",null,null],[6,"U3","","",null,null],[6,"P3","","",null,null],[6,"N3","","",null,null],[6,"U4","","",null,null],[6,"P4","","",null,null],[6,"N4","","",null,null],[6,"U5","","",null,null],[6,"P5","","",null,null],[6,"N5","","",null,null],[6,"U6","","",null,null],[6,"P6","","",null,null],[6,"N6","","",null,null],[6,"U7","","",null,null],[6,"P7","","",null,null],[6,"N7","","",null,null],[6,"U8","","",null,null],[6,"P8","","",null,null],[6,"N8","","",null,null],[6,"U9","","",null,null],[6,"P9","","",null,null],[6,"N9","","",null,null],[6,"U10","","",null,null],[6,"P10","","",null,null],[6,"N10","","",null,null],[6,"U11","","",null,null],[6,"P11","","",null,null],[6,"N11","","",null,null],[6,"U12","","",null,null],[6,"P12","","",null,null],[6,"N12","","",null,null],[6,"U13","","",null,null],[6,"P13","","",null,null],[6,"N13","","",null,null],[6,"U14","","",null,null],[6,"P14","","",null,null],[6,"N14","","",null,null],[6,"U15","","",null,null],[6,"P15","","",null,null],[6,"N15","","",null,null],[6,"U16","","",null,null],[6,"P16","","",null,null],[6,"N16","","",null,null],[6,"U17","","",null,null],[6,"P17","","",null,null],[6,"N17","","",null,null],[6,"U18","","",null,null],[6,"P18","","",null,null],[6,"N18","","",null,null],[6,"U19","","",null,null],[6,"P19","","",null,null],[6,"N19","","",null,null],[6,"U20","","",null,null],[6,"P20","","",null,null],[6,"N20","","",null,null],[6,"U21","","",null,null],[6,"P21","","",null,null],[6,"N21","","",null,null],[6,"U22","","",null,null],[6,"P22","","",null,null],[6,"N22","","",null,null],[6,"U23","","",null,null],[6,"P23","","",null,null],[6,"N23","","",null,null],[6,"U24","","",null,null],[6,"P24","","",null,null],[6,"N24","","",null,null],[6,"U25","","",null,null],[6,"P25","","",null,null],[6,"N25","","",null,null],[6,"U26","","",null,null],[6,"P26","","",null,null],[6,"N26","","",null,null],[6,"U27","","",null,null],[6,"P27","","",null,null],[6,"N27","","",null,null],[6,"U28","","",null,null],[6,"P28","","",null,null],[6,"N28","","",null,null],[6,"U29","","",null,null],[6,"P29","","",null,null],[6,"N29","","",null,null],[6,"U30","","",null,null],[6,"P30","","",null,null],[6,"N30","","",null,null],[6,"U31","","",null,null],[6,"P31","","",null,null],[6,"N31","","",null,null],[6,"U32","","",null,null],[6,"P32","","",null,null],[6,"N32","","",null,null],[6,"U33","","",null,null],[6,"P33","","",null,null],[6,"N33","","",null,null],[6,"U34","","",null,null],[6,"P34","","",null,null],[6,"N34","","",null,null],[6,"U35","","",null,null],[6,"P35","","",null,null],[6,"N35","","",null,null],[6,"U36","","",null,null],[6,"P36","","",null,null],[6,"N36","","",null,null],[6,"U37","","",null,null],[6,"P37","","",null,null],[6,"N37","","",null,null],[6,"U38","","",null,null],[6,"P38","","",null,null],[6,"N38","","",null,null],[6,"U39","","",null,null],[6,"P39","","",null,null],[6,"N39","","",null,null],[6,"U40","","",null,null],[6,"P40","","",null,null],[6,"N40","","",null,null],[6,"U41","","",null,null],[6,"P41","","",null,null],[6,"N41","","",null,null],[6,"U42","","",null,null],[6,"P42","","",null,null],[6,"N42","","",null,null],[6,"U43","","",null,null],[6,"P43","","",null,null],[6,"N43","","",null,null],[6,"U44","","",null,null],[6,"P44","","",null,null],[6,"N44","","",null,null],[6,"U45","","",null,null],[6,"P45","","",null,null],[6,"N45","","",null,null],[6,"U46","","",null,null],[6,"P46","","",null,null],[6,"N46","","",null,null],[6,"U47","","",null,null],[6,"P47","","",null,null],[6,"N47","","",null,null],[6,"U48","","",null,null],[6,"P48","","",null,null],[6,"N48","","",null,null],[6,"U49","","",null,null],[6,"P49","","",null,null],[6,"N49","","",null,null],[6,"U50","","",null,null],[6,"P50","","",null,null],[6,"N50","","",null,null],[6,"U51","","",null,null],[6,"P51","","",null,null],[6,"N51","","",null,null],[6,"U52","","",null,null],[6,"P52","","",null,null],[6,"N52","","",null,null],[6,"U53","","",null,null],[6,"P53","","",null,null],[6,"N53","","",null,null],[6,"U54","","",null,null],[6,"P54","","",null,null],[6,"N54","","",null,null],[6,"U55","","",null,null],[6,"P55","","",null,null],[6,"N55","","",null,null],[6,"U56","","",null,null],[6,"P56","","",null,null],[6,"N56","","",null,null],[6,"U57","","",null,null],[6,"P57","","",null,null],[6,"N57","","",null,null],[6,"U58","","",null,null],[6,"P58","","",null,null],[6,"N58","","",null,null],[6,"U59","","",null,null],[6,"P59","","",null,null],[6,"N59","","",null,null],[6,"U60","","",null,null],[6,"P60","","",null,null],[6,"N60","","",null,null],[6,"U61","","",null,null],[6,"P61","","",null,null],[6,"N61","","",null,null],[6,"U62","","",null,null],[6,"P62","","",null,null],[6,"N62","","",null,null],[6,"U63","","",null,null],[6,"P63","","",null,null],[6,"N63","","",null,null],[6,"U64","","",null,null],[6,"P64","","",null,null],[6,"N64","","",null,null],[6,"U65","","",null,null],[6,"P65","","",null,null],[6,"N65","","",null,null],[6,"U66","","",null,null],[6,"P66","","",null,null],[6,"N66","","",null,null],[6,"U67","","",null,null],[6,"P67","","",null,null],[6,"N67","","",null,null],[6,"U68","","",null,null],[6,"P68","","",null,null],[6,"N68","","",null,null],[6,"U69","","",null,null],[6,"P69","","",null,null],[6,"N69","","",null,null],[6,"U70","","",null,null],[6,"P70","","",null,null],[6,"N70","","",null,null],[6,"U71","","",null,null],[6,"P71","","",null,null],[6,"N71","","",null,null],[6,"U72","","",null,null],[6,"P72","","",null,null],[6,"N72","","",null,null],[6,"U73","","",null,null],[6,"P73","","",null,null],[6,"N73","","",null,null],[6,"U74","","",null,null],[6,"P74","","",null,null],[6,"N74","","",null,null],[6,"U75","","",null,null],[6,"P75","","",null,null],[6,"N75","","",null,null],[6,"U76","","",null,null],[6,"P76","","",null,null],[6,"N76","","",null,null],[6,"U77","","",null,null],[6,"P77","","",null,null],[6,"N77","","",null,null],[6,"U78","","",null,null],[6,"P78","","",null,null],[6,"N78","","",null,null],[6,"U79","","",null,null],[6,"P79","","",null,null],[6,"N79","","",null,null],[6,"U80","","",null,null],[6,"P80","","",null,null],[6,"N80","","",null,null],[6,"U81","","",null,null],[6,"P81","","",null,null],[6,"N81","","",null,null],[6,"U82","","",null,null],[6,"P82","","",null,null],[6,"N82","","",null,null],[6,"U83","","",null,null],[6,"P83","","",null,null],[6,"N83","","",null,null],[6,"U84","","",null,null],[6,"P84","","",null,null],[6,"N84","","",null,null],[6,"U85","","",null,null],[6,"P85","","",null,null],[6,"N85","","",null,null],[6,"U86","","",null,null],[6,"P86","","",null,null],[6,"N86","","",null,null],[6,"U87","","",null,null],[6,"P87","","",null,null],[6,"N87","","",null,null],[6,"U88","","",null,null],[6,"P88","","",null,null],[6,"N88","","",null,null],[6,"U89","","",null,null],[6,"P89","","",null,null],[6,"N89","","",null,null],[6,"U90","","",null,null],[6,"P90","","",null,null],[6,"N90","","",null,null],[6,"U91","","",null,null],[6,"P91","","",null,null],[6,"N91","","",null,null],[6,"U92","","",null,null],[6,"P92","","",null,null],[6,"N92","","",null,null],[6,"U93","","",null,null],[6,"P93","","",null,null],[6,"N93","","",null,null],[6,"U94","","",null,null],[6,"P94","","",null,null],[6,"N94","","",null,null],[6,"U95","","",null,null],[6,"P95","","",null,null],[6,"N95","","",null,null],[6,"U96","","",null,null],[6,"P96","","",null,null],[6,"N96","","",null,null],[6,"U97","","",null,null],[6,"P97","","",null,null],[6,"N97","","",null,null],[6,"U98","","",null,null],[6,"P98","","",null,null],[6,"N98","","",null,null],[6,"U99","","",null,null],[6,"P99","","",null,null],[6,"N99","","",null,null],[6,"U100","","",null,null],[6,"P100","","",null,null],[6,"N100","","",null,null],[6,"U101","","",null,null],[6,"P101","","",null,null],[6,"N101","","",null,null],[6,"U102","","",null,null],[6,"P102","","",null,null],[6,"N102","","",null,null],[6,"U103","","",null,null],[6,"P103","","",null,null],[6,"N103","","",null,null],[6,"U104","","",null,null],[6,"P104","","",null,null],[6,"N104","","",null,null],[6,"U105","","",null,null],[6,"P105","","",null,null],[6,"N105","","",null,null],[6,"U106","","",null,null],[6,"P106","","",null,null],[6,"N106","","",null,null],[6,"U107","","",null,null],[6,"P107","","",null,null],[6,"N107","","",null,null],[6,"U108","","",null,null],[6,"P108","","",null,null],[6,"N108","","",null,null],[6,"U109","","",null,null],[6,"P109","","",null,null],[6,"N109","","",null,null],[6,"U110","","",null,null],[6,"P110","","",null,null],[6,"N110","","",null,null],[6,"U111","","",null,null],[6,"P111","","",null,null],[6,"N111","","",null,null],[6,"U112","","",null,null],[6,"P112","","",null,null],[6,"N112","","",null,null],[6,"U113","","",null,null],[6,"P113","","",null,null],[6,"N113","","",null,null],[6,"U114","","",null,null],[6,"P114","","",null,null],[6,"N114","","",null,null],[6,"U115","","",null,null],[6,"P115","","",null,null],[6,"N115","","",null,null],[6,"U116","","",null,null],[6,"P116","","",null,null],[6,"N116","","",null,null],[6,"U117","","",null,null],[6,"P117","","",null,null],[6,"N117","","",null,null],[6,"U118","","",null,null],[6,"P118","","",null,null],[6,"N118","","",null,null],[6,"U119","","",null,null],[6,"P119","","",null,null],[6,"N119","","",null,null],[6,"U120","","",null,null],[6,"P120","","",null,null],[6,"N120","","",null,null],[6,"U121","","",null,null],[6,"P121","","",null,null],[6,"N121","","",null,null],[6,"U122","","",null,null],[6,"P122","","",null,null],[6,"N122","","",null,null],[6,"U123","","",null,null],[6,"P123","","",null,null],[6,"N123","","",null,null],[6,"U124","","",null,null],[6,"P124","","",null,null],[6,"N124","","",null,null],[6,"U125","","",null,null],[6,"P125","","",null,null],[6,"N125","","",null,null],[6,"U126","","",null,null],[6,"P126","","",null,null],[6,"N126","","",null,null],[6,"U127","","",null,null],[6,"P127","","",null,null],[6,"N127","","",null,null],[6,"U128","","",null,null],[6,"P128","","",null,null],[6,"N128","","",null,null],[6,"U129","","",null,null],[6,"P129","","",null,null],[6,"N129","","",null,null],[6,"U130","","",null,null],[6,"P130","","",null,null],[6,"N130","","",null,null],[6,"U131","","",null,null],[6,"P131","","",null,null],[6,"N131","","",null,null],[6,"U132","","",null,null],[6,"P132","","",null,null],[6,"N132","","",null,null],[6,"U133","","",null,null],[6,"P133","","",null,null],[6,"N133","","",null,null],[6,"U134","","",null,null],[6,"P134","","",null,null],[6,"N134","","",null,null],[6,"U135","","",null,null],[6,"P135","","",null,null],[6,"N135","","",null,null],[6,"U136","","",null,null],[6,"P136","","",null,null],[6,"N136","","",null,null],[6,"U137","","",null,null],[6,"P137","","",null,null],[6,"N137","","",null,null],[6,"U138","","",null,null],[6,"P138","","",null,null],[6,"N138","","",null,null],[6,"U139","","",null,null],[6,"P139","","",null,null],[6,"N139","","",null,null],[6,"U140","","",null,null],[6,"P140","","",null,null],[6,"N140","","",null,null],[6,"U141","","",null,null],[6,"P141","","",null,null],[6,"N141","","",null,null],[6,"U142","","",null,null],[6,"P142","","",null,null],[6,"N142","","",null,null],[6,"U143","","",null,null],[6,"P143","","",null,null],[6,"N143","","",null,null],[6,"U144","","",null,null],[6,"P144","","",null,null],[6,"N144","","",null,null],[6,"U145","","",null,null],[6,"P145","","",null,null],[6,"N145","","",null,null],[6,"U146","","",null,null],[6,"P146","","",null,null],[6,"N146","","",null,null],[6,"U147","","",null,null],[6,"P147","","",null,null],[6,"N147","","",null,null],[6,"U148","","",null,null],[6,"P148","","",null,null],[6,"N148","","",null,null],[6,"U149","","",null,null],[6,"P149","","",null,null],[6,"N149","","",null,null],[6,"U150","","",null,null],[6,"P150","","",null,null],[6,"N150","","",null,null],[6,"U151","","",null,null],[6,"P151","","",null,null],[6,"N151","","",null,null],[6,"U152","","",null,null],[6,"P152","","",null,null],[6,"N152","","",null,null],[6,"U153","","",null,null],[6,"P153","","",null,null],[6,"N153","","",null,null],[6,"U154","","",null,null],[6,"P154","","",null,null],[6,"N154","","",null,null],[6,"U155","","",null,null],[6,"P155","","",null,null],[6,"N155","","",null,null],[6,"U156","","",null,null],[6,"P156","","",null,null],[6,"N156","","",null,null],[6,"U157","","",null,null],[6,"P157","","",null,null],[6,"N157","","",null,null],[6,"U158","","",null,null],[6,"P158","","",null,null],[6,"N158","","",null,null],[6,"U159","","",null,null],[6,"P159","","",null,null],[6,"N159","","",null,null],[6,"U160","","",null,null],[6,"P160","","",null,null],[6,"N160","","",null,null],[6,"U161","","",null,null],[6,"P161","","",null,null],[6,"N161","","",null,null],[6,"U162","","",null,null],[6,"P162","","",null,null],[6,"N162","","",null,null],[6,"U163","","",null,null],[6,"P163","","",null,null],[6,"N163","","",null,null],[6,"U164","","",null,null],[6,"P164","","",null,null],[6,"N164","","",null,null],[6,"U165","","",null,null],[6,"P165","","",null,null],[6,"N165","","",null,null],[6,"U166","","",null,null],[6,"P166","","",null,null],[6,"N166","","",null,null],[6,"U167","","",null,null],[6,"P167","","",null,null],[6,"N167","","",null,null],[6,"U168","","",null,null],[6,"P168","","",null,null],[6,"N168","","",null,null],[6,"U169","","",null,null],[6,"P169","","",null,null],[6,"N169","","",null,null],[6,"U170","","",null,null],[6,"P170","","",null,null],[6,"N170","","",null,null],[6,"U171","","",null,null],[6,"P171","","",null,null],[6,"N171","","",null,null],[6,"U172","","",null,null],[6,"P172","","",null,null],[6,"N172","","",null,null],[6,"U173","","",null,null],[6,"P173","","",null,null],[6,"N173","","",null,null],[6,"U174","","",null,null],[6,"P174","","",null,null],[6,"N174","","",null,null],[6,"U175","","",null,null],[6,"P175","","",null,null],[6,"N175","","",null,null],[6,"U176","","",null,null],[6,"P176","","",null,null],[6,"N176","","",null,null],[6,"U177","","",null,null],[6,"P177","","",null,null],[6,"N177","","",null,null],[6,"U178","","",null,null],[6,"P178","","",null,null],[6,"N178","","",null,null],[6,"U179","","",null,null],[6,"P179","","",null,null],[6,"N179","","",null,null],[6,"U180","","",null,null],[6,"P180","","",null,null],[6,"N180","","",null,null],[6,"U181","","",null,null],[6,"P181","","",null,null],[6,"N181","","",null,null],[6,"U182","","",null,null],[6,"P182","","",null,null],[6,"N182","","",null,null],[6,"U183","","",null,null],[6,"P183","","",null,null],[6,"N183","","",null,null],[6,"U184","","",null,null],[6,"P184","","",null,null],[6,"N184","","",null,null],[6,"U185","","",null,null],[6,"P185","","",null,null],[6,"N185","","",null,null],[6,"U186","","",null,null],[6,"P186","","",null,null],[6,"N186","","",null,null],[6,"U187","","",null,null],[6,"P187","","",null,null],[6,"N187","","",null,null],[6,"U188","","",null,null],[6,"P188","","",null,null],[6,"N188","","",null,null],[6,"U189","","",null,null],[6,"P189","","",null,null],[6,"N189","","",null,null],[6,"U190","","",null,null],[6,"P190","","",null,null],[6,"N190","","",null,null],[6,"U191","","",null,null],[6,"P191","","",null,null],[6,"N191","","",null,null],[6,"U192","","",null,null],[6,"P192","","",null,null],[6,"N192","","",null,null],[6,"U193","","",null,null],[6,"P193","","",null,null],[6,"N193","","",null,null],[6,"U194","","",null,null],[6,"P194","","",null,null],[6,"N194","","",null,null],[6,"U195","","",null,null],[6,"P195","","",null,null],[6,"N195","","",null,null],[6,"U196","","",null,null],[6,"P196","","",null,null],[6,"N196","","",null,null],[6,"U197","","",null,null],[6,"P197","","",null,null],[6,"N197","","",null,null],[6,"U198","","",null,null],[6,"P198","","",null,null],[6,"N198","","",null,null],[6,"U199","","",null,null],[6,"P199","","",null,null],[6,"N199","","",null,null],[6,"U200","","",null,null],[6,"P200","","",null,null],[6,"N200","","",null,null],[6,"U201","","",null,null],[6,"P201","","",null,null],[6,"N201","","",null,null],[6,"U202","","",null,null],[6,"P202","","",null,null],[6,"N202","","",null,null],[6,"U203","","",null,null],[6,"P203","","",null,null],[6,"N203","","",null,null],[6,"U204","","",null,null],[6,"P204","","",null,null],[6,"N204","","",null,null],[6,"U205","","",null,null],[6,"P205","","",null,null],[6,"N205","","",null,null],[6,"U206","","",null,null],[6,"P206","","",null,null],[6,"N206","","",null,null],[6,"U207","","",null,null],[6,"P207","","",null,null],[6,"N207","","",null,null],[6,"U208","","",null,null],[6,"P208","","",null,null],[6,"N208","","",null,null],[6,"U209","","",null,null],[6,"P209","","",null,null],[6,"N209","","",null,null],[6,"U210","","",null,null],[6,"P210","","",null,null],[6,"N210","","",null,null],[6,"U211","","",null,null],[6,"P211","","",null,null],[6,"N211","","",null,null],[6,"U212","","",null,null],[6,"P212","","",null,null],[6,"N212","","",null,null],[6,"U213","","",null,null],[6,"P213","","",null,null],[6,"N213","","",null,null],[6,"U214","","",null,null],[6,"P214","","",null,null],[6,"N214","","",null,null],[6,"U215","","",null,null],[6,"P215","","",null,null],[6,"N215","","",null,null],[6,"U216","","",null,null],[6,"P216","","",null,null],[6,"N216","","",null,null],[6,"U217","","",null,null],[6,"P217","","",null,null],[6,"N217","","",null,null],[6,"U218","","",null,null],[6,"P218","","",null,null],[6,"N218","","",null,null],[6,"U219","","",null,null],[6,"P219","","",null,null],[6,"N219","","",null,null],[6,"U220","","",null,null],[6,"P220","","",null,null],[6,"N220","","",null,null],[6,"U221","","",null,null],[6,"P221","","",null,null],[6,"N221","","",null,null],[6,"U222","","",null,null],[6,"P222","","",null,null],[6,"N222","","",null,null],[6,"U223","","",null,null],[6,"P223","","",null,null],[6,"N223","","",null,null],[6,"U224","","",null,null],[6,"P224","","",null,null],[6,"N224","","",null,null],[6,"U225","","",null,null],[6,"P225","","",null,null],[6,"N225","","",null,null],[6,"U226","","",null,null],[6,"P226","","",null,null],[6,"N226","","",null,null],[6,"U227","","",null,null],[6,"P227","","",null,null],[6,"N227","","",null,null],[6,"U228","","",null,null],[6,"P228","","",null,null],[6,"N228","","",null,null],[6,"U229","","",null,null],[6,"P229","","",null,null],[6,"N229","","",null,null],[6,"U230","","",null,null],[6,"P230","","",null,null],[6,"N230","","",null,null],[6,"U231","","",null,null],[6,"P231","","",null,null],[6,"N231","","",null,null],[6,"U232","","",null,null],[6,"P232","","",null,null],[6,"N232","","",null,null],[6,"U233","","",null,null],[6,"P233","","",null,null],[6,"N233","","",null,null],[6,"U234","","",null,null],[6,"P234","","",null,null],[6,"N234","","",null,null],[6,"U235","","",null,null],[6,"P235","","",null,null],[6,"N235","","",null,null],[6,"U236","","",null,null],[6,"P236","","",null,null],[6,"N236","","",null,null],[6,"U237","","",null,null],[6,"P237","","",null,null],[6,"N237","","",null,null],[6,"U238","","",null,null],[6,"P238","","",null,null],[6,"N238","","",null,null],[6,"U239","","",null,null],[6,"P239","","",null,null],[6,"N239","","",null,null],[6,"U240","","",null,null],[6,"P240","","",null,null],[6,"N240","","",null,null],[6,"U241","","",null,null],[6,"P241","","",null,null],[6,"N241","","",null,null],[6,"U242","","",null,null],[6,"P242","","",null,null],[6,"N242","","",null,null],[6,"U243","","",null,null],[6,"P243","","",null,null],[6,"N243","","",null,null],[6,"U244","","",null,null],[6,"P244","","",null,null],[6,"N244","","",null,null],[6,"U245","","",null,null],[6,"P245","","",null,null],[6,"N245","","",null,null],[6,"U246","","",null,null],[6,"P246","","",null,null],[6,"N246","","",null,null],[6,"U247","","",null,null],[6,"P247","","",null,null],[6,"N247","","",null,null],[6,"U248","","",null,null],[6,"P248","","",null,null],[6,"N248","","",null,null],[6,"U249","","",null,null],[6,"P249","","",null,null],[6,"N249","","",null,null],[6,"U250","","",null,null],[6,"P250","","",null,null],[6,"N250","","",null,null],[6,"U251","","",null,null],[6,"P251","","",null,null],[6,"N251","","",null,null],[6,"U252","","",null,null],[6,"P252","","",null,null],[6,"N252","","",null,null],[6,"U253","","",null,null],[6,"P253","","",null,null],[6,"N253","","",null,null],[6,"U254","","",null,null],[6,"P254","","",null,null],[6,"N254","","",null,null],[6,"U255","","",null,null],[6,"P255","","",null,null],[6,"N255","","",null,null],[6,"U256","","",null,null],[6,"P256","","",null,null],[6,"N256","","",null,null],[6,"U257","","",null,null],[6,"P257","","",null,null],[6,"N257","","",null,null],[6,"U258","","",null,null],[6,"P258","","",null,null],[6,"N258","","",null,null],[6,"U259","","",null,null],[6,"P259","","",null,null],[6,"N259","","",null,null],[6,"U260","","",null,null],[6,"P260","","",null,null],[6,"N260","","",null,null],[6,"U261","","",null,null],[6,"P261","","",null,null],[6,"N261","","",null,null],[6,"U262","","",null,null],[6,"P262","","",null,null],[6,"N262","","",null,null],[6,"U263","","",null,null],[6,"P263","","",null,null],[6,"N263","","",null,null],[6,"U264","","",null,null],[6,"P264","","",null,null],[6,"N264","","",null,null],[6,"U265","","",null,null],[6,"P265","","",null,null],[6,"N265","","",null,null],[6,"U266","","",null,null],[6,"P266","","",null,null],[6,"N266","","",null,null],[6,"U267","","",null,null],[6,"P267","","",null,null],[6,"N267","","",null,null],[6,"U268","","",null,null],[6,"P268","","",null,null],[6,"N268","","",null,null],[6,"U269","","",null,null],[6,"P269","","",null,null],[6,"N269","","",null,null],[6,"U270","","",null,null],[6,"P270","","",null,null],[6,"N270","","",null,null],[6,"U271","","",null,null],[6,"P271","","",null,null],[6,"N271","","",null,null],[6,"U272","","",null,null],[6,"P272","","",null,null],[6,"N272","","",null,null],[6,"U273","","",null,null],[6,"P273","","",null,null],[6,"N273","","",null,null],[6,"U274","","",null,null],[6,"P274","","",null,null],[6,"N274","","",null,null],[6,"U275","","",null,null],[6,"P275","","",null,null],[6,"N275","","",null,null],[6,"U276","","",null,null],[6,"P276","","",null,null],[6,"N276","","",null,null],[6,"U277","","",null,null],[6,"P277","","",null,null],[6,"N277","","",null,null],[6,"U278","","",null,null],[6,"P278","","",null,null],[6,"N278","","",null,null],[6,"U279","","",null,null],[6,"P279","","",null,null],[6,"N279","","",null,null],[6,"U280","","",null,null],[6,"P280","","",null,null],[6,"N280","","",null,null],[6,"U281","","",null,null],[6,"P281","","",null,null],[6,"N281","","",null,null],[6,"U282","","",null,null],[6,"P282","","",null,null],[6,"N282","","",null,null],[6,"U283","","",null,null],[6,"P283","","",null,null],[6,"N283","","",null,null],[6,"U284","","",null,null],[6,"P284","","",null,null],[6,"N284","","",null,null],[6,"U285","","",null,null],[6,"P285","","",null,null],[6,"N285","","",null,null],[6,"U286","","",null,null],[6,"P286","","",null,null],[6,"N286","","",null,null],[6,"U287","","",null,null],[6,"P287","","",null,null],[6,"N287","","",null,null],[6,"U288","","",null,null],[6,"P288","","",null,null],[6,"N288","","",null,null],[6,"U289","","",null,null],[6,"P289","","",null,null],[6,"N289","","",null,null],[6,"U290","","",null,null],[6,"P290","","",null,null],[6,"N290","","",null,null],[6,"U291","","",null,null],[6,"P291","","",null,null],[6,"N291","","",null,null],[6,"U292","","",null,null],[6,"P292","","",null,null],[6,"N292","","",null,null],[6,"U293","","",null,null],[6,"P293","","",null,null],[6,"N293","","",null,null],[6,"U294","","",null,null],[6,"P294","","",null,null],[6,"N294","","",null,null],[6,"U295","","",null,null],[6,"P295","","",null,null],[6,"N295","","",null,null],[6,"U296","","",null,null],[6,"P296","","",null,null],[6,"N296","","",null,null],[6,"U297","","",null,null],[6,"P297","","",null,null],[6,"N297","","",null,null],[6,"U298","","",null,null],[6,"P298","","",null,null],[6,"N298","","",null,null],[6,"U299","","",null,null],[6,"P299","","",null,null],[6,"N299","","",null,null],[6,"U300","","",null,null],[6,"P300","","",null,null],[6,"N300","","",null,null],[6,"U301","","",null,null],[6,"P301","","",null,null],[6,"N301","","",null,null],[6,"U302","","",null,null],[6,"P302","","",null,null],[6,"N302","","",null,null],[6,"U303","","",null,null],[6,"P303","","",null,null],[6,"N303","","",null,null],[6,"U304","","",null,null],[6,"P304","","",null,null],[6,"N304","","",null,null],[6,"U305","","",null,null],[6,"P305","","",null,null],[6,"N305","","",null,null],[6,"U306","","",null,null],[6,"P306","","",null,null],[6,"N306","","",null,null],[6,"U307","","",null,null],[6,"P307","","",null,null],[6,"N307","","",null,null],[6,"U308","","",null,null],[6,"P308","","",null,null],[6,"N308","","",null,null],[6,"U309","","",null,null],[6,"P309","","",null,null],[6,"N309","","",null,null],[6,"U310","","",null,null],[6,"P310","","",null,null],[6,"N310","","",null,null],[6,"U311","","",null,null],[6,"P311","","",null,null],[6,"N311","","",null,null],[6,"U312","","",null,null],[6,"P312","","",null,null],[6,"N312","","",null,null],[6,"U313","","",null,null],[6,"P313","","",null,null],[6,"N313","","",null,null],[6,"U314","","",null,null],[6,"P314","","",null,null],[6,"N314","","",null,null],[6,"U315","","",null,null],[6,"P315","","",null,null],[6,"N315","","",null,null],[6,"U316","","",null,null],[6,"P316","","",null,null],[6,"N316","","",null,null],[6,"U317","","",null,null],[6,"P317","","",null,null],[6,"N317","","",null,null],[6,"U318","","",null,null],[6,"P318","","",null,null],[6,"N318","","",null,null],[6,"U319","","",null,null],[6,"P319","","",null,null],[6,"N319","","",null,null],[6,"U320","","",null,null],[6,"P320","","",null,null],[6,"N320","","",null,null],[6,"U321","","",null,null],[6,"P321","","",null,null],[6,"N321","","",null,null],[6,"U322","","",null,null],[6,"P322","","",null,null],[6,"N322","","",null,null],[6,"U323","","",null,null],[6,"P323","","",null,null],[6,"N323","","",null,null],[6,"U324","","",null,null],[6,"P324","","",null,null],[6,"N324","","",null,null],[6,"U325","","",null,null],[6,"P325","","",null,null],[6,"N325","","",null,null],[6,"U326","","",null,null],[6,"P326","","",null,null],[6,"N326","","",null,null],[6,"U327","","",null,null],[6,"P327","","",null,null],[6,"N327","","",null,null],[6,"U328","","",null,null],[6,"P328","","",null,null],[6,"N328","","",null,null],[6,"U329","","",null,null],[6,"P329","","",null,null],[6,"N329","","",null,null],[6,"U330","","",null,null],[6,"P330","","",null,null],[6,"N330","","",null,null],[6,"U331","","",null,null],[6,"P331","","",null,null],[6,"N331","","",null,null],[6,"U332","","",null,null],[6,"P332","","",null,null],[6,"N332","","",null,null],[6,"U333","","",null,null],[6,"P333","","",null,null],[6,"N333","","",null,null],[6,"U334","","",null,null],[6,"P334","","",null,null],[6,"N334","","",null,null],[6,"U335","","",null,null],[6,"P335","","",null,null],[6,"N335","","",null,null],[6,"U336","","",null,null],[6,"P336","","",null,null],[6,"N336","","",null,null],[6,"U337","","",null,null],[6,"P337","","",null,null],[6,"N337","","",null,null],[6,"U338","","",null,null],[6,"P338","","",null,null],[6,"N338","","",null,null],[6,"U339","","",null,null],[6,"P339","","",null,null],[6,"N339","","",null,null],[6,"U340","","",null,null],[6,"P340","","",null,null],[6,"N340","","",null,null],[6,"U341","","",null,null],[6,"P341","","",null,null],[6,"N341","","",null,null],[6,"U342","","",null,null],[6,"P342","","",null,null],[6,"N342","","",null,null],[6,"U343","","",null,null],[6,"P343","","",null,null],[6,"N343","","",null,null],[6,"U344","","",null,null],[6,"P344","","",null,null],[6,"N344","","",null,null],[6,"U345","","",null,null],[6,"P345","","",null,null],[6,"N345","","",null,null],[6,"U346","","",null,null],[6,"P346","","",null,null],[6,"N346","","",null,null],[6,"U347","","",null,null],[6,"P347","","",null,null],[6,"N347","","",null,null],[6,"U348","","",null,null],[6,"P348","","",null,null],[6,"N348","","",null,null],[6,"U349","","",null,null],[6,"P349","","",null,null],[6,"N349","","",null,null],[6,"U350","","",null,null],[6,"P350","","",null,null],[6,"N350","","",null,null],[6,"U351","","",null,null],[6,"P351","","",null,null],[6,"N351","","",null,null],[6,"U352","","",null,null],[6,"P352","","",null,null],[6,"N352","","",null,null],[6,"U353","","",null,null],[6,"P353","","",null,null],[6,"N353","","",null,null],[6,"U354","","",null,null],[6,"P354","","",null,null],[6,"N354","","",null,null],[6,"U355","","",null,null],[6,"P355","","",null,null],[6,"N355","","",null,null],[6,"U356","","",null,null],[6,"P356","","",null,null],[6,"N356","","",null,null],[6,"U357","","",null,null],[6,"P357","","",null,null],[6,"N357","","",null,null],[6,"U358","","",null,null],[6,"P358","","",null,null],[6,"N358","","",null,null],[6,"U359","","",null,null],[6,"P359","","",null,null],[6,"N359","","",null,null],[6,"U360","","",null,null],[6,"P360","","",null,null],[6,"N360","","",null,null],[6,"U361","","",null,null],[6,"P361","","",null,null],[6,"N361","","",null,null],[6,"U362","","",null,null],[6,"P362","","",null,null],[6,"N362","","",null,null],[6,"U363","","",null,null],[6,"P363","","",null,null],[6,"N363","","",null,null],[6,"U364","","",null,null],[6,"P364","","",null,null],[6,"N364","","",null,null],[6,"U365","","",null,null],[6,"P365","","",null,null],[6,"N365","","",null,null],[6,"U366","","",null,null],[6,"P366","","",null,null],[6,"N366","","",null,null],[6,"U367","","",null,null],[6,"P367","","",null,null],[6,"N367","","",null,null],[6,"U368","","",null,null],[6,"P368","","",null,null],[6,"N368","","",null,null],[6,"U369","","",null,null],[6,"P369","","",null,null],[6,"N369","","",null,null],[6,"U370","","",null,null],[6,"P370","","",null,null],[6,"N370","","",null,null],[6,"U371","","",null,null],[6,"P371","","",null,null],[6,"N371","","",null,null],[6,"U372","","",null,null],[6,"P372","","",null,null],[6,"N372","","",null,null],[6,"U373","","",null,null],[6,"P373","","",null,null],[6,"N373","","",null,null],[6,"U374","","",null,null],[6,"P374","","",null,null],[6,"N374","","",null,null],[6,"U375","","",null,null],[6,"P375","","",null,null],[6,"N375","","",null,null],[6,"U376","","",null,null],[6,"P376","","",null,null],[6,"N376","","",null,null],[6,"U377","","",null,null],[6,"P377","","",null,null],[6,"N377","","",null,null],[6,"U378","","",null,null],[6,"P378","","",null,null],[6,"N378","","",null,null],[6,"U379","","",null,null],[6,"P379","","",null,null],[6,"N379","","",null,null],[6,"U380","","",null,null],[6,"P380","","",null,null],[6,"N380","","",null,null],[6,"U381","","",null,null],[6,"P381","","",null,null],[6,"N381","","",null,null],[6,"U382","","",null,null],[6,"P382","","",null,null],[6,"N382","","",null,null],[6,"U383","","",null,null],[6,"P383","","",null,null],[6,"N383","","",null,null],[6,"U384","","",null,null],[6,"P384","","",null,null],[6,"N384","","",null,null],[6,"U385","","",null,null],[6,"P385","","",null,null],[6,"N385","","",null,null],[6,"U386","","",null,null],[6,"P386","","",null,null],[6,"N386","","",null,null],[6,"U387","","",null,null],[6,"P387","","",null,null],[6,"N387","","",null,null],[6,"U388","","",null,null],[6,"P388","","",null,null],[6,"N388","","",null,null],[6,"U389","","",null,null],[6,"P389","","",null,null],[6,"N389","","",null,null],[6,"U390","","",null,null],[6,"P390","","",null,null],[6,"N390","","",null,null],[6,"U391","","",null,null],[6,"P391","","",null,null],[6,"N391","","",null,null],[6,"U392","","",null,null],[6,"P392","","",null,null],[6,"N392","","",null,null],[6,"U393","","",null,null],[6,"P393","","",null,null],[6,"N393","","",null,null],[6,"U394","","",null,null],[6,"P394","","",null,null],[6,"N394","","",null,null],[6,"U395","","",null,null],[6,"P395","","",null,null],[6,"N395","","",null,null],[6,"U396","","",null,null],[6,"P396","","",null,null],[6,"N396","","",null,null],[6,"U397","","",null,null],[6,"P397","","",null,null],[6,"N397","","",null,null],[6,"U398","","",null,null],[6,"P398","","",null,null],[6,"N398","","",null,null],[6,"U399","","",null,null],[6,"P399","","",null,null],[6,"N399","","",null,null],[6,"U400","","",null,null],[6,"P400","","",null,null],[6,"N400","","",null,null],[6,"U401","","",null,null],[6,"P401","","",null,null],[6,"N401","","",null,null],[6,"U402","","",null,null],[6,"P402","","",null,null],[6,"N402","","",null,null],[6,"U403","","",null,null],[6,"P403","","",null,null],[6,"N403","","",null,null],[6,"U404","","",null,null],[6,"P404","","",null,null],[6,"N404","","",null,null],[6,"U405","","",null,null],[6,"P405","","",null,null],[6,"N405","","",null,null],[6,"U406","","",null,null],[6,"P406","","",null,null],[6,"N406","","",null,null],[6,"U407","","",null,null],[6,"P407","","",null,null],[6,"N407","","",null,null],[6,"U408","","",null,null],[6,"P408","","",null,null],[6,"N408","","",null,null],[6,"U409","","",null,null],[6,"P409","","",null,null],[6,"N409","","",null,null],[6,"U410","","",null,null],[6,"P410","","",null,null],[6,"N410","","",null,null],[6,"U411","","",null,null],[6,"P411","","",null,null],[6,"N411","","",null,null],[6,"U412","","",null,null],[6,"P412","","",null,null],[6,"N412","","",null,null],[6,"U413","","",null,null],[6,"P413","","",null,null],[6,"N413","","",null,null],[6,"U414","","",null,null],[6,"P414","","",null,null],[6,"N414","","",null,null],[6,"U415","","",null,null],[6,"P415","","",null,null],[6,"N415","","",null,null],[6,"U416","","",null,null],[6,"P416","","",null,null],[6,"N416","","",null,null],[6,"U417","","",null,null],[6,"P417","","",null,null],[6,"N417","","",null,null],[6,"U418","","",null,null],[6,"P418","","",null,null],[6,"N418","","",null,null],[6,"U419","","",null,null],[6,"P419","","",null,null],[6,"N419","","",null,null],[6,"U420","","",null,null],[6,"P420","","",null,null],[6,"N420","","",null,null],[6,"U421","","",null,null],[6,"P421","","",null,null],[6,"N421","","",null,null],[6,"U422","","",null,null],[6,"P422","","",null,null],[6,"N422","","",null,null],[6,"U423","","",null,null],[6,"P423","","",null,null],[6,"N423","","",null,null],[6,"U424","","",null,null],[6,"P424","","",null,null],[6,"N424","","",null,null],[6,"U425","","",null,null],[6,"P425","","",null,null],[6,"N425","","",null,null],[6,"U426","","",null,null],[6,"P426","","",null,null],[6,"N426","","",null,null],[6,"U427","","",null,null],[6,"P427","","",null,null],[6,"N427","","",null,null],[6,"U428","","",null,null],[6,"P428","","",null,null],[6,"N428","","",null,null],[6,"U429","","",null,null],[6,"P429","","",null,null],[6,"N429","","",null,null],[6,"U430","","",null,null],[6,"P430","","",null,null],[6,"N430","","",null,null],[6,"U431","","",null,null],[6,"P431","","",null,null],[6,"N431","","",null,null],[6,"U432","","",null,null],[6,"P432","","",null,null],[6,"N432","","",null,null],[6,"U433","","",null,null],[6,"P433","","",null,null],[6,"N433","","",null,null],[6,"U434","","",null,null],[6,"P434","","",null,null],[6,"N434","","",null,null],[6,"U435","","",null,null],[6,"P435","","",null,null],[6,"N435","","",null,null],[6,"U436","","",null,null],[6,"P436","","",null,null],[6,"N436","","",null,null],[6,"U437","","",null,null],[6,"P437","","",null,null],[6,"N437","","",null,null],[6,"U438","","",null,null],[6,"P438","","",null,null],[6,"N438","","",null,null],[6,"U439","","",null,null],[6,"P439","","",null,null],[6,"N439","","",null,null],[6,"U440","","",null,null],[6,"P440","","",null,null],[6,"N440","","",null,null],[6,"U441","","",null,null],[6,"P441","","",null,null],[6,"N441","","",null,null],[6,"U442","","",null,null],[6,"P442","","",null,null],[6,"N442","","",null,null],[6,"U443","","",null,null],[6,"P443","","",null,null],[6,"N443","","",null,null],[6,"U444","","",null,null],[6,"P444","","",null,null],[6,"N444","","",null,null],[6,"U445","","",null,null],[6,"P445","","",null,null],[6,"N445","","",null,null],[6,"U446","","",null,null],[6,"P446","","",null,null],[6,"N446","","",null,null],[6,"U447","","",null,null],[6,"P447","","",null,null],[6,"N447","","",null,null],[6,"U448","","",null,null],[6,"P448","","",null,null],[6,"N448","","",null,null],[6,"U449","","",null,null],[6,"P449","","",null,null],[6,"N449","","",null,null],[6,"U450","","",null,null],[6,"P450","","",null,null],[6,"N450","","",null,null],[6,"U451","","",null,null],[6,"P451","","",null,null],[6,"N451","","",null,null],[6,"U452","","",null,null],[6,"P452","","",null,null],[6,"N452","","",null,null],[6,"U453","","",null,null],[6,"P453","","",null,null],[6,"N453","","",null,null],[6,"U454","","",null,null],[6,"P454","","",null,null],[6,"N454","","",null,null],[6,"U455","","",null,null],[6,"P455","","",null,null],[6,"N455","","",null,null],[6,"U456","","",null,null],[6,"P456","","",null,null],[6,"N456","","",null,null],[6,"U457","","",null,null],[6,"P457","","",null,null],[6,"N457","","",null,null],[6,"U458","","",null,null],[6,"P458","","",null,null],[6,"N458","","",null,null],[6,"U459","","",null,null],[6,"P459","","",null,null],[6,"N459","","",null,null],[6,"U460","","",null,null],[6,"P460","","",null,null],[6,"N460","","",null,null],[6,"U461","","",null,null],[6,"P461","","",null,null],[6,"N461","","",null,null],[6,"U462","","",null,null],[6,"P462","","",null,null],[6,"N462","","",null,null],[6,"U463","","",null,null],[6,"P463","","",null,null],[6,"N463","","",null,null],[6,"U464","","",null,null],[6,"P464","","",null,null],[6,"N464","","",null,null],[6,"U465","","",null,null],[6,"P465","","",null,null],[6,"N465","","",null,null],[6,"U466","","",null,null],[6,"P466","","",null,null],[6,"N466","","",null,null],[6,"U467","","",null,null],[6,"P467","","",null,null],[6,"N467","","",null,null],[6,"U468","","",null,null],[6,"P468","","",null,null],[6,"N468","","",null,null],[6,"U469","","",null,null],[6,"P469","","",null,null],[6,"N469","","",null,null],[6,"U470","","",null,null],[6,"P470","","",null,null],[6,"N470","","",null,null],[6,"U471","","",null,null],[6,"P471","","",null,null],[6,"N471","","",null,null],[6,"U472","","",null,null],[6,"P472","","",null,null],[6,"N472","","",null,null],[6,"U473","","",null,null],[6,"P473","","",null,null],[6,"N473","","",null,null],[6,"U474","","",null,null],[6,"P474","","",null,null],[6,"N474","","",null,null],[6,"U475","","",null,null],[6,"P475","","",null,null],[6,"N475","","",null,null],[6,"U476","","",null,null],[6,"P476","","",null,null],[6,"N476","","",null,null],[6,"U477","","",null,null],[6,"P477","","",null,null],[6,"N477","","",null,null],[6,"U478","","",null,null],[6,"P478","","",null,null],[6,"N478","","",null,null],[6,"U479","","",null,null],[6,"P479","","",null,null],[6,"N479","","",null,null],[6,"U480","","",null,null],[6,"P480","","",null,null],[6,"N480","","",null,null],[6,"U481","","",null,null],[6,"P481","","",null,null],[6,"N481","","",null,null],[6,"U482","","",null,null],[6,"P482","","",null,null],[6,"N482","","",null,null],[6,"U483","","",null,null],[6,"P483","","",null,null],[6,"N483","","",null,null],[6,"U484","","",null,null],[6,"P484","","",null,null],[6,"N484","","",null,null],[6,"U485","","",null,null],[6,"P485","","",null,null],[6,"N485","","",null,null],[6,"U486","","",null,null],[6,"P486","","",null,null],[6,"N486","","",null,null],[6,"U487","","",null,null],[6,"P487","","",null,null],[6,"N487","","",null,null],[6,"U488","","",null,null],[6,"P488","","",null,null],[6,"N488","","",null,null],[6,"U489","","",null,null],[6,"P489","","",null,null],[6,"N489","","",null,null],[6,"U490","","",null,null],[6,"P490","","",null,null],[6,"N490","","",null,null],[6,"U491","","",null,null],[6,"P491","","",null,null],[6,"N491","","",null,null],[6,"U492","","",null,null],[6,"P492","","",null,null],[6,"N492","","",null,null],[6,"U493","","",null,null],[6,"P493","","",null,null],[6,"N493","","",null,null],[6,"U494","","",null,null],[6,"P494","","",null,null],[6,"N494","","",null,null],[6,"U495","","",null,null],[6,"P495","","",null,null],[6,"N495","","",null,null],[6,"U496","","",null,null],[6,"P496","","",null,null],[6,"N496","","",null,null],[6,"U497","","",null,null],[6,"P497","","",null,null],[6,"N497","","",null,null],[6,"U498","","",null,null],[6,"P498","","",null,null],[6,"N498","","",null,null],[6,"U499","","",null,null],[6,"P499","","",null,null],[6,"N499","","",null,null],[6,"U500","","",null,null],[6,"P500","","",null,null],[6,"N500","","",null,null],[6,"U501","","",null,null],[6,"P501","","",null,null],[6,"N501","","",null,null],[6,"U502","","",null,null],[6,"P502","","",null,null],[6,"N502","","",null,null],[6,"U503","","",null,null],[6,"P503","","",null,null],[6,"N503","","",null,null],[6,"U504","","",null,null],[6,"P504","","",null,null],[6,"N504","","",null,null],[6,"U505","","",null,null],[6,"P505","","",null,null],[6,"N505","","",null,null],[6,"U506","","",null,null],[6,"P506","","",null,null],[6,"N506","","",null,null],[6,"U507","","",null,null],[6,"P507","","",null,null],[6,"N507","","",null,null],[6,"U508","","",null,null],[6,"P508","","",null,null],[6,"N508","","",null,null],[6,"U509","","",null,null],[6,"P509","","",null,null],[6,"N509","","",null,null],[6,"U510","","",null,null],[6,"P510","","",null,null],[6,"N510","","",null,null],[6,"U511","","",null,null],[6,"P511","","",null,null],[6,"N511","","",null,null],[6,"U512","","",null,null],[6,"P512","","",null,null],[6,"N512","","",null,null],[6,"U513","","",null,null],[6,"P513","","",null,null],[6,"N513","","",null,null],[6,"U514","","",null,null],[6,"P514","","",null,null],[6,"N514","","",null,null],[6,"U515","","",null,null],[6,"P515","","",null,null],[6,"N515","","",null,null],[6,"U516","","",null,null],[6,"P516","","",null,null],[6,"N516","","",null,null],[6,"U517","","",null,null],[6,"P517","","",null,null],[6,"N517","","",null,null],[6,"U518","","",null,null],[6,"P518","","",null,null],[6,"N518","","",null,null],[6,"U519","","",null,null],[6,"P519","","",null,null],[6,"N519","","",null,null],[6,"U520","","",null,null],[6,"P520","","",null,null],[6,"N520","","",null,null],[6,"U521","","",null,null],[6,"P521","","",null,null],[6,"N521","","",null,null],[6,"U522","","",null,null],[6,"P522","","",null,null],[6,"N522","","",null,null],[6,"U523","","",null,null],[6,"P523","","",null,null],[6,"N523","","",null,null],[6,"U524","","",null,null],[6,"P524","","",null,null],[6,"N524","","",null,null],[6,"U525","","",null,null],[6,"P525","","",null,null],[6,"N525","","",null,null],[6,"U526","","",null,null],[6,"P526","","",null,null],[6,"N526","","",null,null],[6,"U527","","",null,null],[6,"P527","","",null,null],[6,"N527","","",null,null],[6,"U528","","",null,null],[6,"P528","","",null,null],[6,"N528","","",null,null],[6,"U529","","",null,null],[6,"P529","","",null,null],[6,"N529","","",null,null],[6,"U530","","",null,null],[6,"P530","","",null,null],[6,"N530","","",null,null],[6,"U531","","",null,null],[6,"P531","","",null,null],[6,"N531","","",null,null],[6,"U532","","",null,null],[6,"P532","","",null,null],[6,"N532","","",null,null],[6,"U533","","",null,null],[6,"P533","","",null,null],[6,"N533","","",null,null],[6,"U534","","",null,null],[6,"P534","","",null,null],[6,"N534","","",null,null],[6,"U535","","",null,null],[6,"P535","","",null,null],[6,"N535","","",null,null],[6,"U536","","",null,null],[6,"P536","","",null,null],[6,"N536","","",null,null],[6,"U537","","",null,null],[6,"P537","","",null,null],[6,"N537","","",null,null],[6,"U538","","",null,null],[6,"P538","","",null,null],[6,"N538","","",null,null],[6,"U539","","",null,null],[6,"P539","","",null,null],[6,"N539","","",null,null],[6,"U540","","",null,null],[6,"P540","","",null,null],[6,"N540","","",null,null],[6,"U541","","",null,null],[6,"P541","","",null,null],[6,"N541","","",null,null],[6,"U542","","",null,null],[6,"P542","","",null,null],[6,"N542","","",null,null],[6,"U543","","",null,null],[6,"P543","","",null,null],[6,"N543","","",null,null],[6,"U544","","",null,null],[6,"P544","","",null,null],[6,"N544","","",null,null],[6,"U545","","",null,null],[6,"P545","","",null,null],[6,"N545","","",null,null],[6,"U546","","",null,null],[6,"P546","","",null,null],[6,"N546","","",null,null],[6,"U547","","",null,null],[6,"P547","","",null,null],[6,"N547","","",null,null],[6,"U548","","",null,null],[6,"P548","","",null,null],[6,"N548","","",null,null],[6,"U549","","",null,null],[6,"P549","","",null,null],[6,"N549","","",null,null],[6,"U550","","",null,null],[6,"P550","","",null,null],[6,"N550","","",null,null],[6,"U551","","",null,null],[6,"P551","","",null,null],[6,"N551","","",null,null],[6,"U552","","",null,null],[6,"P552","","",null,null],[6,"N552","","",null,null],[6,"U553","","",null,null],[6,"P553","","",null,null],[6,"N553","","",null,null],[6,"U554","","",null,null],[6,"P554","","",null,null],[6,"N554","","",null,null],[6,"U555","","",null,null],[6,"P555","","",null,null],[6,"N555","","",null,null],[6,"U556","","",null,null],[6,"P556","","",null,null],[6,"N556","","",null,null],[6,"U557","","",null,null],[6,"P557","","",null,null],[6,"N557","","",null,null],[6,"U558","","",null,null],[6,"P558","","",null,null],[6,"N558","","",null,null],[6,"U559","","",null,null],[6,"P559","","",null,null],[6,"N559","","",null,null],[6,"U560","","",null,null],[6,"P560","","",null,null],[6,"N560","","",null,null],[6,"U561","","",null,null],[6,"P561","","",null,null],[6,"N561","","",null,null],[6,"U562","","",null,null],[6,"P562","","",null,null],[6,"N562","","",null,null],[6,"U563","","",null,null],[6,"P563","","",null,null],[6,"N563","","",null,null],[6,"U564","","",null,null],[6,"P564","","",null,null],[6,"N564","","",null,null],[6,"U565","","",null,null],[6,"P565","","",null,null],[6,"N565","","",null,null],[6,"U566","","",null,null],[6,"P566","","",null,null],[6,"N566","","",null,null],[6,"U567","","",null,null],[6,"P567","","",null,null],[6,"N567","","",null,null],[6,"U568","","",null,null],[6,"P568","","",null,null],[6,"N568","","",null,null],[6,"U569","","",null,null],[6,"P569","","",null,null],[6,"N569","","",null,null],[6,"U570","","",null,null],[6,"P570","","",null,null],[6,"N570","","",null,null],[6,"U571","","",null,null],[6,"P571","","",null,null],[6,"N571","","",null,null],[6,"U572","","",null,null],[6,"P572","","",null,null],[6,"N572","","",null,null],[6,"U573","","",null,null],[6,"P573","","",null,null],[6,"N573","","",null,null],[6,"U574","","",null,null],[6,"P574","","",null,null],[6,"N574","","",null,null],[6,"U575","","",null,null],[6,"P575","","",null,null],[6,"N575","","",null,null],[6,"U576","","",null,null],[6,"P576","","",null,null],[6,"N576","","",null,null],[6,"U577","","",null,null],[6,"P577","","",null,null],[6,"N577","","",null,null],[6,"U578","","",null,null],[6,"P578","","",null,null],[6,"N578","","",null,null],[6,"U579","","",null,null],[6,"P579","","",null,null],[6,"N579","","",null,null],[6,"U580","","",null,null],[6,"P580","","",null,null],[6,"N580","","",null,null],[6,"U581","","",null,null],[6,"P581","","",null,null],[6,"N581","","",null,null],[6,"U582","","",null,null],[6,"P582","","",null,null],[6,"N582","","",null,null],[6,"U583","","",null,null],[6,"P583","","",null,null],[6,"N583","","",null,null],[6,"U584","","",null,null],[6,"P584","","",null,null],[6,"N584","","",null,null],[6,"U585","","",null,null],[6,"P585","","",null,null],[6,"N585","","",null,null],[6,"U586","","",null,null],[6,"P586","","",null,null],[6,"N586","","",null,null],[6,"U587","","",null,null],[6,"P587","","",null,null],[6,"N587","","",null,null],[6,"U588","","",null,null],[6,"P588","","",null,null],[6,"N588","","",null,null],[6,"U589","","",null,null],[6,"P589","","",null,null],[6,"N589","","",null,null],[6,"U590","","",null,null],[6,"P590","","",null,null],[6,"N590","","",null,null],[6,"U591","","",null,null],[6,"P591","","",null,null],[6,"N591","","",null,null],[6,"U592","","",null,null],[6,"P592","","",null,null],[6,"N592","","",null,null],[6,"U593","","",null,null],[6,"P593","","",null,null],[6,"N593","","",null,null],[6,"U594","","",null,null],[6,"P594","","",null,null],[6,"N594","","",null,null],[6,"U595","","",null,null],[6,"P595","","",null,null],[6,"N595","","",null,null],[6,"U596","","",null,null],[6,"P596","","",null,null],[6,"N596","","",null,null],[6,"U597","","",null,null],[6,"P597","","",null,null],[6,"N597","","",null,null],[6,"U598","","",null,null],[6,"P598","","",null,null],[6,"N598","","",null,null],[6,"U599","","",null,null],[6,"P599","","",null,null],[6,"N599","","",null,null],[6,"U600","","",null,null],[6,"P600","","",null,null],[6,"N600","","",null,null],[6,"U601","","",null,null],[6,"P601","","",null,null],[6,"N601","","",null,null],[6,"U602","","",null,null],[6,"P602","","",null,null],[6,"N602","","",null,null],[6,"U603","","",null,null],[6,"P603","","",null,null],[6,"N603","","",null,null],[6,"U604","","",null,null],[6,"P604","","",null,null],[6,"N604","","",null,null],[6,"U605","","",null,null],[6,"P605","","",null,null],[6,"N605","","",null,null],[6,"U606","","",null,null],[6,"P606","","",null,null],[6,"N606","","",null,null],[6,"U607","","",null,null],[6,"P607","","",null,null],[6,"N607","","",null,null],[6,"U608","","",null,null],[6,"P608","","",null,null],[6,"N608","","",null,null],[6,"U609","","",null,null],[6,"P609","","",null,null],[6,"N609","","",null,null],[6,"U610","","",null,null],[6,"P610","","",null,null],[6,"N610","","",null,null],[6,"U611","","",null,null],[6,"P611","","",null,null],[6,"N611","","",null,null],[6,"U612","","",null,null],[6,"P612","","",null,null],[6,"N612","","",null,null],[6,"U613","","",null,null],[6,"P613","","",null,null],[6,"N613","","",null,null],[6,"U614","","",null,null],[6,"P614","","",null,null],[6,"N614","","",null,null],[6,"U615","","",null,null],[6,"P615","","",null,null],[6,"N615","","",null,null],[6,"U616","","",null,null],[6,"P616","","",null,null],[6,"N616","","",null,null],[6,"U617","","",null,null],[6,"P617","","",null,null],[6,"N617","","",null,null],[6,"U618","","",null,null],[6,"P618","","",null,null],[6,"N618","","",null,null],[6,"U619","","",null,null],[6,"P619","","",null,null],[6,"N619","","",null,null],[6,"U620","","",null,null],[6,"P620","","",null,null],[6,"N620","","",null,null],[6,"U621","","",null,null],[6,"P621","","",null,null],[6,"N621","","",null,null],[6,"U622","","",null,null],[6,"P622","","",null,null],[6,"N622","","",null,null],[6,"U623","","",null,null],[6,"P623","","",null,null],[6,"N623","","",null,null],[6,"U624","","",null,null],[6,"P624","","",null,null],[6,"N624","","",null,null],[6,"U625","","",null,null],[6,"P625","","",null,null],[6,"N625","","",null,null],[6,"U626","","",null,null],[6,"P626","","",null,null],[6,"N626","","",null,null],[6,"U627","","",null,null],[6,"P627","","",null,null],[6,"N627","","",null,null],[6,"U628","","",null,null],[6,"P628","","",null,null],[6,"N628","","",null,null],[6,"U629","","",null,null],[6,"P629","","",null,null],[6,"N629","","",null,null],[6,"U630","","",null,null],[6,"P630","","",null,null],[6,"N630","","",null,null],[6,"U631","","",null,null],[6,"P631","","",null,null],[6,"N631","","",null,null],[6,"U632","","",null,null],[6,"P632","","",null,null],[6,"N632","","",null,null],[6,"U633","","",null,null],[6,"P633","","",null,null],[6,"N633","","",null,null],[6,"U634","","",null,null],[6,"P634","","",null,null],[6,"N634","","",null,null],[6,"U635","","",null,null],[6,"P635","","",null,null],[6,"N635","","",null,null],[6,"U636","","",null,null],[6,"P636","","",null,null],[6,"N636","","",null,null],[6,"U637","","",null,null],[6,"P637","","",null,null],[6,"N637","","",null,null],[6,"U638","","",null,null],[6,"P638","","",null,null],[6,"N638","","",null,null],[6,"U639","","",null,null],[6,"P639","","",null,null],[6,"N639","","",null,null],[6,"U640","","",null,null],[6,"P640","","",null,null],[6,"N640","","",null,null],[6,"U641","","",null,null],[6,"P641","","",null,null],[6,"N641","","",null,null],[6,"U642","","",null,null],[6,"P642","","",null,null],[6,"N642","","",null,null],[6,"U643","","",null,null],[6,"P643","","",null,null],[6,"N643","","",null,null],[6,"U644","","",null,null],[6,"P644","","",null,null],[6,"N644","","",null,null],[6,"U645","","",null,null],[6,"P645","","",null,null],[6,"N645","","",null,null],[6,"U646","","",null,null],[6,"P646","","",null,null],[6,"N646","","",null,null],[6,"U647","","",null,null],[6,"P647","","",null,null],[6,"N647","","",null,null],[6,"U648","","",null,null],[6,"P648","","",null,null],[6,"N648","","",null,null],[6,"U649","","",null,null],[6,"P649","","",null,null],[6,"N649","","",null,null],[6,"U650","","",null,null],[6,"P650","","",null,null],[6,"N650","","",null,null],[6,"U651","","",null,null],[6,"P651","","",null,null],[6,"N651","","",null,null],[6,"U652","","",null,null],[6,"P652","","",null,null],[6,"N652","","",null,null],[6,"U653","","",null,null],[6,"P653","","",null,null],[6,"N653","","",null,null],[6,"U654","","",null,null],[6,"P654","","",null,null],[6,"N654","","",null,null],[6,"U655","","",null,null],[6,"P655","","",null,null],[6,"N655","","",null,null],[6,"U656","","",null,null],[6,"P656","","",null,null],[6,"N656","","",null,null],[6,"U657","","",null,null],[6,"P657","","",null,null],[6,"N657","","",null,null],[6,"U658","","",null,null],[6,"P658","","",null,null],[6,"N658","","",null,null],[6,"U659","","",null,null],[6,"P659","","",null,null],[6,"N659","","",null,null],[6,"U660","","",null,null],[6,"P660","","",null,null],[6,"N660","","",null,null],[6,"U661","","",null,null],[6,"P661","","",null,null],[6,"N661","","",null,null],[6,"U662","","",null,null],[6,"P662","","",null,null],[6,"N662","","",null,null],[6,"U663","","",null,null],[6,"P663","","",null,null],[6,"N663","","",null,null],[6,"U664","","",null,null],[6,"P664","","",null,null],[6,"N664","","",null,null],[6,"U665","","",null,null],[6,"P665","","",null,null],[6,"N665","","",null,null],[6,"U666","","",null,null],[6,"P666","","",null,null],[6,"N666","","",null,null],[6,"U667","","",null,null],[6,"P667","","",null,null],[6,"N667","","",null,null],[6,"U668","","",null,null],[6,"P668","","",null,null],[6,"N668","","",null,null],[6,"U669","","",null,null],[6,"P669","","",null,null],[6,"N669","","",null,null],[6,"U670","","",null,null],[6,"P670","","",null,null],[6,"N670","","",null,null],[6,"U671","","",null,null],[6,"P671","","",null,null],[6,"N671","","",null,null],[6,"U672","","",null,null],[6,"P672","","",null,null],[6,"N672","","",null,null],[6,"U673","","",null,null],[6,"P673","","",null,null],[6,"N673","","",null,null],[6,"U674","","",null,null],[6,"P674","","",null,null],[6,"N674","","",null,null],[6,"U675","","",null,null],[6,"P675","","",null,null],[6,"N675","","",null,null],[6,"U676","","",null,null],[6,"P676","","",null,null],[6,"N676","","",null,null],[6,"U677","","",null,null],[6,"P677","","",null,null],[6,"N677","","",null,null],[6,"U678","","",null,null],[6,"P678","","",null,null],[6,"N678","","",null,null],[6,"U679","","",null,null],[6,"P679","","",null,null],[6,"N679","","",null,null],[6,"U680","","",null,null],[6,"P680","","",null,null],[6,"N680","","",null,null],[6,"U681","","",null,null],[6,"P681","","",null,null],[6,"N681","","",null,null],[6,"U682","","",null,null],[6,"P682","","",null,null],[6,"N682","","",null,null],[6,"U683","","",null,null],[6,"P683","","",null,null],[6,"N683","","",null,null],[6,"U684","","",null,null],[6,"P684","","",null,null],[6,"N684","","",null,null],[6,"U685","","",null,null],[6,"P685","","",null,null],[6,"N685","","",null,null],[6,"U686","","",null,null],[6,"P686","","",null,null],[6,"N686","","",null,null],[6,"U687","","",null,null],[6,"P687","","",null,null],[6,"N687","","",null,null],[6,"U688","","",null,null],[6,"P688","","",null,null],[6,"N688","","",null,null],[6,"U689","","",null,null],[6,"P689","","",null,null],[6,"N689","","",null,null],[6,"U690","","",null,null],[6,"P690","","",null,null],[6,"N690","","",null,null],[6,"U691","","",null,null],[6,"P691","","",null,null],[6,"N691","","",null,null],[6,"U692","","",null,null],[6,"P692","","",null,null],[6,"N692","","",null,null],[6,"U693","","",null,null],[6,"P693","","",null,null],[6,"N693","","",null,null],[6,"U694","","",null,null],[6,"P694","","",null,null],[6,"N694","","",null,null],[6,"U695","","",null,null],[6,"P695","","",null,null],[6,"N695","","",null,null],[6,"U696","","",null,null],[6,"P696","","",null,null],[6,"N696","","",null,null],[6,"U697","","",null,null],[6,"P697","","",null,null],[6,"N697","","",null,null],[6,"U698","","",null,null],[6,"P698","","",null,null],[6,"N698","","",null,null],[6,"U699","","",null,null],[6,"P699","","",null,null],[6,"N699","","",null,null],[6,"U700","","",null,null],[6,"P700","","",null,null],[6,"N700","","",null,null],[6,"U701","","",null,null],[6,"P701","","",null,null],[6,"N701","","",null,null],[6,"U702","","",null,null],[6,"P702","","",null,null],[6,"N702","","",null,null],[6,"U703","","",null,null],[6,"P703","","",null,null],[6,"N703","","",null,null],[6,"U704","","",null,null],[6,"P704","","",null,null],[6,"N704","","",null,null],[6,"U705","","",null,null],[6,"P705","","",null,null],[6,"N705","","",null,null],[6,"U706","","",null,null],[6,"P706","","",null,null],[6,"N706","","",null,null],[6,"U707","","",null,null],[6,"P707","","",null,null],[6,"N707","","",null,null],[6,"U708","","",null,null],[6,"P708","","",null,null],[6,"N708","","",null,null],[6,"U709","","",null,null],[6,"P709","","",null,null],[6,"N709","","",null,null],[6,"U710","","",null,null],[6,"P710","","",null,null],[6,"N710","","",null,null],[6,"U711","","",null,null],[6,"P711","","",null,null],[6,"N711","","",null,null],[6,"U712","","",null,null],[6,"P712","","",null,null],[6,"N712","","",null,null],[6,"U713","","",null,null],[6,"P713","","",null,null],[6,"N713","","",null,null],[6,"U714","","",null,null],[6,"P714","","",null,null],[6,"N714","","",null,null],[6,"U715","","",null,null],[6,"P715","","",null,null],[6,"N715","","",null,null],[6,"U716","","",null,null],[6,"P716","","",null,null],[6,"N716","","",null,null],[6,"U717","","",null,null],[6,"P717","","",null,null],[6,"N717","","",null,null],[6,"U718","","",null,null],[6,"P718","","",null,null],[6,"N718","","",null,null],[6,"U719","","",null,null],[6,"P719","","",null,null],[6,"N719","","",null,null],[6,"U720","","",null,null],[6,"P720","","",null,null],[6,"N720","","",null,null],[6,"U721","","",null,null],[6,"P721","","",null,null],[6,"N721","","",null,null],[6,"U722","","",null,null],[6,"P722","","",null,null],[6,"N722","","",null,null],[6,"U723","","",null,null],[6,"P723","","",null,null],[6,"N723","","",null,null],[6,"U724","","",null,null],[6,"P724","","",null,null],[6,"N724","","",null,null],[6,"U725","","",null,null],[6,"P725","","",null,null],[6,"N725","","",null,null],[6,"U726","","",null,null],[6,"P726","","",null,null],[6,"N726","","",null,null],[6,"U727","","",null,null],[6,"P727","","",null,null],[6,"N727","","",null,null],[6,"U728","","",null,null],[6,"P728","","",null,null],[6,"N728","","",null,null],[6,"U729","","",null,null],[6,"P729","","",null,null],[6,"N729","","",null,null],[6,"U730","","",null,null],[6,"P730","","",null,null],[6,"N730","","",null,null],[6,"U731","","",null,null],[6,"P731","","",null,null],[6,"N731","","",null,null],[6,"U732","","",null,null],[6,"P732","","",null,null],[6,"N732","","",null,null],[6,"U733","","",null,null],[6,"P733","","",null,null],[6,"N733","","",null,null],[6,"U734","","",null,null],[6,"P734","","",null,null],[6,"N734","","",null,null],[6,"U735","","",null,null],[6,"P735","","",null,null],[6,"N735","","",null,null],[6,"U736","","",null,null],[6,"P736","","",null,null],[6,"N736","","",null,null],[6,"U737","","",null,null],[6,"P737","","",null,null],[6,"N737","","",null,null],[6,"U738","","",null,null],[6,"P738","","",null,null],[6,"N738","","",null,null],[6,"U739","","",null,null],[6,"P739","","",null,null],[6,"N739","","",null,null],[6,"U740","","",null,null],[6,"P740","","",null,null],[6,"N740","","",null,null],[6,"U741","","",null,null],[6,"P741","","",null,null],[6,"N741","","",null,null],[6,"U742","","",null,null],[6,"P742","","",null,null],[6,"N742","","",null,null],[6,"U743","","",null,null],[6,"P743","","",null,null],[6,"N743","","",null,null],[6,"U744","","",null,null],[6,"P744","","",null,null],[6,"N744","","",null,null],[6,"U745","","",null,null],[6,"P745","","",null,null],[6,"N745","","",null,null],[6,"U746","","",null,null],[6,"P746","","",null,null],[6,"N746","","",null,null],[6,"U747","","",null,null],[6,"P747","","",null,null],[6,"N747","","",null,null],[6,"U748","","",null,null],[6,"P748","","",null,null],[6,"N748","","",null,null],[6,"U749","","",null,null],[6,"P749","","",null,null],[6,"N749","","",null,null],[6,"U750","","",null,null],[6,"P750","","",null,null],[6,"N750","","",null,null],[6,"U751","","",null,null],[6,"P751","","",null,null],[6,"N751","","",null,null],[6,"U752","","",null,null],[6,"P752","","",null,null],[6,"N752","","",null,null],[6,"U753","","",null,null],[6,"P753","","",null,null],[6,"N753","","",null,null],[6,"U754","","",null,null],[6,"P754","","",null,null],[6,"N754","","",null,null],[6,"U755","","",null,null],[6,"P755","","",null,null],[6,"N755","","",null,null],[6,"U756","","",null,null],[6,"P756","","",null,null],[6,"N756","","",null,null],[6,"U757","","",null,null],[6,"P757","","",null,null],[6,"N757","","",null,null],[6,"U758","","",null,null],[6,"P758","","",null,null],[6,"N758","","",null,null],[6,"U759","","",null,null],[6,"P759","","",null,null],[6,"N759","","",null,null],[6,"U760","","",null,null],[6,"P760","","",null,null],[6,"N760","","",null,null],[6,"U761","","",null,null],[6,"P761","","",null,null],[6,"N761","","",null,null],[6,"U762","","",null,null],[6,"P762","","",null,null],[6,"N762","","",null,null],[6,"U763","","",null,null],[6,"P763","","",null,null],[6,"N763","","",null,null],[6,"U764","","",null,null],[6,"P764","","",null,null],[6,"N764","","",null,null],[6,"U765","","",null,null],[6,"P765","","",null,null],[6,"N765","","",null,null],[6,"U766","","",null,null],[6,"P766","","",null,null],[6,"N766","","",null,null],[6,"U767","","",null,null],[6,"P767","","",null,null],[6,"N767","","",null,null],[6,"U768","","",null,null],[6,"P768","","",null,null],[6,"N768","","",null,null],[6,"U769","","",null,null],[6,"P769","","",null,null],[6,"N769","","",null,null],[6,"U770","","",null,null],[6,"P770","","",null,null],[6,"N770","","",null,null],[6,"U771","","",null,null],[6,"P771","","",null,null],[6,"N771","","",null,null],[6,"U772","","",null,null],[6,"P772","","",null,null],[6,"N772","","",null,null],[6,"U773","","",null,null],[6,"P773","","",null,null],[6,"N773","","",null,null],[6,"U774","","",null,null],[6,"P774","","",null,null],[6,"N774","","",null,null],[6,"U775","","",null,null],[6,"P775","","",null,null],[6,"N775","","",null,null],[6,"U776","","",null,null],[6,"P776","","",null,null],[6,"N776","","",null,null],[6,"U777","","",null,null],[6,"P777","","",null,null],[6,"N777","","",null,null],[6,"U778","","",null,null],[6,"P778","","",null,null],[6,"N778","","",null,null],[6,"U779","","",null,null],[6,"P779","","",null,null],[6,"N779","","",null,null],[6,"U780","","",null,null],[6,"P780","","",null,null],[6,"N780","","",null,null],[6,"U781","","",null,null],[6,"P781","","",null,null],[6,"N781","","",null,null],[6,"U782","","",null,null],[6,"P782","","",null,null],[6,"N782","","",null,null],[6,"U783","","",null,null],[6,"P783","","",null,null],[6,"N783","","",null,null],[6,"U784","","",null,null],[6,"P784","","",null,null],[6,"N784","","",null,null],[6,"U785","","",null,null],[6,"P785","","",null,null],[6,"N785","","",null,null],[6,"U786","","",null,null],[6,"P786","","",null,null],[6,"N786","","",null,null],[6,"U787","","",null,null],[6,"P787","","",null,null],[6,"N787","","",null,null],[6,"U788","","",null,null],[6,"P788","","",null,null],[6,"N788","","",null,null],[6,"U789","","",null,null],[6,"P789","","",null,null],[6,"N789","","",null,null],[6,"U790","","",null,null],[6,"P790","","",null,null],[6,"N790","","",null,null],[6,"U791","","",null,null],[6,"P791","","",null,null],[6,"N791","","",null,null],[6,"U792","","",null,null],[6,"P792","","",null,null],[6,"N792","","",null,null],[6,"U793","","",null,null],[6,"P793","","",null,null],[6,"N793","","",null,null],[6,"U794","","",null,null],[6,"P794","","",null,null],[6,"N794","","",null,null],[6,"U795","","",null,null],[6,"P795","","",null,null],[6,"N795","","",null,null],[6,"U796","","",null,null],[6,"P796","","",null,null],[6,"N796","","",null,null],[6,"U797","","",null,null],[6,"P797","","",null,null],[6,"N797","","",null,null],[6,"U798","","",null,null],[6,"P798","","",null,null],[6,"N798","","",null,null],[6,"U799","","",null,null],[6,"P799","","",null,null],[6,"N799","","",null,null],[6,"U800","","",null,null],[6,"P800","","",null,null],[6,"N800","","",null,null],[6,"U801","","",null,null],[6,"P801","","",null,null],[6,"N801","","",null,null],[6,"U802","","",null,null],[6,"P802","","",null,null],[6,"N802","","",null,null],[6,"U803","","",null,null],[6,"P803","","",null,null],[6,"N803","","",null,null],[6,"U804","","",null,null],[6,"P804","","",null,null],[6,"N804","","",null,null],[6,"U805","","",null,null],[6,"P805","","",null,null],[6,"N805","","",null,null],[6,"U806","","",null,null],[6,"P806","","",null,null],[6,"N806","","",null,null],[6,"U807","","",null,null],[6,"P807","","",null,null],[6,"N807","","",null,null],[6,"U808","","",null,null],[6,"P808","","",null,null],[6,"N808","","",null,null],[6,"U809","","",null,null],[6,"P809","","",null,null],[6,"N809","","",null,null],[6,"U810","","",null,null],[6,"P810","","",null,null],[6,"N810","","",null,null],[6,"U811","","",null,null],[6,"P811","","",null,null],[6,"N811","","",null,null],[6,"U812","","",null,null],[6,"P812","","",null,null],[6,"N812","","",null,null],[6,"U813","","",null,null],[6,"P813","","",null,null],[6,"N813","","",null,null],[6,"U814","","",null,null],[6,"P814","","",null,null],[6,"N814","","",null,null],[6,"U815","","",null,null],[6,"P815","","",null,null],[6,"N815","","",null,null],[6,"U816","","",null,null],[6,"P816","","",null,null],[6,"N816","","",null,null],[6,"U817","","",null,null],[6,"P817","","",null,null],[6,"N817","","",null,null],[6,"U818","","",null,null],[6,"P818","","",null,null],[6,"N818","","",null,null],[6,"U819","","",null,null],[6,"P819","","",null,null],[6,"N819","","",null,null],[6,"U820","","",null,null],[6,"P820","","",null,null],[6,"N820","","",null,null],[6,"U821","","",null,null],[6,"P821","","",null,null],[6,"N821","","",null,null],[6,"U822","","",null,null],[6,"P822","","",null,null],[6,"N822","","",null,null],[6,"U823","","",null,null],[6,"P823","","",null,null],[6,"N823","","",null,null],[6,"U824","","",null,null],[6,"P824","","",null,null],[6,"N824","","",null,null],[6,"U825","","",null,null],[6,"P825","","",null,null],[6,"N825","","",null,null],[6,"U826","","",null,null],[6,"P826","","",null,null],[6,"N826","","",null,null],[6,"U827","","",null,null],[6,"P827","","",null,null],[6,"N827","","",null,null],[6,"U828","","",null,null],[6,"P828","","",null,null],[6,"N828","","",null,null],[6,"U829","","",null,null],[6,"P829","","",null,null],[6,"N829","","",null,null],[6,"U830","","",null,null],[6,"P830","","",null,null],[6,"N830","","",null,null],[6,"U831","","",null,null],[6,"P831","","",null,null],[6,"N831","","",null,null],[6,"U832","","",null,null],[6,"P832","","",null,null],[6,"N832","","",null,null],[6,"U833","","",null,null],[6,"P833","","",null,null],[6,"N833","","",null,null],[6,"U834","","",null,null],[6,"P834","","",null,null],[6,"N834","","",null,null],[6,"U835","","",null,null],[6,"P835","","",null,null],[6,"N835","","",null,null],[6,"U836","","",null,null],[6,"P836","","",null,null],[6,"N836","","",null,null],[6,"U837","","",null,null],[6,"P837","","",null,null],[6,"N837","","",null,null],[6,"U838","","",null,null],[6,"P838","","",null,null],[6,"N838","","",null,null],[6,"U839","","",null,null],[6,"P839","","",null,null],[6,"N839","","",null,null],[6,"U840","","",null,null],[6,"P840","","",null,null],[6,"N840","","",null,null],[6,"U841","","",null,null],[6,"P841","","",null,null],[6,"N841","","",null,null],[6,"U842","","",null,null],[6,"P842","","",null,null],[6,"N842","","",null,null],[6,"U843","","",null,null],[6,"P843","","",null,null],[6,"N843","","",null,null],[6,"U844","","",null,null],[6,"P844","","",null,null],[6,"N844","","",null,null],[6,"U845","","",null,null],[6,"P845","","",null,null],[6,"N845","","",null,null],[6,"U846","","",null,null],[6,"P846","","",null,null],[6,"N846","","",null,null],[6,"U847","","",null,null],[6,"P847","","",null,null],[6,"N847","","",null,null],[6,"U848","","",null,null],[6,"P848","","",null,null],[6,"N848","","",null,null],[6,"U849","","",null,null],[6,"P849","","",null,null],[6,"N849","","",null,null],[6,"U850","","",null,null],[6,"P850","","",null,null],[6,"N850","","",null,null],[6,"U851","","",null,null],[6,"P851","","",null,null],[6,"N851","","",null,null],[6,"U852","","",null,null],[6,"P852","","",null,null],[6,"N852","","",null,null],[6,"U853","","",null,null],[6,"P853","","",null,null],[6,"N853","","",null,null],[6,"U854","","",null,null],[6,"P854","","",null,null],[6,"N854","","",null,null],[6,"U855","","",null,null],[6,"P855","","",null,null],[6,"N855","","",null,null],[6,"U856","","",null,null],[6,"P856","","",null,null],[6,"N856","","",null,null],[6,"U857","","",null,null],[6,"P857","","",null,null],[6,"N857","","",null,null],[6,"U858","","",null,null],[6,"P858","","",null,null],[6,"N858","","",null,null],[6,"U859","","",null,null],[6,"P859","","",null,null],[6,"N859","","",null,null],[6,"U860","","",null,null],[6,"P860","","",null,null],[6,"N860","","",null,null],[6,"U861","","",null,null],[6,"P861","","",null,null],[6,"N861","","",null,null],[6,"U862","","",null,null],[6,"P862","","",null,null],[6,"N862","","",null,null],[6,"U863","","",null,null],[6,"P863","","",null,null],[6,"N863","","",null,null],[6,"U864","","",null,null],[6,"P864","","",null,null],[6,"N864","","",null,null],[6,"U865","","",null,null],[6,"P865","","",null,null],[6,"N865","","",null,null],[6,"U866","","",null,null],[6,"P866","","",null,null],[6,"N866","","",null,null],[6,"U867","","",null,null],[6,"P867","","",null,null],[6,"N867","","",null,null],[6,"U868","","",null,null],[6,"P868","","",null,null],[6,"N868","","",null,null],[6,"U869","","",null,null],[6,"P869","","",null,null],[6,"N869","","",null,null],[6,"U870","","",null,null],[6,"P870","","",null,null],[6,"N870","","",null,null],[6,"U871","","",null,null],[6,"P871","","",null,null],[6,"N871","","",null,null],[6,"U872","","",null,null],[6,"P872","","",null,null],[6,"N872","","",null,null],[6,"U873","","",null,null],[6,"P873","","",null,null],[6,"N873","","",null,null],[6,"U874","","",null,null],[6,"P874","","",null,null],[6,"N874","","",null,null],[6,"U875","","",null,null],[6,"P875","","",null,null],[6,"N875","","",null,null],[6,"U876","","",null,null],[6,"P876","","",null,null],[6,"N876","","",null,null],[6,"U877","","",null,null],[6,"P877","","",null,null],[6,"N877","","",null,null],[6,"U878","","",null,null],[6,"P878","","",null,null],[6,"N878","","",null,null],[6,"U879","","",null,null],[6,"P879","","",null,null],[6,"N879","","",null,null],[6,"U880","","",null,null],[6,"P880","","",null,null],[6,"N880","","",null,null],[6,"U881","","",null,null],[6,"P881","","",null,null],[6,"N881","","",null,null],[6,"U882","","",null,null],[6,"P882","","",null,null],[6,"N882","","",null,null],[6,"U883","","",null,null],[6,"P883","","",null,null],[6,"N883","","",null,null],[6,"U884","","",null,null],[6,"P884","","",null,null],[6,"N884","","",null,null],[6,"U885","","",null,null],[6,"P885","","",null,null],[6,"N885","","",null,null],[6,"U886","","",null,null],[6,"P886","","",null,null],[6,"N886","","",null,null],[6,"U887","","",null,null],[6,"P887","","",null,null],[6,"N887","","",null,null],[6,"U888","","",null,null],[6,"P888","","",null,null],[6,"N888","","",null,null],[6,"U889","","",null,null],[6,"P889","","",null,null],[6,"N889","","",null,null],[6,"U890","","",null,null],[6,"P890","","",null,null],[6,"N890","","",null,null],[6,"U891","","",null,null],[6,"P891","","",null,null],[6,"N891","","",null,null],[6,"U892","","",null,null],[6,"P892","","",null,null],[6,"N892","","",null,null],[6,"U893","","",null,null],[6,"P893","","",null,null],[6,"N893","","",null,null],[6,"U894","","",null,null],[6,"P894","","",null,null],[6,"N894","","",null,null],[6,"U895","","",null,null],[6,"P895","","",null,null],[6,"N895","","",null,null],[6,"U896","","",null,null],[6,"P896","","",null,null],[6,"N896","","",null,null],[6,"U897","","",null,null],[6,"P897","","",null,null],[6,"N897","","",null,null],[6,"U898","","",null,null],[6,"P898","","",null,null],[6,"N898","","",null,null],[6,"U899","","",null,null],[6,"P899","","",null,null],[6,"N899","","",null,null],[6,"U900","","",null,null],[6,"P900","","",null,null],[6,"N900","","",null,null],[6,"U901","","",null,null],[6,"P901","","",null,null],[6,"N901","","",null,null],[6,"U902","","",null,null],[6,"P902","","",null,null],[6,"N902","","",null,null],[6,"U903","","",null,null],[6,"P903","","",null,null],[6,"N903","","",null,null],[6,"U904","","",null,null],[6,"P904","","",null,null],[6,"N904","","",null,null],[6,"U905","","",null,null],[6,"P905","","",null,null],[6,"N905","","",null,null],[6,"U906","","",null,null],[6,"P906","","",null,null],[6,"N906","","",null,null],[6,"U907","","",null,null],[6,"P907","","",null,null],[6,"N907","","",null,null],[6,"U908","","",null,null],[6,"P908","","",null,null],[6,"N908","","",null,null],[6,"U909","","",null,null],[6,"P909","","",null,null],[6,"N909","","",null,null],[6,"U910","","",null,null],[6,"P910","","",null,null],[6,"N910","","",null,null],[6,"U911","","",null,null],[6,"P911","","",null,null],[6,"N911","","",null,null],[6,"U912","","",null,null],[6,"P912","","",null,null],[6,"N912","","",null,null],[6,"U913","","",null,null],[6,"P913","","",null,null],[6,"N913","","",null,null],[6,"U914","","",null,null],[6,"P914","","",null,null],[6,"N914","","",null,null],[6,"U915","","",null,null],[6,"P915","","",null,null],[6,"N915","","",null,null],[6,"U916","","",null,null],[6,"P916","","",null,null],[6,"N916","","",null,null],[6,"U917","","",null,null],[6,"P917","","",null,null],[6,"N917","","",null,null],[6,"U918","","",null,null],[6,"P918","","",null,null],[6,"N918","","",null,null],[6,"U919","","",null,null],[6,"P919","","",null,null],[6,"N919","","",null,null],[6,"U920","","",null,null],[6,"P920","","",null,null],[6,"N920","","",null,null],[6,"U921","","",null,null],[6,"P921","","",null,null],[6,"N921","","",null,null],[6,"U922","","",null,null],[6,"P922","","",null,null],[6,"N922","","",null,null],[6,"U923","","",null,null],[6,"P923","","",null,null],[6,"N923","","",null,null],[6,"U924","","",null,null],[6,"P924","","",null,null],[6,"N924","","",null,null],[6,"U925","","",null,null],[6,"P925","","",null,null],[6,"N925","","",null,null],[6,"U926","","",null,null],[6,"P926","","",null,null],[6,"N926","","",null,null],[6,"U927","","",null,null],[6,"P927","","",null,null],[6,"N927","","",null,null],[6,"U928","","",null,null],[6,"P928","","",null,null],[6,"N928","","",null,null],[6,"U929","","",null,null],[6,"P929","","",null,null],[6,"N929","","",null,null],[6,"U930","","",null,null],[6,"P930","","",null,null],[6,"N930","","",null,null],[6,"U931","","",null,null],[6,"P931","","",null,null],[6,"N931","","",null,null],[6,"U932","","",null,null],[6,"P932","","",null,null],[6,"N932","","",null,null],[6,"U933","","",null,null],[6,"P933","","",null,null],[6,"N933","","",null,null],[6,"U934","","",null,null],[6,"P934","","",null,null],[6,"N934","","",null,null],[6,"U935","","",null,null],[6,"P935","","",null,null],[6,"N935","","",null,null],[6,"U936","","",null,null],[6,"P936","","",null,null],[6,"N936","","",null,null],[6,"U937","","",null,null],[6,"P937","","",null,null],[6,"N937","","",null,null],[6,"U938","","",null,null],[6,"P938","","",null,null],[6,"N938","","",null,null],[6,"U939","","",null,null],[6,"P939","","",null,null],[6,"N939","","",null,null],[6,"U940","","",null,null],[6,"P940","","",null,null],[6,"N940","","",null,null],[6,"U941","","",null,null],[6,"P941","","",null,null],[6,"N941","","",null,null],[6,"U942","","",null,null],[6,"P942","","",null,null],[6,"N942","","",null,null],[6,"U943","","",null,null],[6,"P943","","",null,null],[6,"N943","","",null,null],[6,"U944","","",null,null],[6,"P944","","",null,null],[6,"N944","","",null,null],[6,"U945","","",null,null],[6,"P945","","",null,null],[6,"N945","","",null,null],[6,"U946","","",null,null],[6,"P946","","",null,null],[6,"N946","","",null,null],[6,"U947","","",null,null],[6,"P947","","",null,null],[6,"N947","","",null,null],[6,"U948","","",null,null],[6,"P948","","",null,null],[6,"N948","","",null,null],[6,"U949","","",null,null],[6,"P949","","",null,null],[6,"N949","","",null,null],[6,"U950","","",null,null],[6,"P950","","",null,null],[6,"N950","","",null,null],[6,"U951","","",null,null],[6,"P951","","",null,null],[6,"N951","","",null,null],[6,"U952","","",null,null],[6,"P952","","",null,null],[6,"N952","","",null,null],[6,"U953","","",null,null],[6,"P953","","",null,null],[6,"N953","","",null,null],[6,"U954","","",null,null],[6,"P954","","",null,null],[6,"N954","","",null,null],[6,"U955","","",null,null],[6,"P955","","",null,null],[6,"N955","","",null,null],[6,"U956","","",null,null],[6,"P956","","",null,null],[6,"N956","","",null,null],[6,"U957","","",null,null],[6,"P957","","",null,null],[6,"N957","","",null,null],[6,"U958","","",null,null],[6,"P958","","",null,null],[6,"N958","","",null,null],[6,"U959","","",null,null],[6,"P959","","",null,null],[6,"N959","","",null,null],[6,"U960","","",null,null],[6,"P960","","",null,null],[6,"N960","","",null,null],[6,"U961","","",null,null],[6,"P961","","",null,null],[6,"N961","","",null,null],[6,"U962","","",null,null],[6,"P962","","",null,null],[6,"N962","","",null,null],[6,"U963","","",null,null],[6,"P963","","",null,null],[6,"N963","","",null,null],[6,"U964","","",null,null],[6,"P964","","",null,null],[6,"N964","","",null,null],[6,"U965","","",null,null],[6,"P965","","",null,null],[6,"N965","","",null,null],[6,"U966","","",null,null],[6,"P966","","",null,null],[6,"N966","","",null,null],[6,"U967","","",null,null],[6,"P967","","",null,null],[6,"N967","","",null,null],[6,"U968","","",null,null],[6,"P968","","",null,null],[6,"N968","","",null,null],[6,"U969","","",null,null],[6,"P969","","",null,null],[6,"N969","","",null,null],[6,"U970","","",null,null],[6,"P970","","",null,null],[6,"N970","","",null,null],[6,"U971","","",null,null],[6,"P971","","",null,null],[6,"N971","","",null,null],[6,"U972","","",null,null],[6,"P972","","",null,null],[6,"N972","","",null,null],[6,"U973","","",null,null],[6,"P973","","",null,null],[6,"N973","","",null,null],[6,"U974","","",null,null],[6,"P974","","",null,null],[6,"N974","","",null,null],[6,"U975","","",null,null],[6,"P975","","",null,null],[6,"N975","","",null,null],[6,"U976","","",null,null],[6,"P976","","",null,null],[6,"N976","","",null,null],[6,"U977","","",null,null],[6,"P977","","",null,null],[6,"N977","","",null,null],[6,"U978","","",null,null],[6,"P978","","",null,null],[6,"N978","","",null,null],[6,"U979","","",null,null],[6,"P979","","",null,null],[6,"N979","","",null,null],[6,"U980","","",null,null],[6,"P980","","",null,null],[6,"N980","","",null,null],[6,"U981","","",null,null],[6,"P981","","",null,null],[6,"N981","","",null,null],[6,"U982","","",null,null],[6,"P982","","",null,null],[6,"N982","","",null,null],[6,"U983","","",null,null],[6,"P983","","",null,null],[6,"N983","","",null,null],[6,"U984","","",null,null],[6,"P984","","",null,null],[6,"N984","","",null,null],[6,"U985","","",null,null],[6,"P985","","",null,null],[6,"N985","","",null,null],[6,"U986","","",null,null],[6,"P986","","",null,null],[6,"N986","","",null,null],[6,"U987","","",null,null],[6,"P987","","",null,null],[6,"N987","","",null,null],[6,"U988","","",null,null],[6,"P988","","",null,null],[6,"N988","","",null,null],[6,"U989","","",null,null],[6,"P989","","",null,null],[6,"N989","","",null,null],[6,"U990","","",null,null],[6,"P990","","",null,null],[6,"N990","","",null,null],[6,"U991","","",null,null],[6,"P991","","",null,null],[6,"N991","","",null,null],[6,"U992","","",null,null],[6,"P992","","",null,null],[6,"N992","","",null,null],[6,"U993","","",null,null],[6,"P993","","",null,null],[6,"N993","","",null,null],[6,"U994","","",null,null],[6,"P994","","",null,null],[6,"N994","","",null,null],[6,"U995","","",null,null],[6,"P995","","",null,null],[6,"N995","","",null,null],[6,"U996","","",null,null],[6,"P996","","",null,null],[6,"N996","","",null,null],[6,"U997","","",null,null],[6,"P997","","",null,null],[6,"N997","","",null,null],[6,"U998","","",null,null],[6,"P998","","",null,null],[6,"N998","","",null,null],[6,"U999","","",null,null],[6,"P999","","",null,null],[6,"N999","","",null,null],[6,"U1000","","",null,null],[6,"P1000","","",null,null],[6,"N1000","","",null,null],[6,"U1001","","",null,null],[6,"P1001","","",null,null],[6,"N1001","","",null,null],[6,"U1002","","",null,null],[6,"P1002","","",null,null],[6,"N1002","","",null,null],[6,"U1003","","",null,null],[6,"P1003","","",null,null],[6,"N1003","","",null,null],[6,"U1004","","",null,null],[6,"P1004","","",null,null],[6,"N1004","","",null,null],[6,"U1005","","",null,null],[6,"P1005","","",null,null],[6,"N1005","","",null,null],[6,"U1006","","",null,null],[6,"P1006","","",null,null],[6,"N1006","","",null,null],[6,"U1007","","",null,null],[6,"P1007","","",null,null],[6,"N1007","","",null,null],[6,"U1008","","",null,null],[6,"P1008","","",null,null],[6,"N1008","","",null,null],[6,"U1009","","",null,null],[6,"P1009","","",null,null],[6,"N1009","","",null,null],[6,"U1010","","",null,null],[6,"P1010","","",null,null],[6,"N1010","","",null,null],[6,"U1011","","",null,null],[6,"P1011","","",null,null],[6,"N1011","","",null,null],[6,"U1012","","",null,null],[6,"P1012","","",null,null],[6,"N1012","","",null,null],[6,"U1013","","",null,null],[6,"P1013","","",null,null],[6,"N1013","","",null,null],[6,"U1014","","",null,null],[6,"P1014","","",null,null],[6,"N1014","","",null,null],[6,"U1015","","",null,null],[6,"P1015","","",null,null],[6,"N1015","","",null,null],[6,"U1016","","",null,null],[6,"P1016","","",null,null],[6,"N1016","","",null,null],[6,"U1017","","",null,null],[6,"P1017","","",null,null],[6,"N1017","","",null,null],[6,"U1018","","",null,null],[6,"P1018","","",null,null],[6,"N1018","","",null,null],[6,"U1019","","",null,null],[6,"P1019","","",null,null],[6,"N1019","","",null,null],[6,"U1020","","",null,null],[6,"P1020","","",null,null],[6,"N1020","","",null,null],[6,"U1021","","",null,null],[6,"P1021","","",null,null],[6,"N1021","","",null,null],[6,"U1022","","",null,null],[6,"P1022","","",null,null],[6,"N1022","","",null,null],[6,"U1023","","",null,null],[6,"P1023","","",null,null],[6,"N1023","","",null,null],[6,"U1024","","",null,null],[6,"P1024","","",null,null],[6,"N1024","","",null,null],[6,"U2048","","",null,null],[6,"P2048","","",null,null],[6,"N2048","","",null,null],[6,"U4096","","",null,null],[6,"P4096","","",null,null],[6,"N4096","","",null,null],[6,"U8192","","",null,null],[6,"P8192","","",null,null],[6,"N8192","","",null,null],[6,"U16384","","",null,null],[6,"P16384","","",null,null],[6,"N16384","","",null,null],[6,"U32768","","",null,null],[6,"P32768","","",null,null],[6,"N32768","","",null,null],[6,"U65536","","",null,null],[6,"P65536","","",null,null],[6,"N65536","","",null,null],[6,"U131072","","",null,null],[6,"P131072","","",null,null],[6,"N131072","","",null,null],[6,"U262144","","",null,null],[6,"P262144","","",null,null],[6,"N262144","","",null,null],[6,"U524288","","",null,null],[6,"P524288","","",null,null],[6,"N524288","","",null,null],[6,"U1048576","","",null,null],[6,"P1048576","","",null,null],[6,"N1048576","","",null,null],[6,"U2097152","","",null,null],[6,"P2097152","","",null,null],[6,"N2097152","","",null,null],[6,"U4194304","","",null,null],[6,"P4194304","","",null,null],[6,"N4194304","","",null,null],[6,"U8388608","","",null,null],[6,"P8388608","","",null,null],[6,"N8388608","","",null,null],[6,"U16777216","","",null,null],[6,"P16777216","","",null,null],[6,"N16777216","","",null,null],[6,"U33554432","","",null,null],[6,"P33554432","","",null,null],[6,"N33554432","","",null,null],[6,"U67108864","","",null,null],[6,"P67108864","","",null,null],[6,"N67108864","","",null,null],[6,"U134217728","","",null,null],[6,"P134217728","","",null,null],[6,"N134217728","","",null,null],[6,"U268435456","","",null,null],[6,"P268435456","","",null,null],[6,"N268435456","","",null,null],[6,"U536870912","","",null,null],[6,"P536870912","","",null,null],[6,"N536870912","","",null,null],[6,"U1073741824","","",null,null],[6,"P1073741824","","",null,null],[6,"N1073741824","","",null,null],[6,"U2147483648","","",null,null],[6,"P2147483648","","",null,null],[6,"N2147483648","","",null,null],[6,"U4294967296","","",null,null],[6,"P4294967296","","",null,null],[6,"N4294967296","","",null,null],[6,"U8589934592","","",null,null],[6,"P8589934592","","",null,null],[6,"N8589934592","","",null,null],[6,"U17179869184","","",null,null],[6,"P17179869184","","",null,null],[6,"N17179869184","","",null,null],[6,"U34359738368","","",null,null],[6,"P34359738368","","",null,null],[6,"N34359738368","","",null,null],[6,"U68719476736","","",null,null],[6,"P68719476736","","",null,null],[6,"N68719476736","","",null,null],[6,"U137438953472","","",null,null],[6,"P137438953472","","",null,null],[6,"N137438953472","","",null,null],[6,"U274877906944","","",null,null],[6,"P274877906944","","",null,null],[6,"N274877906944","","",null,null],[6,"U549755813888","","",null,null],[6,"P549755813888","","",null,null],[6,"N549755813888","","",null,null],[6,"U1099511627776","","",null,null],[6,"P1099511627776","","",null,null],[6,"N1099511627776","","",null,null],[6,"U2199023255552","","",null,null],[6,"P2199023255552","","",null,null],[6,"N2199023255552","","",null,null],[6,"U4398046511104","","",null,null],[6,"P4398046511104","","",null,null],[6,"N4398046511104","","",null,null],[6,"U8796093022208","","",null,null],[6,"P8796093022208","","",null,null],[6,"N8796093022208","","",null,null],[6,"U17592186044416","","",null,null],[6,"P17592186044416","","",null,null],[6,"N17592186044416","","",null,null],[6,"U35184372088832","","",null,null],[6,"P35184372088832","","",null,null],[6,"N35184372088832","","",null,null],[6,"U70368744177664","","",null,null],[6,"P70368744177664","","",null,null],[6,"N70368744177664","","",null,null],[6,"U140737488355328","","",null,null],[6,"P140737488355328","","",null,null],[6,"N140737488355328","","",null,null],[6,"U281474976710656","","",null,null],[6,"P281474976710656","","",null,null],[6,"N281474976710656","","",null,null],[6,"U562949953421312","","",null,null],[6,"P562949953421312","","",null,null],[6,"N562949953421312","","",null,null],[6,"U1125899906842624","","",null,null],[6,"P1125899906842624","","",null,null],[6,"N1125899906842624","","",null,null],[6,"U2251799813685248","","",null,null],[6,"P2251799813685248","","",null,null],[6,"N2251799813685248","","",null,null],[6,"U4503599627370496","","",null,null],[6,"P4503599627370496","","",null,null],[6,"N4503599627370496","","",null,null],[6,"U9007199254740992","","",null,null],[6,"P9007199254740992","","",null,null],[6,"N9007199254740992","","",null,null],[6,"U18014398509481984","","",null,null],[6,"P18014398509481984","","",null,null],[6,"N18014398509481984","","",null,null],[6,"U36028797018963968","","",null,null],[6,"P36028797018963968","","",null,null],[6,"N36028797018963968","","",null,null],[6,"U72057594037927936","","",null,null],[6,"P72057594037927936","","",null,null],[6,"N72057594037927936","","",null,null],[6,"U144115188075855872","","",null,null],[6,"P144115188075855872","","",null,null],[6,"N144115188075855872","","",null,null],[6,"U288230376151711744","","",null,null],[6,"P288230376151711744","","",null,null],[6,"N288230376151711744","","",null,null],[6,"U576460752303423488","","",null,null],[6,"P576460752303423488","","",null,null],[6,"N576460752303423488","","",null,null],[6,"U1152921504606846976","","",null,null],[6,"P1152921504606846976","","",null,null],[6,"N1152921504606846976","","",null,null],[6,"U2305843009213693952","","",null,null],[6,"P2305843009213693952","","",null,null],[6,"N2305843009213693952","","",null,null],[6,"U4611686018427387904","","",null,null],[6,"P4611686018427387904","","",null,null],[6,"N4611686018427387904","","",null,null],[6,"U9223372036854775808","","",null,null],[6,"U10000","","",null,null],[6,"P10000","","",null,null],[6,"N10000","","",null,null],[6,"U100000","","",null,null],[6,"P100000","","",null,null],[6,"N100000","","",null,null],[6,"U1000000","","",null,null],[6,"P1000000","","",null,null],[6,"N1000000","","",null,null],[6,"U10000000","","",null,null],[6,"P10000000","","",null,null],[6,"N10000000","","",null,null],[6,"U100000000","","",null,null],[6,"P100000000","","",null,null],[6,"N100000000","","",null,null],[6,"U1000000000","","",null,null],[6,"P1000000000","","",null,null],[6,"N1000000000","","",null,null],[6,"U10000000000","","",null,null],[6,"P10000000000","","",null,null],[6,"N10000000000","","",null,null],[6,"U100000000000","","",null,null],[6,"P100000000000","","",null,null],[6,"N100000000000","","",null,null],[6,"U1000000000000","","",null,null],[6,"P1000000000000","","",null,null],[6,"N1000000000000","","",null,null],[6,"U10000000000000","","",null,null],[6,"P10000000000000","","",null,null],[6,"N10000000000000","","",null,null],[6,"U100000000000000","","",null,null],[6,"P100000000000000","","",null,null],[6,"N100000000000000","","",null,null],[6,"U1000000000000000","","",null,null],[6,"P1000000000000000","","",null,null],[6,"N1000000000000000","","",null,null],[6,"U10000000000000000","","",null,null],[6,"P10000000000000000","","",null,null],[6,"N10000000000000000","","",null,null],[6,"U100000000000000000","","",null,null],[6,"P100000000000000000","","",null,null],[6,"N100000000000000000","","",null,null],[6,"U1000000000000000000","","",null,null],[6,"P1000000000000000000","","",null,null],[6,"N1000000000000000000","","",null,null],[6,"U10000000000000000000","","",null,null],[0,"bit","typenum","Type-level bits.",null,null],[3,"B0","typenum::bit","The type-level bit 0.",null,null],[3,"B1","","The type-level bit 1.",null,null],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"b0"}],"o":{"n":"bool"}}],[11,"cmp","","",0,{"i":[{"n":"self"},{"n":"b0"}],"o":{"n":"ordering"}}],[11,"partial_cmp","","",0,{"i":[{"n":"self"},{"n":"b0"}],"o":{"g":["ordering"],"n":"option"}}],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"b0"}}],[11,"hash","","",0,null],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"default","","",0,{"o":{"n":"b0"}}],[11,"new","","Instantiates a singleton representing this bit.",0,{"o":{"n":"b0"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"b1"}],"o":{"n":"bool"}}],[11,"cmp","","",1,{"i":[{"n":"self"},{"n":"b1"}],"o":{"n":"ordering"}}],[11,"partial_cmp","","",1,{"i":[{"n":"self"},{"n":"b1"}],"o":{"g":["ordering"],"n":"option"}}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"b1"}}],[11,"hash","","",1,null],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"default","","",1,{"o":{"n":"b1"}}],[11,"new","","Instantiates a singleton representing this bit.",1,{"o":{"n":"b1"}}],[11,"to_u8","","",0,{"o":{"n":"u8"}}],[11,"to_bool","","",0,{"o":{"n":"bool"}}],[11,"to_u8","","",1,{"o":{"n":"u8"}}],[11,"to_bool","","",1,{"o":{"n":"bool"}}],[11,"not","","",0,null],[11,"not","","",1,null],[11,"bitand","","",0,null],[11,"bitand","","",1,null],[11,"bitand","","",1,null],[11,"bitor","","",0,null],[11,"bitor","","",0,null],[11,"bitor","","",1,null],[11,"bitxor","","",0,null],[11,"bitxor","","",1,null],[11,"bitxor","","",0,null],[11,"bitxor","","",1,null],[11,"min","","",0,{"i":[{"n":"self"},{"n":"b0"}],"o":{"n":"b0"}}],[11,"min","","",0,{"i":[{"n":"self"},{"n":"b1"}],"o":{"n":"b0"}}],[11,"min","","",1,{"i":[{"n":"self"},{"n":"b0"}],"o":{"n":"b0"}}],[11,"min","","",1,{"i":[{"n":"self"},{"n":"b1"}],"o":{"n":"b1"}}],[11,"max","","",0,{"i":[{"n":"self"},{"n":"b0"}],"o":{"n":"b0"}}],[11,"max","","",0,{"i":[{"n":"self"},{"n":"b1"}],"o":{"n":"b1"}}],[11,"max","","",1,{"i":[{"n":"self"},{"n":"b0"}],"o":{"n":"b1"}}],[11,"max","","",1,{"i":[{"n":"self"},{"n":"b1"}],"o":{"n":"b1"}}],[0,"uint","typenum","Type-level unsigned integers.",null,null],[3,"UTerm","typenum::uint","The terminating type for `UInt`; it always comes after the most significant bit. `UTerm` by itself represents zero, which is aliased to `U0`.",null,null],[3,"UInt","","`UInt` is defined recursively, where `B` is the least significant bit and `U` is the rest of the number. Conceptually, `U` should be bound by the trait `Unsigned` and `B` should be bound by the trait `Bit`, but enforcing these bounds causes linear instead of logrithmic scaling in some places, so they are left off for now. They may be enforced in future.",null,null],[6,"GetBitOut","","",null,null],[6,"SetBitOut","","Alias for the result of calling `SetBit`: `SetBitOut<N, I, B> = <N as SetBit<I, B>>::Output`.",null,null],[8,"GetBit","","",null,null],[16,"Output","","",2,null],[8,"SetBit","","A type operator that, when implemented for unsigned integer `N`, sets the bit at position `I` to `B`.",null,null],[16,"Output","","",3,null],[11,"eq","","",4,{"i":[{"n":"self"},{"n":"uterm"}],"o":{"n":"bool"}}],[11,"cmp","","",4,{"i":[{"n":"self"},{"n":"uterm"}],"o":{"n":"ordering"}}],[11,"partial_cmp","","",4,{"i":[{"n":"self"},{"n":"uterm"}],"o":{"g":["ordering"],"n":"option"}}],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"uterm"}}],[11,"hash","","",4,null],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"default","","",4,{"o":{"n":"uterm"}}],[11,"new","","Instantiates a singleton representing this unsigned integer.",4,{"o":{"n":"uterm"}}],[11,"to_u8","","",4,{"o":{"n":"u8"}}],[11,"to_u16","","",4,{"o":{"n":"u16"}}],[11,"to_u32","","",4,{"o":{"n":"u32"}}],[11,"to_u64","","",4,{"o":{"n":"u64"}}],[11,"to_usize","","",4,{"o":{"n":"usize"}}],[11,"to_i8","","",4,{"o":{"n":"i8"}}],[11,"to_i16","","",4,{"o":{"n":"i16"}}],[11,"to_i32","","",4,{"o":{"n":"i32"}}],[11,"to_i64","","",4,{"o":{"n":"i64"}}],[11,"to_isize","","",4,{"o":{"n":"isize"}}],[11,"eq","","",5,{"i":[{"n":"self"},{"n":"uint"}],"o":{"n":"bool"}}],[11,"ne","","",5,{"i":[{"n":"self"},{"n":"uint"}],"o":{"n":"bool"}}],[11,"cmp","","",5,{"i":[{"n":"self"},{"n":"uint"}],"o":{"n":"ordering"}}],[11,"partial_cmp","","",5,{"i":[{"n":"self"},{"n":"uint"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",5,{"i":[{"n":"self"},{"n":"uint"}],"o":{"n":"bool"}}],[11,"le","","",5,{"i":[{"n":"self"},{"n":"uint"}],"o":{"n":"bool"}}],[11,"gt","","",5,{"i":[{"n":"self"},{"n":"uint"}],"o":{"n":"bool"}}],[11,"ge","","",5,{"i":[{"n":"self"},{"n":"uint"}],"o":{"n":"bool"}}],[11,"clone","","",5,{"i":[{"n":"self"}],"o":{"n":"uint"}}],[11,"hash","","",5,null],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"default","","",5,{"o":{"n":"uint"}}],[11,"new","","Instantiates a singleton representing this unsigned integer.",5,{"o":{"n":"uint"}}],[11,"to_u8","","",5,{"o":{"n":"u8"}}],[11,"to_u16","","",5,{"o":{"n":"u16"}}],[11,"to_u32","","",5,{"o":{"n":"u32"}}],[11,"to_u64","","",5,{"o":{"n":"u64"}}],[11,"to_usize","","",5,{"o":{"n":"usize"}}],[11,"to_i8","","",5,{"o":{"n":"i8"}}],[11,"to_i16","","",5,{"o":{"n":"i16"}}],[11,"to_i32","","",5,{"o":{"n":"i32"}}],[11,"to_i64","","",5,{"o":{"n":"i64"}}],[11,"to_isize","","",5,{"o":{"n":"isize"}}],[11,"len","","",4,null],[11,"len","","",5,null],[11,"add","","",4,null],[11,"add","","",5,null],[11,"add","","",4,null],[11,"add","","",5,null],[11,"add","","",5,null],[11,"add","","",4,null],[11,"add","","",5,null],[11,"add","","",5,null],[11,"add","","",5,null],[11,"add","","",5,null],[11,"add","","",5,null],[11,"sub","","",4,null],[11,"sub","","",5,null],[11,"sub","","",5,null],[11,"sub","","",5,null],[11,"sub","","",5,null],[11,"sub","","",4,null],[11,"sub","","",5,null],[11,"bitand","","",4,null],[11,"bitand","","",5,null],[11,"bitor","","",4,null],[11,"bitor","","",5,null],[11,"bitor","","",5,null],[11,"bitor","","",5,null],[11,"bitor","","",5,null],[11,"bitor","","",5,null],[11,"bitxor","","",4,null],[11,"bitxor","","",5,null],[11,"shl","","",4,null],[11,"shl","","",4,null],[11,"shl","","",5,null],[11,"shl","","",5,null],[11,"shl","","",5,null],[11,"shl","","",4,null],[11,"shl","","",5,null],[11,"shr","","",4,null],[11,"shr","","",5,null],[11,"shr","","",4,null],[11,"shr","","",4,null],[11,"shr","","",5,null],[11,"shr","","",5,null],[11,"shr","","",5,null],[11,"mul","","",5,null],[11,"mul","","",4,null],[11,"mul","","",4,null],[11,"mul","","",5,null],[11,"mul","","",5,null],[11,"mul","","",4,null],[11,"mul","","",5,null],[11,"mul","","",5,null],[11,"div","","",4,null],[11,"div","","",5,null],[11,"rem","","",4,null],[11,"rem","","",5,null],[11,"partial_div","","",4,null],[11,"partial_div","","",5,null],[11,"min","","",4,null],[11,"min","","",5,null],[11,"max","","",4,null],[11,"max","","",5,null],[0,"int","typenum","Type-level signed integers.",null,null],[3,"PInt","typenum::int","Type-level signed integers with positive sign.",null,null],[3,"NInt","","Type-level signed integers with negative sign.",null,null],[3,"Z0","","The type-level signed integer 0.",null,null],[11,"eq","","",6,{"i":[{"n":"self"},{"n":"pint"}],"o":{"n":"bool"}}],[11,"ne","","",6,{"i":[{"n":"self"},{"n":"pint"}],"o":{"n":"bool"}}],[11,"cmp","","",6,{"i":[{"n":"self"},{"n":"pint"}],"o":{"n":"ordering"}}],[11,"partial_cmp","","",6,{"i":[{"n":"self"},{"n":"pint"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",6,{"i":[{"n":"self"},{"n":"pint"}],"o":{"n":"bool"}}],[11,"le","","",6,{"i":[{"n":"self"},{"n":"pint"}],"o":{"n":"bool"}}],[11,"gt","","",6,{"i":[{"n":"self"},{"n":"pint"}],"o":{"n":"bool"}}],[11,"ge","","",6,{"i":[{"n":"self"},{"n":"pint"}],"o":{"n":"bool"}}],[11,"clone","","",6,{"i":[{"n":"self"}],"o":{"n":"pint"}}],[11,"hash","","",6,null],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"default","","",6,{"o":{"n":"pint"}}],[11,"eq","","",7,{"i":[{"n":"self"},{"n":"nint"}],"o":{"n":"bool"}}],[11,"ne","","",7,{"i":[{"n":"self"},{"n":"nint"}],"o":{"n":"bool"}}],[11,"cmp","","",7,{"i":[{"n":"self"},{"n":"nint"}],"o":{"n":"ordering"}}],[11,"partial_cmp","","",7,{"i":[{"n":"self"},{"n":"nint"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",7,{"i":[{"n":"self"},{"n":"nint"}],"o":{"n":"bool"}}],[11,"le","","",7,{"i":[{"n":"self"},{"n":"nint"}],"o":{"n":"bool"}}],[11,"gt","","",7,{"i":[{"n":"self"},{"n":"nint"}],"o":{"n":"bool"}}],[11,"ge","","",7,{"i":[{"n":"self"},{"n":"nint"}],"o":{"n":"bool"}}],[11,"clone","","",7,{"i":[{"n":"self"}],"o":{"n":"nint"}}],[11,"hash","","",7,null],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"default","","",7,{"o":{"n":"nint"}}],[11,"new","","Instantiates a singleton representing this strictly positive integer.",6,{"o":{"n":"pint"}}],[11,"new","","Instantiates a singleton representing this strictly negative integer.",7,{"o":{"n":"nint"}}],[11,"eq","","",8,{"i":[{"n":"self"},{"n":"z0"}],"o":{"n":"bool"}}],[11,"cmp","","",8,{"i":[{"n":"self"},{"n":"z0"}],"o":{"n":"ordering"}}],[11,"partial_cmp","","",8,{"i":[{"n":"self"},{"n":"z0"}],"o":{"g":["ordering"],"n":"option"}}],[11,"clone","","",8,{"i":[{"n":"self"}],"o":{"n":"z0"}}],[11,"hash","","",8,null],[11,"fmt","","",8,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"default","","",8,{"o":{"n":"z0"}}],[11,"new","","Instantiates a singleton representing the integer 0.",8,{"o":{"n":"z0"}}],[11,"to_i8","","",8,{"o":{"n":"i8"}}],[11,"to_i16","","",8,{"o":{"n":"i16"}}],[11,"to_i32","","",8,{"o":{"n":"i32"}}],[11,"to_i64","","",8,{"o":{"n":"i64"}}],[11,"to_isize","","",8,{"o":{"n":"isize"}}],[11,"to_i8","","",6,{"o":{"n":"i8"}}],[11,"to_i16","","",6,{"o":{"n":"i16"}}],[11,"to_i32","","",6,{"o":{"n":"i32"}}],[11,"to_i64","","",6,{"o":{"n":"i64"}}],[11,"to_isize","","",6,{"o":{"n":"isize"}}],[11,"to_i8","","",7,{"o":{"n":"i8"}}],[11,"to_i16","","",7,{"o":{"n":"i16"}}],[11,"to_i32","","",7,{"o":{"n":"i32"}}],[11,"to_i64","","",7,{"o":{"n":"i64"}}],[11,"to_isize","","",7,{"o":{"n":"isize"}}],[11,"neg","","",8,null],[11,"neg","","",6,null],[11,"neg","","",7,null],[11,"add","","",8,null],[11,"add","","",6,null],[11,"add","","",7,null],[11,"add","","",6,null],[11,"add","","",7,null],[11,"add","","",6,null],[11,"add","","",7,null],[11,"sub","","",8,null],[11,"sub","","",8,null],[11,"sub","","",8,null],[11,"sub","","",6,null],[11,"sub","","",7,null],[11,"sub","","",6,null],[11,"sub","","",7,null],[11,"sub","","",6,null],[11,"sub","","",7,null],[11,"mul","","",8,null],[11,"mul","","",6,null],[11,"mul","","",7,null],[11,"mul","","",6,null],[11,"mul","","",7,null],[11,"mul","","",6,null],[11,"mul","","",7,null],[11,"div","","",8,null],[11,"div","","",6,null],[11,"div","","",6,null],[11,"div","","",7,null],[11,"div","","",7,null],[11,"rem","","",8,null],[11,"rem","","",6,null],[11,"rem","","",6,null],[11,"rem","","",7,null],[11,"rem","","",7,null],[11,"powi","","",8,null],[11,"powi","","",8,null],[11,"powi","","",8,null],[11,"powi","","",9,null],[11,"powi","","",10,null],[11,"powi","","",10,null],[11,"powi","","",6,null],[11,"powi","","",7,null],[11,"powi","","",6,null],[11,"powi","","",7,null],[11,"powi","","",7,null],[11,"min","","",8,null],[11,"min","","",8,null],[11,"min","","",8,null],[11,"min","","",6,null],[11,"min","","",7,null],[11,"min","","",6,null],[11,"min","","",7,null],[11,"min","","",6,null],[11,"min","","",7,null],[11,"max","","",8,null],[11,"max","","",8,null],[11,"max","","",8,null],[11,"max","","",6,null],[11,"max","","",7,null],[11,"max","","",6,null],[11,"max","","",7,null],[11,"max","","",6,null],[11,"max","","",7,null],[0,"marker_traits","typenum","All of the marker traits used in typenum.",null,null],[8,"NonZero","typenum::marker_traits","A marker trait to designate that a type is not zero. All number types in this crate implement `NonZero` except `B0`, `U0`, and `Z0`.",null,null],[8,"Ord","","A Marker trait for the types `Greater`, `Equal`, and `Less`.",null,null],[10,"to_ordering","","",11,{"o":{"n":"ordering"}}],[8,"Bit","","The marker trait for compile time bits.",null,null],[18,"U8","","",12,null],[18,"BOOL","","",12,null],[10,"to_u8","","",12,{"o":{"n":"u8"}}],[10,"to_bool","","",12,{"o":{"n":"bool"}}],[8,"Unsigned","","The marker trait for compile time unsigned integers.",null,null],[18,"U8","","",13,null],[18,"U16","","",13,null],[18,"U32","","",13,null],[18,"U64","","",13,null],[18,"USIZE","","",13,null],[18,"I8","","",13,null],[18,"I16","","",13,null],[18,"I32","","",13,null],[18,"I64","","",13,null],[18,"ISIZE","","",13,null],[10,"to_u8","","",13,{"o":{"n":"u8"}}],[10,"to_u16","","",13,{"o":{"n":"u16"}}],[10,"to_u32","","",13,{"o":{"n":"u32"}}],[10,"to_u64","","",13,{"o":{"n":"u64"}}],[10,"to_usize","","",13,{"o":{"n":"usize"}}],[10,"to_i8","","",13,{"o":{"n":"i8"}}],[10,"to_i16","","",13,{"o":{"n":"i16"}}],[10,"to_i32","","",13,{"o":{"n":"i32"}}],[10,"to_i64","","",13,{"o":{"n":"i64"}}],[10,"to_isize","","",13,{"o":{"n":"isize"}}],[8,"Integer","","The marker trait for compile time signed integers.",null,null],[18,"I8","","",14,null],[18,"I16","","",14,null],[18,"I32","","",14,null],[18,"I64","","",14,null],[18,"ISIZE","","",14,null],[10,"to_i8","","",14,{"o":{"n":"i8"}}],[10,"to_i16","","",14,{"o":{"n":"i16"}}],[10,"to_i32","","",14,{"o":{"n":"i32"}}],[10,"to_i64","","",14,{"o":{"n":"i64"}}],[10,"to_isize","","",14,{"o":{"n":"isize"}}],[8,"TypeArray","","The marker trait for type-level arrays of type-level numbers.",null,null],[8,"PowerOfTwo","","The marker trait for type-level numbers which are a power of two.",null,null],[0,"type_operators","typenum","Useful type operators that are not defined in `core::ops`.",null,null],[8,"Same","typenum::type_operators","A type operator that ensures that `Rhs` is the same as `Self`, it is mainly useful for writing macros that can take arbitrary binary or unary operators.",null,null],[16,"Output","","Should always be `Self`",15,null],[8,"Abs","","A type operator that returns the absolute value.",null,null],[16,"Output","","The absolute value.",16,null],[8,"Pow","","A type operator that provides exponentiation by repeated squaring.",null,null],[16,"Output","","The result of the exponentiation.",17,null],[10,"powi","","This function isn't used in this crate, but may be useful for others. It is implemented for primitives.",17,null],[8,"Cmp","","A type operator for comparing `Self` and `Rhs`. It provides a similar functionality to the function `core::cmp::Ord::cmp` but for types.",null,null],[16,"Output","","The result of the comparison. It should only ever be one of `Greater`, `Less`, or `Equal`.",18,null],[8,"Len","","A type operator that gives the length of an `Array` or the number of bits in a `UInt`.",null,null],[16,"Output","","The length as a type-level unsigned integer.",19,null],[10,"len","","This function isn't used in this crate, but may be useful for others.",19,null],[8,"PartialDiv","","Division as a partial function. This type operator performs division just as `Div`, but is only defined when the result is an integer (i.e. there is no remainder).",null,null],[16,"Output","","The type of the result of the division",20,null],[10,"partial_div","","Method for performing the division",20,null],[8,"Min","","A type operator that returns the minimum of `Self` and `Rhs`.",null,null],[16,"Output","","The type of the minimum of `Self` and `Rhs`",21,null],[10,"min","","Method returning the minimum",21,null],[8,"Max","","A type operator that returns the maximum of `Self` and `Rhs`.",null,null],[16,"Output","","The type of the maximum of `Self` and `Rhs`",22,null],[10,"max","","Method returning the maximum",22,null],[8,"IsLess","","A type operator that returns `True` if `Self < Rhs`, otherwise returns `False`.",null,null],[16,"Output","","The type representing either `True` or `False`",23,null],[10,"is_less","","Method returning `True` or `False`.",23,null],[8,"IsEqual","","A type operator that returns `True` if `Self == Rhs`, otherwise returns `False`.",null,null],[16,"Output","","The type representing either `True` or `False`",24,null],[10,"is_equal","","Method returning `True` or `False`.",24,null],[8,"IsGreater","","A type operator that returns `True` if `Self > Rhs`, otherwise returns `False`.",null,null],[16,"Output","","The type representing either `True` or `False`",25,null],[10,"is_greater","","Method returning `True` or `False`.",25,null],[8,"IsLessOrEqual","","A type operator that returns `True` if `Self <= Rhs`, otherwise returns `False`.",null,null],[16,"Output","","The type representing either `True` or `False`",26,null],[10,"is_less_or_equal","","Method returning `True` or `False`.",26,null],[8,"IsNotEqual","","A type operator that returns `True` if `Self != Rhs`, otherwise returns `False`.",null,null],[16,"Output","","The type representing either `True` or `False`",27,null],[10,"is_not_equal","","Method returning `True` or `False`.",27,null],[8,"IsGreaterOrEqual","","A type operator that returns `True` if `Self >= Rhs`, otherwise returns `False`.",null,null],[16,"Output","","The type representing either `True` or `False`",28,null],[10,"is_greater_or_equal","","Method returning `True` or `False`.",28,null],[0,"operator_aliases","typenum","Aliases for the type operators used in this crate. Their purpose is to increase the ergonomics of performing operations on the types defined here. For even more ergonomics, consider using the `op!` macro instead.",null,null],[6,"And","typenum::operator_aliases","Alias for the associated type of `BitAnd`: `And<A, B> = <A as BitAnd<B>>::Output`",null,null],[6,"Or","","Alias for the associated type of `BitOr`: `Or<A, B> = <A as BitOr<B>>::Output`",null,null],[6,"Xor","","Alias for the associated type of `BitXor`: `Xor<A, B> = <A as BitXor<B>>::Output`",null,null],[6,"Shleft","","Alias for the associated type of `Shl`: `Shleft<A, B> = <A as Shl<B>>::Output`",null,null],[6,"Shright","","Alias for the associated type of `Shr`: `Shright<A, B> = <A as Shr<B>>::Output`",null,null],[6,"Sum","","Alias for the associated type of `Add`: `Sum<A, B> = <A as Add<B>>::Output`",null,null],[6,"Diff","","Alias for the associated type of `Sub`: `Diff<A, B> = <A as Sub<B>>::Output`",null,null],[6,"Prod","","Alias for the associated type of `Mul`: `Prod<A, B> = <A as Mul<B>>::Output`",null,null],[6,"Quot","","Alias for the associated type of `Div`: `Quot<A, B> = <A as Div<B>>::Output`",null,null],[6,"Mod","","Alias for the associated type of `Rem`: `Mod<A, B> = <A as Rem<B>>::Output`",null,null],[6,"PartialQuot","","Alias for the associated type of `PartialDiv`: `PartialQuot<A, B> = <A as PartialDiv<B>>::Output`",null,null],[6,"Negate","","Alias for the associated type of `Neg`: `Negate<A> = <A as Neg>::Output`",null,null],[6,"AbsVal","","Alias for the associated type of `Abs`: `AbsVal<A> = <A as Abs>::Output`",null,null],[6,"Exp","","Alias for the associated type of `Pow`: `Exp<A, B> = <A as Pow<B>>::Output`",null,null],[6,"Add1","","Alias to make it easy to add 1: `Add1<A> = <A as Add<B1>>::Output`",null,null],[6,"Sub1","","Alias to make it easy to subtract 1: `Sub1<A> = <A as Sub<B1>>::Output`",null,null],[6,"Square","","Alias to make it easy to square. `Square<A> = <A as Mul<A>>::Output`",null,null],[6,"Cube","","Alias to make it easy to cube. `Cube<A> = <Square<A> as Mul<A>>::Output`",null,null],[6,"Compare","","Alias for the associated type of `Cmp`: `Compare<A, B> = <A as Cmp<B>>::Output`",null,null],[6,"Length","","Alias for the associated type of `Len`: `Length<A> = <A as Len>::Output`",null,null],[6,"Minimum","","Alias for the associated type of `Min`: `Minimum<A, B> = <A as Min<B>>::Output`",null,null],[6,"Maximum","","Alias for the associated type of `Max`: `Maximum<A, B> = <A as Max<B>>::Output`",null,null],[6,"Le","","Alias for the associated type of `IsLess`: `Le<A, B> = <A as IsLess<B>>::Output`",null,null],[6,"Eq","","Alias for the associated type of `IsEqual`: `Eq<A, B> = <A as IsEqual<B>>::Output`",null,null],[6,"Gr","","Alias for the associated type of `IsGreater`: `Gr<A, B> = <A as IsGreater<B>>::Output`",null,null],[6,"GrEq","","Alias for the associated type of `IsGreaterOrEqual`: `GrEq<A, B> = <A as IsGreaterOrEqual<B>>::Output`",null,null],[6,"LeEq","","Alias for the associated type of `IsLessOrEqual`: `LeEq<A, B> = <A as IsLessOrEqual<B>>::Output`",null,null],[6,"NotEq","","Alias for the associated type of `IsNotEqual`: `NotEq<A, B> = <A as IsNotEqual<B>>::Output`",null,null],[0,"array","typenum","A type-level array of type-level numbers.",null,null],[3,"ATerm","typenum::array","The terminating type for type arrays.",null,null],[3,"TArr","","`TArr` is a type that acts as an array of types. It is defined similarly to `UInt`, only its values can be more than bits, and it is designed to act as an array. So you can only add two if they have the same number of elements, for example.",null,null],[11,"eq","","",29,{"i":[{"n":"self"},{"n":"aterm"}],"o":{"n":"bool"}}],[11,"cmp","","",29,{"i":[{"n":"self"},{"n":"aterm"}],"o":{"n":"ordering"}}],[11,"partial_cmp","","",29,{"i":[{"n":"self"},{"n":"aterm"}],"o":{"g":["ordering"],"n":"option"}}],[11,"clone","","",29,{"i":[{"n":"self"}],"o":{"n":"aterm"}}],[11,"hash","","",29,null],[11,"fmt","","",29,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",30,{"i":[{"n":"self"},{"n":"tarr"}],"o":{"n":"bool"}}],[11,"ne","","",30,{"i":[{"n":"self"},{"n":"tarr"}],"o":{"n":"bool"}}],[11,"cmp","","",30,{"i":[{"n":"self"},{"n":"tarr"}],"o":{"n":"ordering"}}],[11,"partial_cmp","","",30,{"i":[{"n":"self"},{"n":"tarr"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",30,{"i":[{"n":"self"},{"n":"tarr"}],"o":{"n":"bool"}}],[11,"le","","",30,{"i":[{"n":"self"},{"n":"tarr"}],"o":{"n":"bool"}}],[11,"gt","","",30,{"i":[{"n":"self"},{"n":"tarr"}],"o":{"n":"bool"}}],[11,"ge","","",30,{"i":[{"n":"self"},{"n":"tarr"}],"o":{"n":"bool"}}],[11,"clone","","",30,{"i":[{"n":"self"}],"o":{"n":"tarr"}}],[11,"hash","","",30,null],[11,"fmt","","",30,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"len","","",29,null],[11,"len","","",30,null],[11,"add","","",29,null],[11,"add","","",30,null],[11,"sub","","",29,null],[11,"sub","","",30,null],[11,"mul","","",29,null],[11,"mul","","",30,null],[11,"mul","typenum::int","",8,null],[11,"mul","","",6,null],[11,"mul","","",7,null],[11,"mul","","",8,null],[11,"mul","","",6,null],[11,"mul","","",7,null],[11,"div","typenum::array","",29,null],[11,"div","","",30,null],[11,"partial_div","","",29,null],[11,"partial_div","","",30,null],[11,"rem","","",29,null],[11,"rem","","",30,null],[11,"neg","","",29,null],[11,"neg","","",30,null],[11,"eq","typenum","",31,{"i":[{"n":"self"},{"n":"greater"}],"o":{"n":"bool"}}],[11,"cmp","","",31,{"i":[{"n":"self"},{"n":"greater"}],"o":{"n":"ordering"}}],[11,"partial_cmp","","",31,{"i":[{"n":"self"},{"n":"greater"}],"o":{"g":["ordering"],"n":"option"}}],[11,"clone","","",31,{"i":[{"n":"self"}],"o":{"n":"greater"}}],[11,"hash","","",31,null],[11,"fmt","","",31,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"default","","",31,{"o":{"n":"greater"}}],[11,"eq","","",32,{"i":[{"n":"self"},{"n":"less"}],"o":{"n":"bool"}}],[11,"cmp","","",32,{"i":[{"n":"self"},{"n":"less"}],"o":{"n":"ordering"}}],[11,"partial_cmp","","",32,{"i":[{"n":"self"},{"n":"less"}],"o":{"g":["ordering"],"n":"option"}}],[11,"clone","","",32,{"i":[{"n":"self"}],"o":{"n":"less"}}],[11,"hash","","",32,null],[11,"fmt","","",32,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"default","","",32,{"o":{"n":"less"}}],[11,"eq","","",33,{"i":[{"n":"self"},{"n":"equal"}],"o":{"n":"bool"}}],[11,"cmp","","",33,{"i":[{"n":"self"},{"n":"equal"}],"o":{"n":"ordering"}}],[11,"partial_cmp","","",33,{"i":[{"n":"self"},{"n":"equal"}],"o":{"g":["ordering"],"n":"option"}}],[11,"clone","","",33,{"i":[{"n":"self"}],"o":{"n":"equal"}}],[11,"hash","","",33,null],[11,"fmt","","",33,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"default","","",33,{"o":{"n":"equal"}}],[11,"to_ordering","","",31,{"o":{"n":"ordering"}}],[11,"to_ordering","","",32,{"o":{"n":"ordering"}}],[11,"to_ordering","","",33,{"o":{"n":"ordering"}}],[14,"op","","Convenient type operations.",null,null],[14,"cmp","","A convenience macro for comparing type numbers. Use `op!` instead.",null,null],[14,"tarr","","Create a new type-level arrray. Only usable on Rust 1.13.0 or newer.",null,null],[14,"assert_type_eq","","Asserts that two types are the same.",null,null],[14,"assert_type","","Asserts that a type is `True`, aka `B1`.",null,null]],"paths":[[3,"B0"],[3,"B1"],[8,"GetBit"],[8,"SetBit"],[3,"UTerm"],[3,"UInt"],[3,"PInt"],[3,"NInt"],[3,"Z0"],[6,"P1"],[6,"N1"],[8,"Ord"],[8,"Bit"],[8,"Unsigned"],[8,"Integer"],[8,"Same"],[8,"Abs"],[8,"Pow"],[8,"Cmp"],[8,"Len"],[8,"PartialDiv"],[8,"Min"],[8,"Max"],[8,"IsLess"],[8,"IsEqual"],[8,"IsGreater"],[8,"IsLessOrEqual"],[8,"IsNotEqual"],[8,"IsGreaterOrEqual"],[3,"ATerm"],[3,"TArr"],[3,"Greater"],[3,"Less"],[3,"Equal"]]};
searchIndex["unicode_xid"] = {"doc":"Determine if a `char` is a valid identifier for a parser and/or lexer according to Unicode Standard Annex #31 rules.","items":[[17,"UNICODE_VERSION","unicode_xid","The version of Unicode that this version of unicode-xid is based on.",null,null],[8,"UnicodeXID","","Methods for determining if a character is a valid identifier character.",null,null],[10,"is_xid_start","","Returns whether the specified character satisfies the 'XID_Start' Unicode property.",0,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[10,"is_xid_continue","","Returns whether the specified `char` satisfies the 'XID_Continue' Unicode property.",0,{"i":[{"n":"self"}],"o":{"n":"bool"}}]],"paths":[[8,"UnicodeXID"]]};
initSearch(searchIndex);
